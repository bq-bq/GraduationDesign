{
    "__update_time__": 1608099414.913474,
    "field_names": [
        "题目名",
        "问题",
        "主程序",
        "答案程序",
        "随机输入产生程序",
        "开始时间",
        "截止时间"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "text",
        "text",
        "time",
        "time"
    ],
    "foreign_keys": {},
    "primary_keys": [],
    "rows": [
        [
            "0.1 简介1",
            "<p>Try to write the program on page 71 of the slides.</p><p>\n<b>EXAMPLE OUTPUT</b></p><pre><pre>Hello world\n</pre>\n</pre><p></p>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tprintf(\"Hello world\\n\");\n}\n",
            "",
            1598925600,
            1603371600
        ],
        [
            "0.2 简介2",
            "<p>Try to write the program on page 82 of the slides.\n</p><p><b>EXAMPLE OUTPUT</b>\n</p><pre>x is 10\n</pre><p></p>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint x;\n\tx = 10;\n\tprintf(\"x is %d\", x);\n}\n",
            "",
            1598925600,
            1603371600
        ],
        [
            "0.3 简介3",
            "<p>Try to write the program on page 84 of the slides.</p><p><b>EXAMPLE INPUT</b>\n</p><pre>123\n</pre>\n<b>EXAMPLE OUTPUT</b>\n<pre>123\n</pre><p></p>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint size;\n\tscanf(\"%d\", &size);\n\tprintf(\"%d\\n\", size);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3))",
            1598925600,
            1603371600
        ],
        [
            "0.4 简介4",
            "<p>Try to write the program on page 86 of the slides.<br>\n</p><p><b>EXAMPLE INPUT<br></b><span style=\"color: rgb(34, 34, 34); font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px;\">12.3</span></p>\n<b>EXAMPLE OUTPUT</b>\n<pre>12.300000\n</pre><p></p>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tfloat size;\n\tscanf(\"%f\", &size);\n\tprintf(\"%f\\n\", size);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3)/10)",
            1598925600,
            1603371600
        ],
        [
            "0.5 简介5",
            "<p>Try to write the program on page 87 of the slides.<br>\n</p><p><b>EXAMPLE INPUT<br></b><span style=\"color: rgb(34, 34, 34); font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px;\">12.3</span></p>\n<b>EXAMPLE OUTPUT</b>\n<pre>12.300000\n</pre><p></p>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tdouble size;\n\tscanf(\"%lf\", &size);\n\tprintf(\"%lf\\n\", size);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3)/10)",
            1598925600,
            1603371600
        ],
        [
            "0.6 简介6",
            "<p>Try to write the program on page 91 of the slides.<br>\n</p><p><b>EXAMPLE INPUT<br></b><span style=\"color: rgb(34, 34, 34); font-family: SFMono-Regular, Menlo, Monaco, Consolas, &quot;Liberation Mono&quot;, &quot;Courier New&quot;, monospace; font-size: 14px;\">3.14</span></p>\n<b>EXAMPLE OUTPUT</b>\n<pre>-0.073292\n</pre><p></p>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n// 直接按课件上的方法有数值错误\ndouble sin(double x) {\n\tint sign = -1;\n\tdouble r = x;\n\tdouble t = x;\n\tfor (int i = 0; i < 10; ++ i) {\n\t\t// t = power(x, i * 2 + 1) / factorial(i * 2 + 1) 会有精度损失引起的错误\n\t\tt = t * x * x / (i * 2 + 2) / (i * 2 + 3); \n\t\tif (t < 1e-8) break;\n\t\tr += sign * t;\n\t\tsign *= -1;\t\t\n\t}\n\treturn r;\n}\n\nint main() {\n\tdouble x;\n\tdouble y;\n\tscanf(\"%lf\", &x);\n\ty = sin(x);\n\tprintf(\"%lf\\n\", y);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3)/100)",
            1598889600,
            1603371600
        ],
        [
            "0.7 简介7",
            "Try to write the program on page 92 of the slides.<br>\n<b>EXAMPLE OUTPUT</b>\n<pre>hello, world\nhello, world\nhello, world\nhello, world\nhello, world\nhello, world\nhello, world\nhello, world\nhello, world\nhello, world\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint i = 0;\n\twhile (i < 10) {\n\t\ti = i + 1;\n\t\tprintf(\"hello, world\\n\");\n\t}\n}\n",
            "",
            1598889600,
            1603371600
        ],
        [
            "0.8 简介8",
            "Try to write the program on page 94 of the slides.<br>\n<b>EXAMPLE INPUT</b>\n<pre>4\n</pre>\n<b>EXAMPLE OUTPUT</b>\n<pre>64.000000\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\ndouble power(double x, int exp) {\n\tdouble res = 1;\n\tint i = 0;\n\twhile (i < exp) {\n\t\ti = i + 1;\n\t\tres = res * x;\n\t}\n\treturn res;\n}\n\nint main() {\n\tdouble x;\n\tscanf(\"%lf\", &x);\n\tprintf(\"%lf\\n\", power(x, 3));\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(1))",
            1598889600,
            1603371600
        ],
        [
            "0.9 简介9",
            "Try to write the program on page 95 of the slides.<br>\n<b>EXAMPLE INPUT</b>\n<pre>5\n</pre>\n<b>EXAMPLE OUTPUT</b>\n<pre>120\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint factorial(int n) {\n\tint res = 1;\n\tint i = 0;\n\twhile (i < n) {\n\t\ti = i + 1;\n\t\tres = res * i;\n\t}\n\treturn res;\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tprintf(\"%d\\n\", factorial(n));\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(1))",
            1598889600,
            1603371600
        ],
        [
            "0.10 简介10",
            "Try to write the program on page 99 of the slides.<br>\n<b>EXAMPLE INPUT</b>\n<pre>Character Input and Output \n</pre>\n<b>EXAMPLE OUTPUT</b>\n<pre>Character\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tchar c;\n\tfor (int i = 0; i < 10; i = i + 1) {\n\t\tc = getchar();\n\t\tputchar(c);\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_str(20+rand_int(1)))",
            1598889600,
            1603371600
        ],
        [
            "0.11 简介11",
            "Try to write the program on page 101 of the slides.<br>\n<b>EXAMPLE INPUT</b>\n<pre>13\n</pre>\n<b>EXAMPLE OUTPUT</b>\n<pre>x is odd\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint x;\n\tscanf(\"%d\", &x);\n\tif (x % 2 == 0) {\n\t\tprintf(\"x is even\\n\");\n\t}\n\telse {\n\t\tprintf(\"x is odd\\n\");\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(2))",
            1598889600,
            1603371600
        ],
        [
            "0.12 简介12",
            "Try to write the program on page 73 of the slides.<br>\n<b>EXAMPLE INPUT</b>\n<pre>#include <stdio.h>\n\nint main() {\n\tint c;\n\tint lines = 0;\n\twhile ((c = getchar()) != EOF) {\n\t\tif (c == '\\n') {\n\t\t\t++ lines; // l = l + 1\n\t\t}\n\t}\n\tprintf(\"lines=%d\\n\", lines);\n}\n</stdio.h></pre>\n<b>EXAMPLE OUTPUT</b>\n<pre>lines=12\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint c;\n\tint lines = 0;\n\twhile ((c = getchar()) != EOF) {\n\t\tif (c == '\\n') {\n\t\t\t++ lines; // l = l + 1\n\t\t}\n\t}\n\tprintf(\"lines=%d\\n\", lines);\n}\n",
            "text = '''#include\n\nint main() {\n\tint c;\n\tint lines = 0;\n\twhile ((c = getchar()) != EOF) {\n\t\tif (c == '\\\\n') {\n\t\t\t++ lines; // l = l + 1\n\t\t}\n\t}\n\tprintf(\"lines=%d\\\\n\", lines);\n}\n'''\nprint(text, end='')",
            1598889600,
            1598965200
        ],
        [
            "0.13 简介13",
            "Try to write the program on page 103 of the slides.<br>\n<b>EXAMPLE OUTPUT</b>\n<pre>10\n40 50\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint numbers[5];\n\tnumbers[0] = 10;\n\tnumbers[1] = 20;\n\tnumbers[2] = 30;\n\tnumbers[3] = 40;\n\tnumbers[4] = 50;\n\tprintf(\"%d\\n\", numbers[0]);\n\tprintf(\"%d %d\\n\", numbers[3], numbers[4]);\n}\n",
            "",
            1598889600,
            1603371600
        ],
        [
            "0.14 简介14",
            "Try to write the program on page 104 of the slides.<br>\n<b>EXAMPLE OUTPUT</b>\n<pre>10\n20\n30\n40\n50\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint numbers[5];\n\tfor (int i = 0; i < 5; ++ i)\n\t\tnumbers[i] = (i + 1) * 10;\n\tfor (int i = 0; i < 5; ++ i)\t\n\t\tprintf(\"%d\\n\", numbers[i]);\n}\n",
            "",
            1598889600,
            1603371600
        ],
        [
            "0.15 简介15",
            "Try to write the program on page 105 of the slides.<br>\n<b>EXAMPLE INPUT</b>\n<pre>10 20 30 40 50\n</pre>\n<b>EXAMPLE OUTPUT</b>\n<pre>10\n20\n30\n40\n50\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint numbers[5];\n\tfor (int i = 0; i < 5; ++ i)\n\t\tscanf(\"%d\", &numbers[i]);\n\tfor (int i = 0; i < 5; ++ i)\t\n\t\tprintf(\"%d\\n\", numbers[i]);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nfor i in range(5):\n\tprint(rand_int(2), end=' ')",
            1598889600,
            1603371600
        ],
        [
            "0.16 简介16",
            "Try to write the program on page 106 of the slides.<br>\n<b>EXAMPLE OUTPUT</b>\n<pre>hello\nhello\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tchar hello[6] = \"hello\";\n\tchar hello2[7] = \"hello\\n\";\n\t\n\tprintf(\"%s\\n\", hello);\n\tprintf(\"%s\", hello2);\n}\n",
            "",
            1598889600,
            1603371600
        ],
        [
            "0.17 简介17",
            "Try to write the program on page 107 of the slides.<br>\n<b>EXAMPLE OUTPUT</b>\n<pre>hello\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tchar hello[6] = \"hello\";\n\tchar hello2[7] = \"hello\\n\";\n\t\n\tfor (int i = 0; i < 6; ++ i)\n\t\tputchar(hello2[i]);\n}\n",
            "",
            1598889600,
            1603371600
        ],
        [
            "0.18 简介18",
            "Try to write the program on page 79 of the slides.<br>\n<b>EXAMPLE INPUT</b>\n<pre>\nI am good.\n</pre>\n<b>EXAMPLE OUTPUT</b>\n<pre>\n10\nI am good.\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint readline(char s[], int limit) {\n\tfor (int i = 0; i < limit; ++ i) {\n\t\tint c = getchar();\n\t\ts[i] = c;\n\t\tif (i == limit - 1 || c == '\\n' || c == EOF) {\n\t\t\ts[i] = '\\0';\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nint main() {\n\tchar line[100];\n\tint read;\n\tread = readline(line, 100);\n\tprintf(\"%d\\n\", read);\n\tputs(line);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ      '):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_str(30+3*rand_int(1)))",
            1598889600,
            1598965200
        ],
        [
            "0.19 简介19",
            "Try to write the program on page 109 of the slides.<br>\n<b>EXAMPLE OUTPUT</b>\n<pre>visited 1 times\nvisited 2 times\nvisited 3 times\nvisited 4 times\nvisited 5 times\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint counter = 0;\n\nvoid printTimes() {\n\textern int counter;\n\t++ counter;\n\tprintf(\"visited %d times\\n\", counter);\n}\n\nint main() {\n\tprintTimes();\n\tprintTimes();\n\tprintTimes();\n\tprintTimes();\n\tprintTimes();\n}\n",
            "",
            1598889600,
            1603371600
        ],
        [
            "0.20 简介20",
            "Try to write the program on page 110 of the slides.<br>\n<b>EXAMPLE OUTPUT</b>\n<pre>30\n20\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint data = 10;\n\nint main() {\n\tdata = 20;\n\tif (data > 0) {\n\t\tint data = 30;\n\t\tprintf(\"%d\\n\", data);\n\t}\n\tprintf(\"%d\\n\", data);\n}\n",
            "",
            1598889600,
            1603371600
        ],
        [
            "1.1 Hello world",
            "Please write a program that prints ``hello, world''.<br>\n<br>\n<b>EXAMPLE OUTPUT:<b>\n<pre>\nhello, world\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main()\n{\n\tprintf(\"hello, world\");\n}\n",
            "",
            1603338000,
            1602835200
        ],
        [
            "1.2 Hello world x3",
            "Please write a program that prints three ``hello, world''s on three lines, respectively.<br>\n<br>\n<b>EXAMPLE OUTPUT:<b>\n<pre>\nhello, world\nhello, world\nhello, world\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main()\n{\n\tprintf(\"hello, world\\n\");\n\tprintf(\"hello, world\\n\");\n\tprintf(\"hello, world\\n\");\n}\n",
            "",
            1603338000,
            1602835200
        ],
        [
            "1.3 Arithmetic expression",
            "Please write a program that prints the Celsius degree coresponding to 100 degree Fahrenheit.<br>\n<br>\n<b>EXAMPLE OUTPUT:<b>\n<pre>\nIt is 37.777779 degree Celsius.\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tfloat c;\n\tc = (5.0 / 9.0) * (100.0 - 32.0);\n\tprintf(\"It is %f degree Celsius.\", c);\n}\n",
            "",
            1603338000,
            1598889600
        ],
        [
            "1.4 Input",
            "Please write a program that prints the Celsius degree coresponding to any degree Fahrenheit.<br>\n<br>\n<b>EXAMPLE INPUT:<b>\n<pre>\n80\n</pre>\n\n<b>EXAMPLE OUTPUT:<b>\n<pre>\nIt is 26.666666 degree Celsius.\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main()\n{\n\tfloat f;\n\tscanf(\"%f\", &f);\n\tfloat c;\n\tc = (5.0 / 9.0) * (f - 32.0);\n\tprintf(\"It is %f degree Celsius.\", c);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(2))\n",
            1603338000,
            1598889600
        ],
        [
            "1.5 Function",
            "Please write a program that prints the Celsius degree coresponding to any degree Fahrenheit.<br>\n<br>\n<b>EXAMPLE INPUT:<b>\n<pre>\n90\n</pre>\n\n<b>EXAMPLE OUTPUT:<b>\n<pre>\n32.222221\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint main()\n{\n\tfloat f; // Fahrenheit degree\n\tscanf(\"%f\", &f);\n\tfloat c; // Celsius degree\n\tc = fahrenheit2celsius(f);\n\tprintf(\"%f\", c);\n}",
            "/*\nA conversion from a Fahrenheit degree to a Celsius degree\n*/\nfloat fahrenheit2celsius(float f)\n{\n\tfloat c;\n\tc = (5.0 / 9.0) * (f - 32.0);\n\treturn c;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(2))",
            1603338000,
            1598889600
        ],
        [
            "1.6  Loop",
            "Please write a program that prints 1 to <i>N</i>, where <i>N</i> is an integer input.<br>\n<br>\n<b>EXAMPLE INPUT:<b>\n<pre>\n7\n</pre>\n\n<b>EXAMPLE OUTPUT:<b>\n<pre>\n1 2 3 4 5 6 7\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main()\n{\n\tint n; // declare a variable\n\tscanf(\"%d\", &n); // formatted input\n\t\n\tint i;\n\ti = 1;\n\twhile (i <= n) // loop\n\t{\n\t\tprintf(\"%d \", i); // formatted output\n\t\ti = i + 1; // assignment, arithmetic expression\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(1))",
            1603338000,
            1598889600
        ],
        [
            "1.7  Print table",
            "Please write a program that prints a table, which shows how to convert Fehrenheit degrees to Celsius degrees.<br>\n<br>\n\n<b>EXAMPLE OUTPUT:<b>\n<pre>80.000000\t26.666666\n81.000000\t27.222221\n82.000000\t27.777779\n83.000000\t28.333334\n84.000000\t28.888889\n85.000000\t29.444445\n86.000000\t30.000000\n87.000000\t30.555555\n88.000000\t31.111111\n89.000000\t31.666666\n90.000000\t32.222221\n91.000000\t32.777779\n92.000000\t33.333332\n93.000000\t33.888889\n94.000000\t34.444443\n95.000000\t35.000000\n96.000000\t35.555557\n97.000000\t36.111111\n98.000000\t36.666668\n99.000000\t37.222221\n100.000000\t37.777779\n</pre></b></b>",
            "#include \"source.c\"",
            "/*\nA conversion from a Fahrenheit degree to a Celsius degree\n*/\nfloat fahrenheit2celsius(float f)\n{\n\tfloat c;\n\tc = (5.0 / 9.0) * (f - 32.0);\n\treturn c;\n}\n\n#include <stdio.h>\n\nint main()\n{\n\tfloat minF = 80;\n\tfloat maxF = 100;\n\t\n\tfloat f = minF;\n\twhile (f <= maxF)\n\t{\n\t\tfloat c = fahrenheit2celsius(f);\n\t\tprintf(\"%f\\t%f\\n\", f, c);\n\t\tf = f + 1.0;\n\t}\n}\n",
            "",
            1603338000,
            1598889600
        ],
        [
            "1.8 Array",
            "Please write a program that reads 10 integers and prints them in a reversed order.<br>\n<br>\n\n<b>EXAMPLE INPUT:<b>\n2 4 3 5 3 1 2 4 5 0\n<pre>\n\n<b>EXAMPLE OUTPUT:<b>\n<pre>\n0 5 4 2 1 3 5 3 4 2 \n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main()\n{\n\tint numbers[10];\n\t\n\tint i = 0;\n\twhile (i < 10)\n\t{\n\t\tscanf(\"%d\", &numbers[i]);\n\t\ti = i + 1;\n\t}\n\t\n\ti = 0;\n\twhile (i < 10)\n\t{\n\t\tprintf(\"%d \", numbers[9 - i]);\n\t\ti = i + 1;\n\t}\n}\n",
            "from random import randint\nprint(' '.join([str(randint(0,9)) for i in range(10)]))",
            1603338000,
            1598889600
        ],
        [
            "1.9 Selection",
            "Please write a program that reads 10 integers and prints the positive ones.<br>\n<br>\n\n<b>EXAMPLE INPUT:<b>\n-2 -5 3 4 6 -2 3 -5 0 4\n<pre>\n\n<b>EXAMPLE OUTPUT:<b>\n<pre>\n3 4 6 3 4  \n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main()\n{\n\tint i = 0;\n\twhile (i < 10)\n\t{\n\t\ti = i + 1;\n\t\tint number;\n\t\tscanf(\"%d\", &number);\n\t\tif (number > 0)\n\t\t{\n\t\t\tprintf(\"%d \", number);\n\t\t}\n\t\t\n\t}\n}\n",
            "from random import randint\nprint(' '.join([str(randint(0,18)-9) for i in range(10)]))",
            1603338000,
            1598889600
        ],
        [
            "2.1  Output 1",
            "Please print a text with special characters, including \\\\ and \".<br>\nPlease add comments in your program where appropriate.<br>\n请输出特殊字符,如\\\\和\".<br>\n请在程序中适当的地 添加注释.<br>\n<br>\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n\\\\\"\n\\n\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n/*\nThis function output the required characters.\n*/\nint main() {\n\tprintf(\"\\\\\\\\\\\"\\n\\\\n\");\n}\n",
            "",
            1603338000,
            1603976400
        ],
        [
            "2.3  Output 2",
            "Please print a text with special characters.<br>\nPlease add comments in your program where appropriate.<br>\n请输出特殊字符.<br>\n请在程序中适当的地 添加注释.<br>\n<br>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>&amp;#^-|!,@:=\\\\\\\\(`%{&gt;^_$%+*'&lt;/?)} \\\"/.~<br></pre><pre><!--?)} \\\\\"/.~\n</pre--></pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n/*\nThis function output the required characters.\n*/\nint main() {\n\tprintf(\"&#^-|!,@:=\\\\\\\\\\\\\\\\(`%%{>^_$%%+*'</?)} \\\\\\\"/.~\"); \n}\n",
            "",
            1603338000,
            1603976400
        ],
        [
            "2.5  Variable",
            "Please define the following variables:\n<ul>\n<li>An integer variable, named year.</li>\n<li>An real variable, named seconds.</li>\n<li>An character variable, named code.</li>\n</ul>\n请定义以下的变量:\n<ul>\n<li>1个名为year的整数变量.</li>  \n<li>1个名为seconds的实数变量.</li>  \n<li>1个名为code的字符变量.</li>\n</ul>\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n4\n8\n1\n</pre>",
            "#include <stdio.h>\n\nint main() {\n#include \"source.c\"\n\tprintf(\"%ld\\n\", sizeof(year));\n\tprintf(\"%ld\\n\", sizeof(seconds));\n\tprintf(\"%ld\\n\", sizeof(code));\n}",
            "int year;\ndouble seconds;\nchar code;\n",
            "",
            1603338000,
            1603976400
        ],
        [
            "2.7  Initialization",
            "Please define and initialize the following variables:\n<ul>\n<li>An integer variable, named year, and initialize it to 1990.</li>\n<li>An real variable, named seconds, and initialize it to 1234.56. </li>\n<li>An character variable, named code, and initialize it to 'C'.</li>\n</ul>\n\n请定义以下的变量:\n<ul> \n<li>1个名为year的整数变量,并把它初始化为1990。</li>\n<li>1个名为seconds的实数变量,并把它初始化为1234.56。</li>  \n<li>1个名为code的字符变量,并把它初始化为'C'</li>\n</ul>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n1990\n1234.560000\nC\n</pre>",
            "#include <stdio.h>\n\nint main() {\n\t#include \"source.c\"\n\tprintf(\"%d\\n\", year); \n\tprintf(\"%lf\\n\", seconds);\n\tprintf(\"%c\\n\", code);\n}",
            "int year = 1990; \ndouble seconds = 1234.56;\nchar code = 'C';\n",
            "",
            1603338000,
            1603976400
        ],
        [
            "2.9  Float",
            "Input a real number (double) and the output its integer part and fraction part in two lines, respectively.<br><br>\n输入1个实数(double)并把它的整数部分和小数部分分别在两行输出.<br><br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n12.34\n</pre>\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n12\n0.340000\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n/*\nThis function input a real number and outputs its \ninteger part and fraction part, respectively.\n*/\nint main() {\n\t// read a real number \n\tdouble number;\n\tscanf(\"%lf\", &number); \n\t\n\t// obtain its integer part by \n\t// converting to an intger \n\tint integer = number;\n\t\n\t// obtain its fraction part by \n\t// reducing its integer part\n\tnumber -= integer;\n\t\n\t// output the two parts\n\tprintf(\"%d\\n\", integer);\n\tprintf(\"%lf\\n\", number);\n}\n",
            "\nfrom random import randint\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(4)/100)",
            1603338000,
            1603976400
        ],
        [
            "2.11  Digits",
            "Input an integer number and then output its last binary digit and its second last binary digit, separated by a single empty space.<br><br>\nHint: if an integer is divided by 2, its second last binary digit becomes it last binary digit.<br><br>\n\n输入一个整数并输出它的最后一位2进制位和倒数第二位2进制位,中间用一个空格隔开。 <br><br>\n提示:当一个整数被除2,它的倒数第二位2进制位将变成它的最后一位2进制位。<br><br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n2\n</pre>\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n0 1\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n/*\nThis function inputs an integer and output its last binary digit and its second last binary digit.\n*/\nint main() {\n\t// input the number \n\tint number;\n\tscanf(\"%d\", &number);\n\t// output its last binary digit and an empty space\n\tprintf(\"%d\", number % 2);\n\t// make the second last binary digit the last binary digit\n\tnumber /= 2;\n\t// output the new last (the orginal second last) binary digit\n\tprintf(\" %d\", number % 2); \n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(1))\n",
            1603338000,
            1603976400
        ],
        [
            "2.13 Equality",
            "Input two integers. Output the one of the two integers if they are equal, output 0 otherwise.<br><br>\nPlease do not use the if-statement.<br><br>\nHint: let <i>int eq =  number1 == number2</i>. <i>eq</i> is either 1 or 0, and we can multiply <i>eq</i> with the input number to obtain the result。<br><br>\n请勿使用if-语句.<br><br>\n提示:假设<i>int eq =  number1 == number2 </i>, <i>eq</i> 是1或0，我们可以通过把<i>eq</i>与输入的数相乘得到结果。<br><br>\n\n<b><u>EXAMPLE INPUT 1</u></b>\n<pre>\n10 10\n</pre>\n<b><u>EXAMPLE OUTPUT 1</u></b>\n<pre>\n10\n</pre>\n<b><u>EXAMPLE INPUT 2</u></b>\n<pre>\n10 20\n</pre>\n<b><u>EXAMPLE OUTPUT 2</u></b>\n<pre>\n0\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n/*\nThis function inputs two integer variables,\nand then outputs one of them if the two integers\nare equal. It outputs 0 otherwise. */\nint main() {\n\t// input two integer variables \n\tint number1;\n\tint number2;\n\tscanf(\"%d %d\", &number1, &number2);\n\t// test equality\n\tint equals = (number1 == number2);\n\t// output 0 if not equal\n\tprintf(\"%d\", number1 * equals); \n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nnum1 = rand_int(2)\nnum2 = rand_int(2)\nif randint(0,1) == 0:\n\tprint(num1, num2)\nelse:\n\tprint(num1, num1)\n\t\t\n",
            1603338000,
            1603976400
        ],
        [
            "2.15 Characters",
            "Input an English letter character and print its following three characters.<br><br>\n输出一个英文字符并打印出它后面的3个字符<br><br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\nC\n</pre>\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\nDEF\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n/*\nThis function inputs an English letter character and then outputs its following three letter characers.\n*/\nint main() {\n\t// input a character \n\tchar letter;\n\tscanf(\"%c\", &letter);\n\n\tputchar(letter + 1);\n\tputchar(letter + 2);\n\tputchar(letter + 3);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVW'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nprint(rand_str(1))",
            1603338000,
            1603976400
        ],
        [
            "3.1 Sin",
            "Please write a main function, which contains a function call to function <font style=\"background-color: #EEEEEE\">sin</font> to obtain the value of <i>sin(&pi;/4)</i>, and then output the return value of the function call.<br>\n<br>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n0.499772\n</pre>",
            "/*\nAn approximated sinusoid function using\n\tsin(x) ≈ x - x^3/3! + x^5/5!\n*/\ndouble sin(double x) {\n\tdouble x2 = x * x;\n\tdouble x3 = x2 * x;\n\tdouble x5 = x3 * x2;\n\tdouble fib3 = 2 * 3;\n\tdouble fib5 = fib3 * 4 * 5;\n\treturn x - x3 / fib3 + x5 / fib5;\n}\n\n#define PI 3.14\n#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tprintf(\"%lf\", sin(PI / 6));\n}\n",
            "",
            1598889600,
            1598889600
        ],
        [
            "3.2 Cos",
            "In the previous exercise, there is a example of function definition, where function <font style=\"background-color: #EEEEEE\">sin</font> is defined.<br>\n<br>\nIn this exercise, you are required to define a function<br><font style=\"background-color: #EEEEEE\"><font color=\"blue\">double</font> cos(<font color=\"blue\">double</font> x) { ... }</font><br> using the approximation given by the equation below:<br>\ncos(x) ≈ 1 - x<sup>2</sup>/2! + x<sup>4</sup>/4! - x<sup>6</sup>/6!\n<br>\n<br>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>1.000000\n0.866158\n0.707388\n0.500460\n0.000796\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n#define PI 3.14\n\nint main() {\n\tprintf(\"%lf\\n\", cos(0));\n\tprintf(\"%lf\\n\", cos(PI / 6));\n\tprintf(\"%lf\\n\", cos(PI / 4));\n\tprintf(\"%lf\\n\", cos(PI / 3));\n\tprintf(\"%lf\\n\", cos(PI / 2));\n}",
            "/*\ncos(x) ≈ 1 - x^2/2! + x^4/4! - x^6/6!\n*/\ndouble cos(double x) {\n\tdouble x2 = x * x;\n\tdouble x4 = x2 * x2;\n\tdouble x6 = x4 * x2;\n\tdouble fab2 = 2;\n\tdouble fab4 = fab2 * 3 * 4;\n\tdouble fab6 = fab4 * 5 * 6;\n\tdouble cose = 1 - x2 / fab2 + x4 / fab4 - x6 / fab6;\n\treturn cose;\n}\n",
            "",
            1598889600,
            1598889600
        ],
        [
            "3.3 Circle Area",
            "Read the radius and store it as a real (double) variable. <br>\nThen, print the area of a circle of the radius using a double constant PI=3.14<br>\n<br>\n读入一个半径并存储为一个浮点数。<br>\n然后，使用这个半径和浮点数常量PI=3.14计算出的圆的面积，并打印出这个面积。<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n2.43\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n18.541386\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n#define PI 3.14\n\nint main() {\n\tdouble radius;\n\tscanf(\"%lf\", &radius);\n\tdouble area = radius * radius * PI;\n\tprintf(\"%lf\", area);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3)/100)\n",
            1603338000,
            1603976400
        ],
        [
            "3.4 Rectangle Area",
            "Read the width and height of a rectangle and store them as double variables.<br>\nThen, calculate the area of the rectangle and store it in another double variable.<br>\nFinally, print the area.<br>\n<br>\n读入宽和高，保存为浮点数。<br>\n然后，计算长方形面积保存为浮点数。<br>\n最后，打印这个面积。<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n2.43 4.3456\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n10.559808\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tdouble width, height;\n\tscanf(\"%lf %lf\", &width, &height);\n\tdouble area = width * height;\n\tprintf(\"%lf\", area);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3)/100, rand_int(3)/100)",
            1603338000,
            1603976400
        ],
        [
            "3.5 Celsius to Fahrenheit",
            "Write a function <font style=\"background-color: #EEEEEE\"><font color=blue>double</font> celsiusToFahrenheit(<font color=blue>double</font> celsius) { ... }</font> to converts a Celsius degree to Fahrenheit using the reverse of formula celsius = (5/9)*(fahrenheit-32).<br>\n<br>\n写一个函数 <font style=\"background-color: #EEEEEE\"><font color=blue>double</font> celsiusToFahrenheit(<font color=blue>double</font> celsius) { ... }</font> 把摄氏温度(Celsius)华转换为氏温度(Fahrenheit)。请使用公式 celsius = (5/9)*(fahrenheit-32) 的逆。<br>\n<br>\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n34.5\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n94.100000\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint main() {\n\tdouble celsius;\n\tscanf(\"%lf\", &celsius);\n\tdouble fahrenheit = celsiusToFahrenheit(celsius);\n\tprintf(\"%lf\", fahrenheit);\n}",
            "double celsiusToFahrenheit(double celsius) {\n\treturn celsius * (9.0 / 5) + 32;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3)/10)",
            1603338000,
            1603976400
        ],
        [
            "3.6 Date and Time",
            "In this exercise, you read a time (in terms of seconds) from console. Then, you print the days, hours, minutes, and seconds in the format given in the example output.<br>\n<br>\n\n在这个程序中，你需要从控制台(console)输入时间(以秒来描述的时间)。然后以输出例子中个格式输出天数，小时，分钟，和秒。<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>203148\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>2d 8:25:48\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printTime(int s) {\n\tint m = s / 60;\n\ts %= 60;\n\tint h = m / 60;\n\tm %= 60;\n\tint d = h / 24;\n\th %= 24;\n\tprintf(\"%dd %d:%d:%d\", d, h, m, s); \n}\n\nint main() {\n\tint totalSeconds = getInt();\n\tprintTime(totalSeconds);\n}\n",
            "\nfrom random import randint\nd = randint(1,10)\nh = randint(0,23)\nm = randint(0,59)\ns = randint(0,59)\nh += d * 24\nm += h * 60\ns += m * 60\nprint(s)\n",
            1603338000,
            1603976400
        ],
        [
            "3.7 Cylinder Volume",
            "Write a program that reads in the radius and height of a cylinder and computes its volume using the following formulas.<br>\n<i>bottomArea = radius * radius * PI</i><br>\n<i>volume = bottomArea * height</i><br>\n<i>PI = 3.14</i><br>\n<br>\n写一个程序读入圆柱的半径(radius)和高(height)，然后用以下公式计算它的体积：<br>\n<i>bottomArea = radius * radius * PI</i><br>\n<i>volume = bottomArea * height</i><br>\n<i>PI = 3.14</i><br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n30 100\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n282600.000000\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\ndouble getDouble() {\n\tdouble val;\n\tscanf(\"%lf\", &val);\n\treturn val;\n}\n\nvoid printDouble(double val) {\n\tprintf(\"%lf\", val);\n}\n\n#define PI 3.14\n\nint main() {\n\tdouble radius = getDouble();\n\tdouble height = getDouble();\n\t\n\tdouble bottomArea = radius * radius * PI;\n\tdouble volume = bottomArea * height;\n\tprintDouble(volume);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(1)*10, (rand_int(1)+5)*10)\n",
            1603338000,
            1603976400
        ],
        [
            "3.8 Feet to Meters",
            "Write a program that reads a number in feet, converts it into meters, and displays the result. One foot is 0.305 meters.<br>\n<br>\n写一个程序读入一个以尺(feet)为单位的长度，然后打印出对应的以米(meter)为单位的长度。<br>\n一尺等于0.305米。<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n2.5\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n0.762500\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\ndouble getDouble() {\n\tdouble val;\n\tscanf(\"%lf\", &val);\n\treturn val;\n}\n\nvoid printDouble(double val) {\n\tprintf(\"%lf\", val);\n}\n\n#define PI 3.14\n\nint main() {\n\tdouble feet = getDouble();\n\tdouble meters = feet * 0.305;\n\tprintDouble(meters);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(2)/10)\n",
            1603338000,
            1603976400
        ],
        [
            "3.9 Pounds into Kilograms",
            "Write a program that converts pounds into kilograms. The program reads a number in pounds, converts it into kilograms, and display the result. One pound is 0.454 kilograms.<br>\n<br>\n写一个程序读入一个以磅转(pound)为单位的重量，然后打印出对应的以公斤(kilogram)为单位的重量。<br>\n一磅等于0.454公斤。<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n2.5\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n1.135000\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\ndouble getDouble() {\n\tdouble val;\n\tscanf(\"%lf\", &val);\n\treturn val;\n}\n\nvoid printDouble(double val) {\n\tprintf(\"%lf\", val);\n}\n\nint main() {\n\tdouble pounds = getDouble();\n\tdouble kilograms = pounds * 0.454;\n\tprintDouble(kilograms);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(2)/10)\n",
            1603338000,
            1603976400
        ],
        [
            "3.10 Sum of Digits",
            "Write a program that reads an integer between 0 and 999 and adds all the digits in the integer. For example, if an integer is 932, the sum of all its digits is 14.<br>\n<br>\nHint: Use the % operator to extract digits, and then use the / operator to remove the extracted digit. For instance, 932 % 10 = 2 and 932 / 10 = 93.<br>\n<br>\n写一个程序读入一个大于0小于999的整数，然后计算这个整数各个位数上数字的总和。例如，整数932各个为数的和为: 9+3+2=14<br>\n<br>\n提示: 使用%操作附和/操作附，可以提取和去除数字。如 932 % 10 = 2 and 932 / 10 = 93.<br>\n<br>\n\n<b><u>EXAMPLE INPUT 1</u></b>\n<pre>\n932\n</pre>\n\n<b><u>EXAMPLE OUTPUT 1</u></b>\n<pre>\n14\n</pre>\n\n<b><u>EXAMPLE INPUT 2</u></b>\n<pre>\n294\n</pre>\n\n<b><u>EXAMPLE OUTPUT 2</u></b>\n<pre>\n15\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val);\n}\n\nint getLastDigit(int val) {\n\treturn val % 10;\n}\n\nint removeLastDigit(int val) {\n\treturn val / 10;\n}\n\nint main() {\n\tint val = getInt();\n\tint sum = 0;\n\t\n\tsum += getLastDigit(val);\n\tval = removeLastDigit(val);\n\t\n\tsum += getLastDigit(val);\n\tval = removeLastDigit(val);\n\t\n\tsum += getLastDigit(val);\n\tval = removeLastDigit(val);\n\t\n\tprintInt(sum);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3))\n",
            1603338000,
            1603976400
        ],
        [
            "3.11 To Uppercase",
            "Write a program that converts an uppercase letter to a lowercase letter.<br>\nHint: In the ASCII table, uppercase letters appear before lowercase letters. The offset between any uppercase letter and its corresponding lowercase letter is the same. So you can find a lowercase letter from its corresponding uppercase letter, as follows:<br>\n<i>int offset = 'a' - 'A';</i><br>\n<i>char lowercase = uppercase + offset;</i><br>\n<br>\n写一个程序把一个大写的字母转换为小写的字母。<br>\n提示: 在ASCII码表中 (书本中附录B), 大写(uppercase)字符在小写(lowercase)字符的前面. 每个大写字符和它对应的小写字符的差(offset)是相同的. 所以，可以用如下方式转换大小写字符:<br>\n<i>int offset = 'a' - 'A';</i><br>\n<i>char lowercase = uppercase + offset;</i><br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\nC\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\nc\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nchar getChar() {\n\tchar val;\n\tscanf(\"%c\", &val);\n\treturn val;\n}\n\nvoid printChar(char val) {\n\tprintf(\"%c\", val);\n}\n\nchar toLowercase(char uppercase) {\n\tint offset = 'a' - 'A';\n\tchar lowercase = uppercase + offset;\n\treturn lowercase;\n} \n\nint main() {\n\tchar uppercase = getChar();\n\tchar lowercase = toLowercase(uppercase);\n\tprintChar(lowercase);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_str(1))",
            1603338000,
            1603976400
        ],
        [
            "4.1 Boolean equality",
            "Input two boolean values, and then output a boolean value that shows whether the two input boolean values are equal.<br>\n<br>\n\n<b><u>EXAMPLE INPUT 1</u></b>\n<pre>\n1 0\n</pre>\n\n<b><u>EXAMPLE OUTPUT 1</u></b>\n<pre>\n0\n</pre>\n\n<b><u>EXAMPLE INPUT 2</u></b>\n<pre>\n0 0\n</pre>\n\n<b><u>EXAMPLE OUTPUT 2</u></b>\n<pre>\n1\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n#define bool int\n#define and &&\n#define or ||\n#define not !\n#define getBool getInt\n#define printBool printInt\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nint main() {\n\tbool value1 = getBool();\n\tbool value2 = getBool();\n\tprintBool(value1 == value2);\n}\n",
            "\nfrom random import randint\nprint(randint(0,1), randint(0,1))\n",
            1603338000,
            1598889600
        ],
        [
            "4.3 Boolean equality",
            "Input three pairs of boolean values, and then output three boolean values that show whether the three pairs of input boolean values are equal, respective.<br>\n<br>\n\n<b><u>HINT</u></b><br>\nYou can write a function, which inputs a pair of boolean values and then outputs whether this pair is equal. Then, you can call this function three times in your main function.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n0 0\n0 1\n1 0\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n1\n0\n0\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n#define bool int\n#define and &&\n#define or ||\n#define not !\n#define getBool getInt\n#define printBool printInt\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid testEquality() {\n\tbool value1 = getBool();\n\tbool value2 = getBool();\n\tprintBool(value1 == value2);\n\tprintf(\"\\n\");\n}\n\nint main() {\n\ttestEquality();\n\ttestEquality();\n\ttestEquality();\n}\n",
            "\nfrom random import randint\nprint(randint(0,1), randint(0,1))\nprint(randint(0,1), randint(0,1))\nprint(randint(0,1), randint(0,1))\n",
            1603338000,
            1598889600
        ],
        [
            "4.5 Range",
            "Write a program to test whether each input integer number is within the range of (10, 20] ∪ [30, 40] ∪ [50, 60).<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n10\n25\n50\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n0\n0\n1\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n#define bool int\n#define and &&\n#define or ||\n#define not !\n#define getBool getInt\n#define printBool printInt\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nbool inRange(int val) {\n\treturn (val > 10 and val <= 20 or\n\t\tval >= 30 and val <= 40 or\n\t\tval >= 50 and val < 60);\n}\n\nvoid test() {\n\tint val = getInt();\n\tprintBool(inRange(val));\n\tprintf(\"\\n\");\n}\n\nint main() {\n\ttest();\n\ttest();\n\ttest();\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(2))\nprint(rand_int(2))\nprint(rand_int(2))\n",
            1603338000,
            1598889600
        ],
        [
            "4.7 Bitwise Operatiors",
            "Read two integer numbers, and then output these two numbers as well as their <i>bitwise and</i>, <i>bitwise or</i>, and <i>bitwise xor</i>, all in binary form.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n170 204\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n00000000000000000000000010101010\n00000000000000000000000011001100\n00000000000000000000000010001000\n00000000000000000000000011101110\n00000000000000000000000001100110\n</pre>",
            "#include <stdio.h>\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid printBit(int val, int bitPos) {\n\tint bit = (val >> bitPos) & 1;\n\tprintInt(bit);\n}\n\nvoid printBits(int intVal) {\n\tint i = 0;\n\twhile (i < 32) {\n\t\tprintBit(intVal, 31 - i);\n\t\ti = i + 1;\n\t}\n}\n\n#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid println() {\n\tprintf(\"\\n\");\n}\n\nint main() {\n\tint number1 = getInt();\n\tint number2 = getInt();\n\t\n\tprintBits(number1);\n\tprintln();\n\tprintBits(number2);\n\tprintln();\n\tprintBits(number1 & number2);\n\tprintln();\n\tprintBits(number1 | number2);\n\tprintln();\n\tprintBits(number1 ^ number2);\n\tprintln();\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(3), rand_int(3))",
            1603338000,
            1598889600
        ],
        [
            "4.9 Left/right-shift",
            "Read a character and output this character in binary form.\nThen, right-shift this number by 5 bits, left-shift it by 3 bits, and output the result in binary form.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\ny\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n01111001\n00011000\n</pre>",
            "#include <stdio.h>\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid printBit(char val, int bitPos) {\n\tint bit = (val >> bitPos) & 1;\n\tprintInt(bit);\n}\n\nvoid printBits(char val) {\n\tint i = 0;\n\twhile (i < 8) {\n\t\tprintBit(val, 7 - i);\n\t\ti = i + 1;\n\t}\n}\n\n#include \"source.c\"",
            "#include <stdio.h>\n\nchar getChar() {\n\tchar val;\n\tscanf(\"%c\", &val);\n\treturn val;\n}\n\nvoid println() {\n\tprintf(\"\\n\"); \n}\n\nint main() {\n\tchar c = getChar();\n\t\n\tprintBits(c);\n\tprintln();\n\tprintBits(c >> 5 << 3);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_str(1).lower())",
            1603338000,
            1601557200
        ],
        [
            "4.11 If-statement",
            "Read in two integers.\nIf the first one is larger, print it.\nOtherwise, print nothing.<br>\n<br>\n\n<b><u>EXAMPLE INPUT 1</u></b>\n<pre>\n10 11\n</pre>\n\n<b><u>EXAMPLE OUTPUT 1</u></b>\n<pre>\n</pre>\n\n<b><u>EXAMPLE INPUT 2</u></b>\n<pre>\n11 10\n</pre>\n\n<b><u>EXAMPLE OUTPUT 2</u></b>\n<pre>\n11\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nint main() {\n\tint value1 = getInt();\n\tint value2 = getInt();\n\tif (value1 > value2) {\n\t\tprintInt(value1);\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_int(2), rand_int(2))",
            1598889600,
            1598889600
        ],
        [
            "4.12 If-else statement",
            "Read in two integer numbers, print the smaller one first, followed by the larger one.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n2 -1\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n-1 2\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid printChar(char c) {\n\tprintf(\"%c\", c);\n}\n\nint main() {\n\tint value1 = getInt();\n\tint value2 = getInt();\n\t\n\tif (value1 > value2) {\n\t\tprintInt(value2);\n\t\tprintChar(' ');\n\t\tprintInt(value1);\n\t}\n\telse {\n\t\tprintInt(value1);\n\t\tprintChar(' ');\n\t\tprintInt(value2);\n\t}\n}\n",
            "\nfrom random import randint\nprint(randint(-9,9), randint(-9,9))",
            1598889600,
            1598889600
        ],
        [
            "4.13 Cascade if-else statement",
            "Write a program that reads 5 positive real numbers and print one of the following ranges that each number is in: (0,10], (10,20], (20,30], (30,40], (40,50], (50,60], (60,70], (70,80], (80,90], or (90,100].<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n10.1\n15\n19.9\n20\n60.6\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n(10,20]\n(10,20]\n(10,20]\n(10,20]\n(60,70]\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\n#define bool int\n#define and &&\n#define or ||\n#define not !\n\ndouble getDouble() {\n\tdouble val;\n\tscanf(\"%lf\", &val);\n\treturn val;\n}\n\nvoid println() {\n\tprintf(\"\\n\"); \n}\n\nvoid checkRange() {\n\tdouble number = getDouble();\n\t\n\tif (number > 0 and number <= 10) {\n\t\tprintf(\"(0,10]\");\n\t\tprintln();\n\t}\n\telse if (number <= 20) {\n\t\tprintf(\"(10,20]\");\n\t\tprintln();\n\t}\n\telse if (number <= 30) {\n\t\tprintf(\"(20,30]\");\n\t\tprintln();\n\t}\n\telse if (number <= 40) {\n\t\tprintf(\"(30,40]\");\n\t\tprintln();\n\t}\n\telse if (number <= 50) {\n\t\tprintf(\"(40,50]\");\n\t\tprintln();\n\t}\n\telse if (number <= 60) {\n\t\tprintf(\"(50,60]\");\n\t\tprintln();\n\t}\n\telse if (number <= 70) {\n\t\tprintf(\"(60,70]\");\n\t\tprintln();\n\t}\n\telse if (number <= 80) {\n\t\tprintf(\"(70,80]\");\n\t\tprintln();\n\t}\n\telse if (number <= 90) {\n\t\tprintf(\"(80,90]\");\n\t\tprintln();\n\t}\n\telse if (number <= 100) {\n\t\tprintf(\"(90,100]\");\n\t\tprintln();\n\t}\n}\n\nint main() {\n\tcheckRange();\n\tcheckRange();\n\tcheckRange();\n\tcheckRange();\n\tcheckRange();\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nfor i in range(5):\n\tprint(rand_int(3)/10)",
            1598889600,
            1598889600
        ],
        [
            "4.16 Switch-statement",
            "Input 10 integers, each number ranges between 1 and 30.<br>\nFor each integer:\n<ul>\n<li>prints A if the integer is either one of\t1\t8\t21\t22</li>\t\n<li>prints B if the integer is either one of\t6\t13\t17\t25</li>\n<li>prints C if the integer is either one of\t5\t10\t18\t26</li>\t\n<li>prints D if the integer is either one of\t2\t11\t15\t23</li>\t\n<li>prints E if the integer is either one of\t7\t9\t19\t28\t30</li>\n<li>prints F if the integer is either one of\t3\t14\t16\t24\t29</li>\n<li>prints G if the integer is either one of\t4\t12\t20\t27</li>\n</ul>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n7 9 19 28 30 3 10 18 26 4\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\nEEEEEFCCCG\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printChar(char c) {\n\tprintf(\"%c\", c);\n}\nvoid printSet() {\n\tint number = getInt();\n\t\n\tswitch (number) {\n\tcase 1:\n\tcase 8:\n\tcase 21:\n\tcase 22:\n\t\tprintChar('A');\n\t\tbreak;\n\tcase 6:\n\tcase 13:\n\tcase 17:\n\tcase 25:\n\t\tprintChar('B');\n\t\tbreak;\n\tcase 5:\n\tcase 10:\n\tcase 18:\n\tcase 26:\n\t\tprintChar('C');\n\t\tbreak;\n\tcase 2:\n\tcase 11:\n\tcase 15:\n\tcase 23:\n\t\tprintChar('D');\n\t\tbreak;\n\tcase 7:\n\tcase 9:\n\tcase 19:\n\tcase 28:\n\tcase 30:\n\t\tprintChar('E');\n\t\tbreak;\n\tcase 3:\n\tcase 14:\n\tcase 16:\n\tcase 24:\n\tcase 29:\n\t\tprintChar('F');\n\t\tbreak;\n\tcase 4:\n\tcase 12:\n\tcase 20:\n\tcase 27:\n\t\tprintChar('G');\n\t\tbreak;\n\t}\n}\n\nint main() {\n\tprintSet();\n\tprintSet();\n\tprintSet();\n\tprintSet();\n\tprintSet();\n\tprintSet();\n\tprintSet();\n\tprintSet();\n\tprintSet();\n\tprintSet();\n}\n",
            "\nfrom random import randint\nfor i in range(10):\n\tprint(randint(1,30), end=' ')",
            1605063600,
            1605790800
        ],
        [
            "4.17 Sort",
            "Write a program that put the smallest number in an array of three numbers to the first location of the array, the largest number to the second location, and the middle number to the last location.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n10 6 -5\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n-5.000000 10.000000 6.000000\n</pre>",
            "#include <stdio.h>\n\nvoid inputArray(double array[], int size) {\n\tfor (int i = 0; i < size;  ++ i) {\n\t\tscanf(\"%lf\", &array[i]);\n\t}\n}\n\nvoid outputArray(double array[], int size) {\n\tfor (int i = 0; i < size;  ++ i) {\n\t\tprintf(\"%lf \", array[i]);\n\t}\n}\n\n#include \"source.c\"\n\nint main() {\n\tdouble arr[3];\n\tinputArray(arr, 3);\n\tsort(arr);\n\toutputArray(arr, 3);\n}",
            "int min_(double array[], int size) {\n\tint index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif (array[index] > array[i])\n\t\t\tindex = i;\n\t}\n\treturn index;\n}\n\nint max_(double array[], int size) {\n\tint index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif (array[index] < array[i])\n\t\t\tindex = i;\n\t}\n\treturn index;\n}\n\nvoid sort(double array[]) {\n\tint min_index = min_(array, 3);\n\tint max_index = max_(array, 3);\n\tint rest_index = 0;\n\tif (min_index == 0 || max_index == 0) {\n\t\trest_index = 1;\n\t\tif (min_index == 1 || max_index == 1) rest_index = 2;\n\t}\n\tint min = array[min_index];\n\tint max = array[max_index];\n\tint rest = array[rest_index];\n\tarray[0] = min;\n\tarray[1] = max;\n\tarray[2] = rest;\n}\n",
            "\nfrom random import randint\nfor i in range(3):\n\tprint(randint(-9,9), end=' ')\n",
            1598889600,
            1598889600
        ],
        [
            "4.18 Set",
            "Write a function <i>make_set</i> that remove repeated elements in an array.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n1 1 2 3 3 3 4 4 5 6 6 6 6\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n1 2 3 4 5 6 \n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nvoid read_array(int arr[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tscanf(\"%d\", &arr[i]);\n\t}\n}\n\nvoid print_array(int arr[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tprintf(\"%d \", arr[i]);\n\t}\n}\n\nint main() {\n\tint array[13];\n\tread_array(array, 13);\n\tint set_size = make_set(array, 13);\n\tprint_array(array, set_size);\n}",
            "int index_of(int array[], int size, int value) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tif (value == array[i]) return i;\n\t}\n\treturn -1;\n}\n\nint make_set(int array[], int size) {\n\tint set_size = 0;\n\tfor (int i = 0; i < size; ++ i) {\n\t\tif (index_of(array, set_size, array[i]) == -1) {\n\t\t\tarray[set_size] = array[i];\n\t\t\t++ set_size;\n\t\t}\n\t}\n\treturn set_size;\n}\n",
            "\nfrom random import randint\nn = randint(1,9)\nfor i in range(13):\n\tif randint(0,3) == 0:\n\t\tn = randint(1,9)\n\tprint(n, end=' ')\n",
            1598889600,
            1598889600
        ],
        [
            "5.1 Sum digits",
            "Write a function that computes the sums of the digits in 10 positive integers, respectively.<br>\nNote that each integer can have arbitrary number of digits.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n1\n12\n123\n1234\n12345\n123456\n1234567\n234567\n34567\n4567\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n1\n3\n6\n10\n15\n21\n28\n27\n25\n22\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint sumDigits(int n) {\n\tint sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\n\nint read_int() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid print_int(int val) {\n\tprintf(\"%d\", val);\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tint value = read_int();\n\t\tprint_int(sumDigits(value));\n\t\tputchar('\\n');\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nfor i in range(10):\n\tn = randint(1,7)\n\tprint(rand_int(n))\n",
            1604038800,
            1604044800
        ],
        [
            "5.2 Reverse",
            "Write a function that display the reverse of 10 positive integers, respectively.<br>\nNote that each integer can have arbitrary number of digits.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>234 345 0 560 678789 876 654 543 432 321\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>432\n543\n0\n65\n987876\n678\n456\n345\n234\n123\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint read_int() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid print_int(int val) {\n\tprintf(\"%d\", val);\n}\n\nint reverse(int number) {\n\tint reversed = 0;\n\twhile (number > 0) {\n\t\treversed *= 10;\n\t\treversed += (number % 10);\n\t\tnumber /= 10; \n\t}\n\treturn reversed;\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tint value = read_int();\n\t\tprint_int(reverse(value));\n\t\tputchar('\\n');\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nfor i in range(10):\n\tn = randint(1,7)\n\tprint(rand_int(n), end=' ')",
            1604029200,
            1604408400
        ],
        [
            "5.3 Pattern",
            "<h2>Display pattern #1</h2>\n\nWrite a program to display a square pattern.<br>\nThe length of the pattern ranges from 1 to 9.<br>\n<br>\n\n<b><u>EXAMPLE INPUT 1</u></b>\n<pre>\n3\n</pre>\n\n<b><u>EXAMPLE OUTPUT 1</u></b>\n<pre>\n  1\n 21\n321\n</pre>\n\n<b><u>EXAMPLE INPUT 2</u></b>\n<pre>\n7\n</pre>\n\n<b><u>EXAMPLE OUTPUT 2</u></b>\n<pre>\n      1\n     21\n    321\n   4321\n  54321\n 654321\n7654321\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid displayPattern(int n) {\n\tfor (int i = 0; i < n; ++ i) {\n\t\tfor (int j = 0; j < n - 1 - i; ++ j) {\n\t\t\tputchar(' ');\n\t\t}\n\t\tfor (int j = 0; j < 1 + i; ++ j) {\n\t\t\tprintInt(1 + i - j);\n\t\t}\n\t\tputchar('\\n');\n\t}\n}\n\nint main() {\n\tint value = getInt();\n\tdisplayPattern(value);\n}\n",
            "\nfrom random import randint\nprint(randint(1,9))",
            1604029200,
            1604408400
        ],
        [
            "5.4 GCD",
            "Write a function to return <i>greatest common dividers</i> (GCDs) of 5 pairs of positive integer numbers.<br>\n<br>\n<b><u>HINT</u></b><br>\nThe GCD of two positive integers <i>x</i> and <i>y</i> equals the GCD of <i>x-y</i> and <i>y</i> if <i>x>y</i>.<br>\nAlternatively, you can iterate through all numbers from <i>min(x,y)</i> to 1 to find a GCD.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n368 504\n1632 1394\n10274 748\n476 92715\n6664 12054\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n8\n34\n22\n7\n98\n</pre>",
            "#include \"source.c\"",
            "int gcd1(int m, int n) {\n\tint min = m;\n\tif (min > n) min = n;\n\tfor (int i = min; i >= 1; -- i) {\n\t\tif (m % i == 0 && n % i == 0) return i;\n\t}\n\treturn 1;\n}\n\nint gcd2(int m, int n) {\n\twhile (m != n) {\n\t\twhile (m > n) {\n\t\t\tm -= n;\n\t\t}\n\t\t// swap m an n\n\t\tint temp = m;\n\t\tm = n;\n\t\tn = temp;\n\t}\n\treturn m;\n}\n\n#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nint main() {\n\tfor (int i = 0; i < 5; ++ i) {\n\t\tint number1 = getInt();\n\t\tint number2 = getInt();\n\t\t// cin >> number1 >> number2;\n\t\tint gcd = gcd2(number1, number2);\n\t\t// cout << gcd << endl;\n\t\tprintInt(gcd);\n\t\tputchar('\\n');\n\t}\n}\n",
            "\nfrom random import randint\nfor i in range(5):\n\tprint(randint(100,10000), randint(100,10000))",
            1604029200,
            1604408400
        ],
        [
            "5.5 Characters",
            "Given two characters, write a program to display all characters whose ASCII code are between these two characters.<br>\nPlease display 10 characters on each line, and no more than 10 characters on the last line.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>!~\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>!\"#$%&amp;'()*\n+,-./01234\n56789:;&lt;=&gt;\n?@ABCDEFGH\nIJKLMNOPQR\nSTUVWXYZ[\\\n]^_`abcdef\nghijklmnop\nqrstuvwxyz\n{|}~\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tchar start = getchar();\n\tchar end = getchar();\n\t// cin >> start >> end;\n\t\n\tint count = 0;\n\tfor (char i = start; i <= end; ++ i) {\n\t\t// cout << i;\n\t\tputchar(i);\n\t\t++ count;\n\t\tif (count % 10 == 0) // cout << endl;\n\t\t\tputchar('\\n');\n\t}\n}\n",
            "\nfrom random import randint\nprint(chr(ord('!')+randint(0,5)), end='')\nprint(chr(ord('~')-randint(0,5)), end='')",
            1604029200,
            1604408400
        ],
        [
            "5.6 Prime",
            "Given a positive integer <i>n</i>, write a program to display the first <i>n</i> prime numbers. <br>\nAn integer greater equals 2 is a prime number if its only divisors are 1 and itself.<br>\nPlease display 10 prime numbers on each line, and no more than 10 prime numbers on the last line.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n25\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n2 3 5 7 11 13 17 19 23 29 \n31 37 41 43 47 53 59 61 67 71 \n73 79 83 89 97 \n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nint isPrime(int num) {\n\tfor (int i = num / 2; i >= 2; -- i) {\n\t\tif (num % i == 0) return 0;\n\t}\n\treturn 1;\n}\n\nint main() {\n\tint n = getInt();\n\t// cin >> n;\n\t\n\tint count = 0;\n\tfor (int i = 2; count < n; ++ i) {\n\t\tif (isPrime(i)) {\n\t\t\t// cout << i << \" \";\n\t\t\tprintInt(i);\n\t\t\tputchar(' ');\n\t\t\t++ count;\n\t\t\tif (count % 10 == 0) {\n\t\t\t\t// cout << endl;\n\t\t\t\tputchar('\\n');\n\t\t\t}\n\t\t}\n\t}\n}\n",
            "\nfrom random import randint\nprint(randint(10,99))",
            1604029200,
            1604408400
        ],
        [
            "5.7 Pattern",
            "Write a program to display a square pattern.<br>\nThe length of the pattern ranges between 1 to 30.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n10\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n0000000001\n0000000011\n0000000111\n0000001111\n0000011111\n0000111111\n0001111111\n0011111111\n0111111111\n1111111111\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid print_chars(char c, int n) {\n\tfor (int i = 0; i < n; ++ i) {\n\t\tputchar(c);\n\t}\n}\n\nvoid print_line(int i, int n) {\n\tprint_chars('0', n - 1 - i);\n\tprint_chars('1', i + 1);\n\tputchar('\\n');\n}\n\nvoid print_square(int n) {\n\tfor (int i = 0; i < n; ++ i) {\n\t\tprint_line(i, n);\n\t}\n}\n\nint main() {\n\tint n = getInt();\n\tprint_square(n);\n}\n",
            "\nfrom random import randint\nprint(randint(1,30))",
            1604029200,
            1604408400
        ],
        [
            "5.8 Emirp",
            "An <i>emirp</i> (prime spelled backwards) is a prime number whose reversal is also a prime. For example, 17 is a prime and 71 is also a prime. So 17 and 71 are emirps. Given a positive number <i>n</i>, write a program that displays the first <i>n</i> emirps. Display 10 numbers per line.\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>118\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre style=\"font-size: 14px;\">2 3 5 7 11 13 17 31 37 71 \n73 79 97 101 107 113 131 149 151 157 \n167 179 181 191 199 311 313 337 347 353 \n359 373 383 389 701 709 727 733 739 743 \n751 757 761 769 787 797 907 919 929 937 \n941 953 967 971 983 991 1009 1021 1031 1033 \n1061 1069 1091 1097 1103 1109 1151 1153 1181 1193 \n1201 1213 1217 1223 1229 1231 1237 1249 1259 1279 \n1283 1301 1321 1381 1399 1409 1429 1439 1453 1471 \n1487 1499 1511 1523 1559 1583 1597 1601 1619 1657 \n1669 1723 1733  </pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nint reverse(int number) {\n\tint reversed = 0;\n\twhile (number > 0) {\n\t\treversed *= 10;\n\t\treversed += number % 10;\n\t\tnumber /= 10;\n\t}\n\treturn reversed;\n}\n\nint isPrime(int number) {\n\tfor (int i = number / 2; i >= 2; -- i) {\n\t\tif (number % i == 0) return 0;\n\t}\n\treturn 1;\n}\n\nint isEmirp(int number) {\n\tint number2 = reverse(number);\n\treturn (isPrime(number) && isPrime(number2));\n}\n\nint main() {\n\tint n = getInt();\n\t// cin >> n;\n\t\n\tint count = 0;\n\tfor (int i = 2; count < n; ++ i) {\n\t\tif (isEmirp(i)) {\n\t\t\t// cout << i << \" \";\n\t\t\tprintInt(i);\n\t\t\tputchar(' ');\n\t\t\t++ count;\n\t\t\tif (count % 10 == 0) // cout << endl;\n\t\t\t\tputchar('\\n');\n\t\t}\n\t}\n}\n",
            "\nfrom random import randint\nprint(randint(101,150))",
            1604029200,
            1604408400
        ],
        [
            "5.9 Palindromic prime",
            "<p>An <i>palindromic prime</i> is simultaneous a prime number and palindromic (symmetric). For example, 131 is a prime and also a palindromic. Given a positive number <i>n</i>, write a program that displays the first <i>n</i> palindromic primes. Display 10 numbers per line.\n</p><p>程序超时提示：计算prime较慢，但计算一个数字是否<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 1rem;\">symmetric</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 1rem;\">较快。</span></p><p>\n\n<b><u>EXAMPLE INPUT</u></b>\n</p><pre>103\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>2 3 5 7 11 101 131 151 181 191 \n313 353 373 383 727 757 787 797 919 929 \n10301 10501 10601 11311 11411 12421 12721 12821 13331 13831 \n13931 14341 14741 15451 15551 16061 16361 16561 16661 17471 \n17971 18181 18481 19391 19891 19991 30103 30203 30403 30703 \n30803 31013 31513 32323 32423 33533 34543 34843 35053 35153 \n35353 35753 36263 36563 37273 37573 38083 38183 38783 39293 \n70207 70507 70607 71317 71917 72227 72727 73037 73237 73637 \n74047 74747 75557 76367 76667 77377 77477 77977 78487 78787 \n78887 79397 79697 79997 90709 91019 93139 93239 93739 94049 \n94349 94649 94849 \n</pre><p></p>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nint reverse(int number) {\n\tint reversed = 0;\n\twhile (number > 0) {\n\t\treversed *= 10;\n\t\treversed += number % 10;\n\t\tnumber /= 10;\n\t}\n\treturn reversed;\n}\n\nint isPrime(int number) {\n\tfor (int i = number / 2; i >= 2; -- i) {\n\t\tif (number % i == 0) return 0;\n\t}\n\treturn 1;\n}\n\nint isPalindromicPrime(int number) {\n\treturn (reverse(number) == number && isPrime(number));\n}\n\nint main() {\n\tint n = getInt();\n\t// cin >> n;\n\t\n\tint count = 0;\n\tfor (int i = 2; count < n; ++ i) {\n\t\tif (isPalindromicPrime(i)) {\n\t\t\t// cout << i << \" \";\n\t\t\tprintInt(i);\n\t\t\tputchar(' ');\n\t\t\t++ count;\n\t\t\tif (count % 10 == 0) // cout << endl;\n\t\t\t\tputchar('\\n');\n\t\t}\n\t}\n}\n",
            "\nfrom random import randint\nprint(randint(101,150))",
            1604029200,
            1604408400
        ],
        [
            "5.10 Flag",
            "Draw the following <i>m</i>x<i>n</i> character American flag.<br>\n<i>m</i> and <i>n</i> are read from the standard input.<br>\n<i>m</i> is odd and <i>n</i> is even.<br>\n<br>\n\n<b><u>EXAMPLE INPUT 1</u></b>\n<pre>\n13 40\n</pre>\n\n<b><u>EXAMPLE OUTPUT 1</u></b>\n<pre>\n* * * * * * * * * * ====================\n * * * * * * * * * *                    \n* * * * * * * * * * ====================\n * * * * * * * * * *                    \n* * * * * * * * * * ====================\n * * * * * * * * * *                    \n========================================\n                                        \n========================================\n                                        \n========================================\n                                        \n========================================\n</pre>\n\n<b><u>EXAMPLE INPUT 2</u></b>\n<pre>\n15 30\n</pre>\n\n<b><u>EXAMPLE OUTPUT 2</u></b>\n<pre>\n* * * * * * * *===============\n * * * * * * *                \n* * * * * * * *===============\n * * * * * * *                \n* * * * * * * *===============\n * * * * * * *                \n* * * * * * * *===============\n                              \n==============================\n                              \n==============================\n                              \n==============================\n                              \n==============================\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid print_chars(char c, int len) {\n\tfor (int i = 0; i < len; ++ i) {\n\t\tputchar(c);\n\t}\n}\n\nvoid alternative_chars(char c, char d, int len) {\n\tfor (int i = 0; i < len; ++ i) {\n\t\tputchar(i % 2 == 0 ? c : d);\n\t}\n}\n\nvoid print_line(int i, int m, int n) {\n\tif (i < m / 2) {\n\t\tif (i % 2 == 0) alternative_chars('*', ' ', n / 2);\n\t\telse alternative_chars(' ', '*', n / 2);\n\t\tif (i % 2 == 0) print_chars('=', n / 2);\n\t\telse print_chars(' ', n / 2);\n\t}\n\telse {\n\t\tif (i % 2 == 0) print_chars('=', n);\n\t\telse print_chars(' ', n);\n\t}\n}\n\nvoid print_flag(int m, int n) {\n\tfor (int i = 0; i < m; ++ i) {\n\t\tprint_line(i, m, n);\n\t\tputchar('\\n');\n\t}\n}\n\nint main() {\n\tint m = getInt();\n\tint n = getInt();\n\tprint_flag(m, n);\n}\n",
            "\nfrom random import randint\nprint(randint(5,10)*2+1, randint(15,30)*2)",
            1604029200,
            1604408400
        ],
        [
            "6.1 Lower Case",
            "Write a program that converts an uppercase letter to a lowercase letter.<br>\nFor example, toLowercase('B') returns 'b'.<br>\n<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=blue>char</font> toLowercase(<font color=blue>char</font>)</font>\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\nNDRJXRIOXQ\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\nndrjxrioxq\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nvoid testToLower() {\n\tchar c = getchar();\n\tc = toLowercase(c);\n\tputchar(c);\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttestToLower();\n\t}\n}",
            "char toLowercase(char c) {\n\tint offset = 'a' - 'A';\n\treturn c + offset;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nprint(rand_str(10))",
            1605853200,
            1605859200
        ],
        [
            "6.2 Sum Digits",
            "Write a function that computes the sum of the digits in an positive integer.<br>\nFor example, sumDigits(234) returns 2 + 3 + 4 = 9.<br>\n<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=blue>int</font> sumDigits(<font color=blue>int</font>)</font>\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n609 452 123 448 872 772 99 746 174 333\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n15\n11\n6\n16\n17\n16\n18\n17\n12\n9\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid putInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid testSumDigits() {\n\tint number = getInt();\n\tint sum = sumDigits(number);\n\tputInt(sum);\n\tputchar('\\n');\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttestSumDigits();\n\t}\n}",
            "int sumDigits(long n) {\n\tint sum = 0;\n\twhile (n > 0) {\n\t\tsum += n % 10;\n\t\tn /= 10;\n\t}\n\treturn sum;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nfor i in range(10):\n\tprint(rand_int(3), end=' ')\n",
            1605853200,
            1605859200
        ],
        [
            "6.3 Reverse",
            "Write a function that reverse a positive integer.<br>\nFor example, reverse(234) returns 432.<br>\n<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=blue>int</font> reverse(<font color=blue>int</font>)</font>\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n609 452 123 448 872 772 99 746 174 333\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n906\n254\n321\n844\n278\n277\n99\n647\n471\n333\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid testReverse() {\n\tint number = getInt();\n\tint reversed = reverse(number);\n\tprintInt(reversed);\n\tputchar('\\n');\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttestReverse();\n\t}\n}",
            "int reverse(int number) {\n\tint reversed = 0;\n\twhile (number > 0) {\n\t\treversed *= 10;\n\t\treversed += (number % 10);\n\t\tnumber /= 10; \n\t}\n\treturn reversed;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nfor i in range(10):\n\tprint(rand_int(3), end=' ')\n",
            1605841200,
            1606395600
        ],
        [
            "6.4 Largest",
            "Write a function that finds the largest among three positive integer numbers.<br>\nFor example, largest(263,63,104) returns 263.<br>\n<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=\"blue\">int</font> largest(<font color=\"blue\">int</font>, <font color=\"blue\">int</font>, <font color=\"blue\">int</font>)</font>\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>   263    63   104\n    17   109   255\n   286    19   189\n   149    51   176\n     9    99    61\n   168   111     1\n   287    42   121\n   201   160   245\n   211   179   181\n   130    64   143\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>263\n255\n286\n176\n99\n168\n287\n245\n211\n143\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid testLargest() {\n\tint num1 = getInt();\n\tint num2 = getInt();\n\tint num3 = getInt();\n\tint result = largest(num1, num2, num3);\n\tprintInt(result);\n\tputchar('\\n');\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttestLargest();\n\t}\n}",
            "int largest(int num1, int num2, int num3) {\n\tif (num1 < num2) {\n\t\tnum1 = num2;\n\t}\n\tif (num1 < num3) {\n\t\tnum1 = num3;\n\t}\n\treturn num1;\n}\n",
            "\nfrom random import randint\nfor i in range(10):\n\tprint(f'{randint(1,999):>6}{randint(1,999):>6}{randint(1,999):>6}')\n",
            1605841200,
            1606395600
        ],
        [
            "6.5 GCD",
            "Write a function that returns the <i>greatest common divisor</i> (GCD) of two positive integers.<br>\nFor example, gcd(180,96) returns 12.<br>\n<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=blue>int</font> gcd(<font color=blue>int</font>, <font color=blue>int</font>)</font>\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n    69   227\n   574    52\n   213   683\n   830   514\n   590   912\n   214   532\n   460   866\n   180    96\n   881   560\n   780   974\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n1\n2\n1\n2\n2\n2\n2\n12\n1\n2\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid test_gcd() {\n\tint num1 = getInt();\n\tint num2 = getInt();\n\tint result = gcd(num1, num2);\n\tprintInt(result);\n\tputchar('\\n');\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttest_gcd();\n\t}\n}",
            "# define swap(x,y) int temp = x; x = y; y = temp;\n\t\nint gcd(int num1, int num2) {\n\twhile (num1 != num2) {\n\t\twhile (num1 > num2) {\n\t\t\tnum1 -= num2;\n\t\t}\n\t\tswap(num1, num2);\n\t}\n\treturn num1;\n}\n",
            "from random import randint\nfor i in range(10):\n\tprint(f'{randint(1,999):>6}{randint(1,999):>6}')\n",
            1605841200,
            1606395600
        ],
        [
            "6.6 LCM",
            "Write a function that returns the <i>least common multiple</i> (LCM) of two positive integers.<br>\nFor example, lcm(180, 96) returns 1440.<br>\n<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=blue>int</font> lcm(<font color=blue>int</font>, <font color=blue>int</font>)</font>\n<br>\n<br>\n<b><u>HINT</u></b><br>\nlcm(num1, num2) = num1 * num2 / gcd(num1, num2)<br>\nFor example, lcm(180,96) = 180 * 96 / 12 = 1440<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n    69   227\n   574    52\n   213   683\n   830   514\n   590   912\n   214   532\n   460   866\n   180    96\n   881   560\n   780   974\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n15663\n14924\n145479\n213310\n269040\n56924\n199180\n1440\n493360\n379860\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid test_lcm() {\n\tint num1 = getInt();\n\tint num2 = getInt();\n\tint result = lcm(num1, num2);\n\tprintInt(result);\n\tputchar('\\n');\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttest_lcm();\n\t}\n}",
            "# define swap(x,y) int temp = x; x = y; y = temp;\n\t\nint gcd(int num1, int num2) {\n\twhile (num1 != num2) {\n\t\twhile (num1 > num2) {\n\t\t\tnum1 -= num2;\n\t\t}\n\t\tswap(num1, num2);\n\t}\n\treturn num1;\n}\n\nint lcm(int num1, int num2) {\n\treturn num1 * num2 / gcd(num1, num2);\n}\n",
            "from random import randint\nfor i in range(10):\n\tprint(f'{randint(1,999):>6}{randint(1,999):>6}')\n",
            1605841200,
            1606395600
        ],
        [
            "6.7 Is Prime",
            "Write a function that determines whether a positive integer is a prime number.<br>\nFor example, isPrime(307) returns true.<br>\n<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=blue>int</font> isPrime(<font color=blue>int</font>)</font>\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n   597   650   437   846   731   676   170   746   345   307\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\nFFFFFFFFFT\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid testIsPrime() {\n\tint number = getInt();\n\tchar c = isPrime(number) ? 'T' : 'F';\n\tputchar(c);\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttestIsPrime();\n\t}\n}",
            "int isPrime(int num) {\n\tfor (int i = num / 2; i >= 2; -- i) {\n\t\tif (num % i == 0) return 0;\n\t}\n\treturn 1;\n}\n",
            "from random import randint\nfor i in range(10):\n\tprint(f'{randint(1,999):>6}', end='')\n",
            1605841200,
            1606395600
        ],
        [
            "6.8 Character pattern 1",
            "Print the following pattern with a given size (an odd number).\n<br>\n<img src=\"data:image/png;base64, \">\n<br>\n<b><i>EXAMPLE INPUT 1</i></b>\n<pre>\n5\n</pre>\n<b><i>EXAMPLE OUTPUT 1</i></b>\n<pre>\nYGGGY\nBYGYB\nBBYBB\nBYGYB\nYGGGY\n</pre>\n<b><i>EXAMPLE INPUT 2</i></b>\n<pre>\n7\n</pre>\n<b><i>EXAMPLE OUTPUT 2</i></b>\n<pre>\nYGGGGGY\nBYGGGYB\nBBYGYBB\nBBBYBBB\nBBYGYBB\nBYGGGYB\nYGGGGGY\n</pre>",
            "#include <stdio.h>\n#include \"source.c\"\n\nint main() {\n\tint height_and_width;\n\tscanf(\"%d\", &height_and_width);\n\tprint_pattern(height_and_width);\n}",
            "#define L(i, n) for (int i = 0; i < n; ++ i)\n#define or ||\n#define and &&\n#define not !\n#define elif else if\n\nvoid print_pattern(int n) {\n\tL(i, n) {\n\t\tL(j, n) {\n\t\t\tif (i == j or i + j == n - 1) putchar('Y');\n\t\t\telif (i < j and i + j < n - 1 or i > j and i + j > n - 1) putchar('G');\n\t\t\telse putchar('B');\n\t\t}\n\t\tputchar('\\n');\n\t}\n}\n",
            "\nfrom random import randint\nprint(randint(2,10)*2+1)",
            1605841200,
            1606395600
        ],
        [
            "6.8 Character pattern 2",
            "Print the following pattern with a given height and a given width, where<br>\nheight = i * 5 + i * 4 and width = i * 5 + j, for any i, j ∈ ℕ.\n<br>\n<img src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAHoAAABQCAYAAADWbmG0AAABfGlDQ1BJQ0MgUHJvZmlsZQAAKJFjYGAqSSwoyGFhYGDIzSspCnJ3UoiIjFJgv8PAzcDDIMRgxSCemFxc4BgQ4MOAE3y7xsAIoi/rgsxK8/x506a1fP4WNq+ZclYlOrj1gQF3SmpxMgMDIweQnZxSnJwLZOcA2TrJBUUlQPYMIFu3vKQAxD4BZIsUAR0IZN8BsdMh7A8gdhKYzcQCVhMS5AxkSwDZAkkQtgaInQ5hW4DYyRmJKUC2B8guiBvAgNPDRcHcwFLXkYC7SQa5OaUwO0ChxZOaFxoMcgcQyzB4MLgwKDCYMxgwWDLoMjiWpFaUgBQ65xdUFmWmZ5QoOAJDNlXBOT+3oLQktUhHwTMvWU9HwcjA0ACkDhRnEKM/B4FNZxQ7jxDLX8jAYKnMwMDcgxBLmsbAsH0PA4PEKYSYyjwGBn5rBoZt5woSixLhDmf8xkKIX5xmbARh8zgxMLDe+///sxoDA/skBoa/E////73o//+/i4H2A+PsQA4AJHdp4IxrEg8AAAAJcEhZcwAAFiUAABYlAUlSJPAAAAGcaVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA1LjQuMCI+CiAgIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgICAgIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICAgICAgICAgIHhtbG5zOmV4aWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vZXhpZi8xLjAvIj4KICAgICAgICAgPGV4aWY6UGl4ZWxYRGltZW5zaW9uPjEyMjwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlBpeGVsWURpbWVuc2lvbj44MDwvZXhpZjpQaXhlbFlEaW1lbnNpb24+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgqkD/4lAAAAHGlET1QAAAACAAAAAAAAACgAAAAoAAAAKAAAACgAAAvj4dHkBgAAC69JREFUeAHsXFuTFVcV3nt39zlnZoABkevAzHCTgKZiGW4SIjpGkwJflMREBnnUUguqgBAhJSSWVfwCLyk1XsqqPPniAyhRo4kQCCRqDCYVBU1khkkIiURm5ly6e28P6/tW4wulD1Q5czg89Jq+7d591v7W+talsfdt2RZM89/r/XdfFWa4o1ekj5xI671Il1vIUBKZR9j3NpP9ssP19bwh+9PNuMh7bsH1H+8uy36M28xwlsj+z85VRf75Ui6yFnCdT3CfCzI9Y31NzhuXQuadIp3vEhksjuce8zEW47kkxnmD497jeBQwX2Mp8RiM3dwGzlPHKWRxxUT9Ay/iLX8//Tnair5JFL1z9UYg+v6HZYk+N+/9Ihtc0c4AATGRZTwQlxHxISeiucDzgP15ORC9a2ChnLlvARDY4TDweSLowK/OyvkTI3jOaMB1eaUix12ARQmhLvvBwQI4It8YrNw04LjNOXAJ8wwGz/M8nHA8Q4Qbh/ENzzdNhzwnszjgiPwQIjluFemy10S+3sd9PX+jjnPY4jk6/vWPY0LBY76dGX+XtqJvEkV/YxUQfXrbXlkkh3tWisydLlX6RF3JvgOLyeOAi4GcqA7E5QFIXlZ/V6576I4+kfcunimyQt/+GgBs9j39khw/fhG+tBa6ZX+shP28gBrnEdNX6/R0XoXvVt8LpBuubOMxXlQ4X/p0vqclkglkw9eTucjGc9xrRyb0XzScZlr2L5mnbSsaK6blFf211R+TNz01uFs0/+SCFVipTukakaTIUt8Y4EOvLX1A1EZg3UtGR2Sch9cuEflZIrorgu/4OxHy0IlX5PxvzgOaVQPkN2IoQH1l4UsTzodcwOTYdyDxJuK0sxpMcsTLSzwe02c7TMPUCOGEEFZE40f4T/atJkTPTGyZ8kW6GP3YtqKhwJZX9MG1n5I3ff7zu2SJHpm/jEsVELCGPpFHLZHsPXxgKYLva3gg2fhRuXJxdkmkInpL31zZ7ybrPc/xdp0Eop8ZwjhVP03OuFhJEiCZOpxXl5sZPM9lsCSOFqBSB0foKQOyfV2Q5RTvEWOYZiyB8b1aKvp6R3oekTYH+nRPbsFpT3xBC9WZ4sVsW9E0yS2v6NvvkTc9tQ2I/kXvB7BaA30fEa1xqCGibQ5oxAYyTUijGef2pxdlnL2r+kRuJaKn00cOE1E7ngXr/t0IkDdOREfKogPGrQU8J6gz1jjY4L7YwEl31N+R521a/l6Rg7fNFjmvBNas3JnqVTwXo+lxRPOGszTMJshQk2qDmMgYe7CtaFEcuVqh+JZT9CNk3ScZRx/tuQ0rlr40Knw0fFpuwLZjDwTFzBVntABZBF/Y23hbxtm7Boje1g9kqY8eoqncefxFue7pN4HYqkUc7R1ZPH1lSsvhmanqYAYsWMwjjabIOFNHh0QOLp8qcveH5ovsLwGrzpOGFzluWISGcgBiuMwcf5GJ4nxlsEmwUcuU0YLatqJvEkUf2PBRUf7JB/bIOv3lXCDa0YjZAHYbGJdpVcRa/EAat5YyZsYSeMGF9csy3lfWLRC5fQGQ2k1kXIhx/4NP/UHO//YSkDmWzJD9OqtQmTpVIjAmkkuspmkS2MewAF31N+T+wRWwIDtuXSz7fSVYpETjb6XvzJg1OB8dtkRER6yCySCTaKOINtSTbSsaLqPlFf3V9etF+c9/5suyXo/NXSmylCuUgAQt344WrBdI7+bSKddAZ1LS8xk5qiZfHECm7YGFoDczGMiOkC0fOnoaz30Dvn00QhxtcyC0keABeQRZyjEfx/lpdclaPC9qwJIM3LpUxv30Kjx/LnPndP1Gc8Ga+tZqnZIydclYBk3WKqNNvg2pibFtRUN5La/ob238hEBlfM8BeeMzc3pFFnEyAGSUfTaYIcrZ0VEm264AkCaN4Gs72XmyYfksGW/DexDRJawrj5O9n7qATNY/UliQeoz7dSXW4cpNg2QgYYeIyXmCyC4xk9YgS//rEHLtfzs/LM8PrJ+7BFFDRh+slsryPkWuGjRLyNtJVr1ShZXYL2DbipZ1YFpe0Uc23iuIXveTx+SNGwvAeq0BwjoU0fg9DIFnUuaKtAOlg9ePk+XlzGh1mytyp8a/aYo4NmJcHMWId6sa15IadNFH11gvbjC+TZjDyg1zPhZe1JNNX+G4T7wE9v2jF1+V57+TgPXXLerpDfa4sXHElOmcOylTlrca2oHC92/Ws4q/JvIfTHGb7gBTa9uKhrpaXtFH79okS/TOH35b3jjqAaITXeqMMy1zzbqiqwmg7olcp92i7D7MSWsz+ogSfap2dbI50wTmzJX9Ng/IPLTBJWV8bBzidMeqlTdg54FVtNDAff8ku378lbdknMf+iNz3cAeTmppD19w8561s3rLqk5JDqK+7lvXGwpi4W1gcz9z/FEYptq1oLNiWV/ThTUD0xse/I4s0mYOqj6Ov9Yx3TVElwloepY+uka2WSMu1gyPi9Tzd9IFAXKQ+j7LBLk7t1iziW0JG41rXZAVX/8X00Z736fy0M+Qi7/vBGbDtH78AjvAWo4XRDvpYBtRxBp6tGTO1LBkRnfEFkklWvwrUX1eKX9C2FX2TKPqnm9Bhcvt3vy9YuDx/jsjChTGwVK6pyNE4s0p2XCGCmcAyWv2ZReTOYA9aMPC12qs1RBY8xl40zccpkvW5iK6bXdx8nieHUATWLDJ1Y4zDn3r5nLzHr08MibwSIX6ulRB/Zw6sPSYHUR8caDksfb82oeVFxVqGm/gb5ujLFhbNthWtSU746pZV9DfXbRDQvP4FdIGenr1IVmusZSOuDEWOI3v2RFBgP7RjHOwy9JJ1Z8h4bWEX6CfJ5svMGg/R933v92fkeS+/ietT3t8gLfccN6KPjBmHhyKOBkKdQ/9yzq7H2WWw7M0rlsv40yuYV53xsyMZKDPgDIyPA01SzDKW9ndrYkwtzESHdK6ml/qzbUXDN7W8og+t2SiL9Pj9X5JFergX9ehSCqToV4opV3on497Mw9dGZK9VXfo5fN/CcfDf3QNLZdxt/fD9nUTUa4TE/mdekL9OXYCPraXIXF0uM/PFHLVhPFhmh0jKeN0ru2T36VgDPmnzbCD60MAHZfylHUC0IjJipq1Ey+VjsAJPX5ww0xfIPfwkq1/lnG/RYdJWNOhfyyv6kTUDsshPb98jK/9ID+q3ZX6/nDrkSn2EONhkQFyFuWWvbNoBMWkKuWh8RMbbdec8kdvnI+PWRVZ8jnH3vpN/kvPHh0GG6h7XVelTU16nVasoY8cLLUNKRDvOL6tjvptnwiIdumOJjL+MPt/Rd2k1ztESKdcopGYGiXCrPm+S5LoDLZJlT51tK5o+mqSyZRV9cO1dQPRWfnvVg++jSxkQ0SCilY3aAERb7fRgHThlFSmkiHiXVC8Ikvavh2/+XN902e9kVegckbj7WbDuYwh3TT3MlOuqFTzfF0gC4h17ybxCkghLaFnSGjJom+cgbHr0w4giFlewXyF7z1lHz+mDM658jd9rdOawT834HetB5vb/3CjH+G9zwK9nDGqDV/u624qW36zlFf3o2rtlkTy3dae88JPzbxGpPWPBwSc2uESsB5u17A3Tb56U3Xl2V/aPox68b91cGW9wCZBaITLO0gfuP/mqnD/Gb6/G+H20qYAkVYk8zVxZIjLwq0wl5XEdbDvPYVFWTsWEP9IDCzSrqIoBsxm/+vRaJtOuUAu2X9XxCaGE76sG5n9FlrzcDdxYZf/XsTBFzYBRxTStXrUVTZW1uqK/vgY9Yye37pB19/Oe94nU/7UnsH7ryeKM1mn5+zhFBH2lJ+J662/LOA+u7hU5uAi9Y12Mx88yWX7g+F/k/PER+NBRj06QrAxfa9ljpt/7ysXNjWM3qWbsOsfflVONGF9sNK+QfT+KrlBDC5LC1TeLcRjfsPdNLZTG1SlZvFaBlMVqPV3nocPpvubqb9RxHVfHs9qJoyeuIwNrDFMs3t+2Fc0FRdPcqor+NwAAAP//9xf/MQAAB6RJREFU7Zvfi1VVFMf3PvfeadRxxrlzJ7DBNAz64YumpUmZQjJS0GOU9JRF5JMRREkkWL0HYRD0kKgP9g8EkRA9VdBzkg+KEL0U/TAnZ+4956Rrrc++zL4czp25gzkzxwfX2Wuv9d17r7W/e+9z7h5/YvfB3N3898PhY7eE+3LqIZGJF7VzeSblmw8iMzek9S4R2chTq58TOVubFbmp/bfIN3ZtFXlk490iRxte5OVE8U5cuCjlC782RP7TGBWZNWZEtn1b5KxXP+e1Xe+0PJSpbKTabp5o/Vytrjip9t/nqs8S0xvukO+IXdpR/VBu9ckN0TuLQ9vVpNywOGilc23rB2Xql0oPLnjgl+nnatrf0Uzj6KtEr5JEv7dHGf3dC8ror6YetMliTM6M2WEmG7MSZXbdGN/Irovfjbv+EjnV/lfk0Z3bRB65Z1Lk+rriXTGGnvz6J9F/85vi/TG8Xsqd/JrINNFEuEQZ74yZftaYnClTnVcmtr3O4Jz+1tcKju/oygPjXaL+PlX8PB8WO+cUxzvtf57oigI+K5sZ34GCfGm8Gqn231eJXiWJfufxp2UKXHzpTZmdP049IDLzyoDEGG1bqoPg3vaAWqbMTzLdk9t1lWOpMuLw9u2C9+JmZfRwonv51VT3kI+//Vnqv/9dhLveWCcPNa/+zvZQ53WG+lRlMqszt5ZruZ0oc11dV5YsNya6NYKX2AqS5jbjbQWodbT/uVdGZ9ZOzemK4iwOmZ0NXLQna69v/Q+T0NjKt2R6cGkH/AK9jS+xI5SvEr1KEv38of0yRU6eOqVTY3xCZc6MiaXuiRCjK9Uusz078crYkRFl2uiQ7RWcYm0luDajp+WZttbnufq5RGW3dX3iZcB25pt9tXZZcnoYxIyPJchlDIn9/ueyrUw5gS/oTmIrUC3VSPkq0ask0QenD8hIz509L3NjtLVBZG7vjUwYb+/NlJEd9jjeq/XQSrUz4rok1/dSb+/dvH37uu6xnHZzw7Ezf8+OCJPhI7JvIoeeLc8HPicU9T4Q3QJTcxppXyW6KGR3pn7Rid47fUgY/cXZMzKyydaYyMy4xBco9kJklulMyVKdOt564O39lFMuHRty+hrTsT08M6rnNdvz7f01c8plb2UYHIcdfZCswLHhCikzvNzixkoWGGzjpOztMJPYdwBfJXp5zISBE71n+jnB+OSzT2XEaybHRZad6mA2jOeQHt6zbdOk3uV6una2B2PP3s/enLMEhE2XIWpCmMne6mF0F2e+nZa6b7n4x3rK1M9vldF2cWJ7yviBM6gef/ASAkeFybjd3OyGTPoq0fMjRkAJHLVleuzww35QPf7gLTrRmx/ZL33beextwfxzVBntWOxpqUda0yZyo3LYo+1XpCzlfK0A7OXAEZhwykaBpBkrM2DepwNOqFAN3UfN8b1QH4D0gYWFbrDAFOrxtwYL24nGsdB+hf5Ye3Ec+LUtc/YF0b5L+CrRGrEQQBJBwkhgmR47/LAfVI+/4ZlAS15DGUVPols7nhDf8SPvivGl5n3qFKZuDG2YTFljbtjFYHDYPHkwP6jLVLbABH+oQ7PUh9/Fad+knfId/UVa9YoTxKVwYGZg3+yTTN92fJXowojdmRWLTvRjyugNr30oA7syslWkzoNFjDVsGlGP7HfkwFyYGjfBSkF9BMOHt9CMrQzt8K07BlytZQ3ghN0L8K0q0St0JkSJ3rB7j3Bm9BXdo6+O3a8Dj/fEfsMBE2P7wOioIlDTqAuDQ/sobK+nWPDtPUJffUXOKLmuyetS/V3dV4leYXOhKNFb9u0Tjuw//oGMeGZEb4KEqyRLFIecU3YPnlI0Xgh4H0ePP2X2+lBOA9V7WliVCjuzDNsVE18leoVOgzjRT04/I1Q4fea0jLg52RJ5u/kRmGlxp30k9ZRJD2/pSPTYU8avSI8d9dj3q8cOP3AG1eMPHvhleuz4bOGrRBMylQsNKPagEOCl0oMLHvhleuxCop89oPe6Pz9/TnybLb51A4WEM0DEespFcv4379iKX6PQ8+sZezP3udmbu9I87KoZvSMwAc8eivTYUQ9Ov3rs8ANnUD3+4IFfpqeeL4a+SnQIiTwsNKDYg0IilkoPLnjgl+mpD4mePqg3TE6f0xsm4/we3bW0J5oKFdFDWT1djCUw6LXsw521Mly1z+wb+XwUsFevbNjbjq8SvbInQUj0tqemhQRvfaT3uuvjTRl5+Nul2xaHmLkVNwcKvX2JXMsNkyrRA4XzznWOE71xh37r3vTycen0L2ObRHLq7Y4ExsVMQ48l9QvV448fOP3qscMPnH712OEHTr967PADZ1A9/uCBX6bX+jWZ3tXzVaL7DVxZoAk8eNgPqscfPPDL9FofEj2xa7d4Nl99X2ouTTysFvwuDF4ll1kEdEI0O/rXpb5K9DLLX9/djRLdenSvaCZeV0ZfHtsiUPxFRRe3bOnAUhvo+XLFXbCeX7Gwx7+snSJ7/KkHp189dviB068eO/zAGVSPP3jgl+j5a9ZZY3SV6D4DFyZokT2Bp57EDKrHHzzwS/Rxopt2C7R1VG+YXGneKwhtu/kRLoCAW8llEQH+oGNkzhhdJXpZ5G3BnYwT/R8cEV1Fl93F2AAAAABJRU5ErkJggg==\">\n<br>\n<b><i>EXAMPLE INPUT 1</i></b>\n<pre>9 10\n</pre>\n<b><i>EXAMPLE OUTPUT 1</i></b>\n<pre>NN NNNNNNN\nNN NN     \n     NNNNN\nNN NN     \nNN NNNNNNN\n          \nNNNNNNNNNN\n          \nNNNNNNNNNN\n</pre>\n<b><i>EXAMPLE INPUT 2</i></b>\n<pre>18 18\n</pre>\n<b><i>EXAMPLE OUTPUT 2</i></b>\n<pre>NNNN  NNNNNNNNNNNN\nNNNN  NNNNNNNNNNNN\nNNNN  NNNN        \nNNNN  NNNN        \n          NNNNNNNN\n          NNNNNNNN\nNNNN  NNNN        \nNNNN  NNNN        \nNNNN  NNNNNNNNNNNN\nNNNN  NNNNNNNNNNNN\n                  \n                  \nNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNN\n                  \n                  \nNNNNNNNNNNNNNNNNNN\nNNNNNNNNNNNNNNNNNN\n</pre>",
            "#include <stdio.h>\n#include \"source.c\"\n\nint main() {\n\tint height, width;\n\tscanf(\"%d %d\", &height, &width);\n\tprint_pattern(height, width);\n}",
            "#define L(i, n) for (int i = 0; i < n; ++ i)\n#define or ||\n#define and &&\n#define not !\n#define elif else if\n#define pI(i) printf(#i \"=%d\\n\", i)\n\nvoid print_pattern(int h, int w) {\n\tint n = h / 2 + 1;\n\tint s = n / 5;\n\t// pI(n);\n\t// pI(s);\n\tL(i, h) {\n\t\tL(j, w) {\n\t\t\tif (i < n and j < n) {\n\t\t\t\tif ((i < 2 * s or i >= 3 * s) and (j < 2 * s or j >= 3 * s)) putchar('N');\n\t\t\t\telse putchar(' ');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (i / s % 2 == 0) putchar('N');\n\t\t\t\telse putchar(' ');\n\t\t\t}\n\t\t}\n\t\tputchar('\\n');\n\t}\n}\n",
            "\nfrom random import randint\ni = randint(1,2)\nj = randint(1,3)\nheight = i * 5 + i * 4\nwidth = i * 5 + j\nprint(height, width)",
            1605841200,
            1606395600
        ],
        [
            "6.10 Character pattern 3",
            "Please complete the program according to the input and output examples. <br>\n <br>\n  \n<b><i>EXAMPLE INPUT 1</i></b>\n<pre>\n5\n</pre>\n<b><i>#EXAMPLE OUTPUT 1</i></b>\n<pre>\n*       *       *       *       \n *     * *     * *     * *     *\n  *   *   *   *   *   *   *   * \n   * *     * *     * *     * *  \n    *       *       *       *   \n</pre>\n  \n<b><i>#EXAMPLE INPUT 2</i></b>\n<pre>\n6\n</pre>\n<b><i>#EXAMPLE OUTPUT 2</i></b>\n<pre>\n*         *         *         * \n *       * *       * *       * *\n  *     *   *     *   *     *   \n   *   *     *   *     *   *    \n    * *       * *       * *     \n     *         *         *      \n</pre>",
            "#include \"source.c\"\n\nvoid print_bits(int line) {\n\tfor (int i = 0; i < 32; ++ i) {\n\t\tint bit = (line >> (31 - i)) & 1; // get the i-th bit of the integer\n\t\tputchar(bit ? '*' : ' ');\n\t}\n\tputchar('\\n');\n}\n\nint main() {\n\tint lines; // the number of lines to print\n\tscanf(\"%d\", &lines);\n\tfor (int i = 0; i < lines; ++ i) {\n\t\tint line = get_bits(i, lines); // use an integer of 32 bits to represent the 32 charaters on a line.\n\t\tprint_bits(line);\n\t}\n}",
            "#include <stdio.h>\n\n// 思路：看两个点的移动轨迹是否在当前行上\nint get_bits(int line, int lines) {\n\tint res = 0;\n\tint p1 = 0; // 点1\n\tint m1 = 0; // 点1的移动方向：1/-1\n//\tint p2 = lines - 1; // 点2\n//\tint m2 = 0; // 点2的移动方向：1/-1\n\tfor (int i = 0; i < 32; ++ i) {\n\t\t//if (p1 == line || p2 == line) { // 两个点的移动轨迹在当前行上\n\t\tif (p1 == line) { // 两个点的移动轨迹在当前行上\n\t\t\tres |= (1 << (31 - i)); // 把第i位设为1\n\t\t}\n\t\t// 计算p1的下一个位置\n\t\tif (p1 == 0) m1 = 1;\n\t\tif (p1 == lines - 1) m1 = -1;\n\t\tp1 += m1;\n\t\t// 计算p2的下一个位置\n//\t\tif (p2 == 0) m2 = 1;\n//\t\tif (p2 == lines - 1) m2 = -1;\n//\t\tp2 += m2;\n\t}\n\treturn res;\n}\n",
            "\nfrom random import randint\nprint(randint(3,9))",
            1605841200,
            1606395600
        ],
        [
            "6.11 Recursion",
            "一个细胞每小时分裂一次，第一次分裂发生在第2小时，在分裂出第5个细胞后停止分裂，在第10个小时会死亡。<br>\n那么，在经过n个小时后的分裂后，一个细胞能变成多少个活着的细胞？<br>\n测试中包含10个输入。<br><br>\n\n<b>EXAMPLE INPUT<b>\n<pre>1 2 3 4 5 6 7 8 9 10\n</pre>\n\n<b>EXAMPLE OUTPUT<b>\n<pre>1 2 3 5 8 13 20 32 50 78 \n</pre></b></b></b></b>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint gI() {\n\tint i;\n\tscanf(\"%d\", &i);\n\treturn i;\n}\n\n#define pI(i) printf(\"%d \", i)\n\nint cal(int h) {\n\tint c = 1;\n\tfor (int i = 2; i < 5 + 2 && i <= h; ++ i)\n\t\tc += cal(h - i);\n\tif (h >= 10)\n\t\t-- c;\n\treturn c;\t\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tint hour = gI();\n\t\tpI(cal(hour));\n\t}\n}\n",
            "\nfrom random import randint\nfor i in range(10):\n\tprint(randint(1,20), end=' ')\n",
            1598889600,
            1598889600
        ],
        [
            "7.1 Reverse",
            "Input 10 integers and print them in the reversed order.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>609   452   123   448   872   772    99   746   174   333\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>333 174 746 99 772 872 448 123 452 609\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n#include <string.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid readIntArray(int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tarray[i] = getInt();\n\t}\n}\n\nvoid printIntArray(int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tprintInt(array[i]);\n\t\tputchar(' ');\n\t}\n}\n\n#define swap(x,y) int tmp = x; x = y; y = tmp;\n\nvoid reverse(int array[], int size) {\n\tfor (int i = 0; i < size / 2; ++ i) {\n\t\tswap(array[i], array[size - 1 - i]);\n\t}\n}\n\nint main() {\n\tint array[10];\n\treadIntArray(array, 10);\n\treverse(array, 10);\n\tprintIntArray(array, 10);\n}\n",
            "\nfrom random import randint\nfor i in range(10):\n\tprint(randint(100,999), end='   ')",
            1606275600,
            1607000400
        ],
        [
            "7.2 Max",
            "Find the max of 10 numbers.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n609   452   123   448   872   772    99   746   174   333\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n872\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n#include <string.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid readIntArray(int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tarray[i] = getInt();\n\t}\n}\n\nvoid printIntArray(int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tprintInt(array[i]);\n\t\tputchar(' ');\n\t}\n}\n\nint indexOfMax(int array[], int size) {\n\tint index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif (array[i] > array[index]) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}\n\nint main() {\n\tint array[10];\n\treadIntArray(array, 10);\n\tint index = indexOfMax(array, 10);\n\tprintInt(array[index]);\n}\n",
            "from random import randint\nfor i in range(10):\n\tprint(randint(100,999), end='   ')",
            1606275600,
            1607000400
        ],
        [
            "7.3 Count occurrences",
            "Find the number that occurs the most times among 100 integers.<br>\nWhen two numbers occur the same times, the number occurs first wins.<br>\nPrint this number and its number of occurrences.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>      6      5      3      1      5      2      4      7      7      4\n     10      1      3      5      4      5      2      1      9      1\n      7      9      9      3      1     10      8      9      1      1\n      7      3      4      6      5      8      4      0      8      6\n      5      2      8      2      5      5      9      3      5      8\n      3      1      6      6      6      3      0      2      7      7\n     10      3      8      6      8      1      8      9      2      3\n      5      2      1      6      7      7      6      1      5      9\n      0      7     10      4      9      5      5      6      7      5\n      7      1      8      0      1      2      7      6     10     10\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>5 14\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n#include <string.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid readIntArray(int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tarray[i] = getInt();\n\t}\n}\n\nint count(int number, int array[], int size) {\n\tint count_ = 0;\n\tfor (int i = 0; i < size; ++ i) {\n\t\tif (number == array[i]) {\n\t\t\t++ count_;\n\t\t}\n\t}\n\treturn count_;\n}\n\nint indexOfMax(int array[], int size) {\n\tint index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif (array[i] > array[index]) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}\n\nint main() {\n\tint numbers[100];\n\treadIntArray(numbers, 100);\n\t\n\tint number_counts[100];\n\tfor (int i = 0; i < 100; ++ i) {\n\t\tnumber_counts[i] = count(numbers[i], numbers, 100);\n\t}\n\t\n\tint index = indexOfMax(number_counts, 100);\n\tprintInt(numbers[index]);\n\tputchar(' ');\n\tprintInt(number_counts[index]);\n}\n",
            "from random import randint\nfor i in range(10):\n\tfor j in range(10):\n\t\tprint(f'{randint(1,10):>7}', end='')\n\tprint()",
            1606275600,
            1607000400
        ],
        [
            "7.4 Count occurrences",
            "Read 100 integers.<br>\nPrint all numbers once and their number of occurrences.<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n      6      5      3      1      5      2      4      7      7      4\n     10      1      3      5      4      5      2      1      9      1\n      7      9      9      3      1     10      8      9      1      1\n      7      3      4      6      5      8      4      0      8      6\n      5      2      8      2      5      5      9      3      5      8\n      3      1      6      6      6      3      0      2      7      7\n     10      3      8      6      8      1      8      9      2      3\n      5      2      1      6      7      7      6      1      5      9\n      0      7     10      4      9      5      5      6      7      5\n      7      1      8      0      1      2      7      6     10     10\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n6 11\n5 14\n3 9\n1 13\n2 8\n4 6\n7 12\n10 6\n9 8\n8 9\n0 4\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n#include <string.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid printInt(int val) {\n\tprintf(\"%d\", val); \n}\n\nvoid readIntArray(int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tarray[i] = getInt();\n\t}\n}\n\nvoid printIntArray(int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tprintInt(array[i]);\n\t\tputchar(' ');\n\t}\n}\n\nint count(int number, int array[], int size) {\n\tint count_ = 0;\n\tfor (int i = 0; i < size; ++ i) {\n\t\tif (number == array[i]) {\n\t\t\t++ count_;\n\t\t}\n\t}\n\treturn count_;\n}\n\nint indexOfMax(int array[], int size) {\n\tint index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif (array[i] > array[index]) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}\n\nint find(int number, int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tif (number == array[i]) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nint main() {\n\tint numbers[100];\n\treadIntArray(numbers, 100);\n\t\n\tint number_counts[100];\n\tfor (int i = 0; i < 100; ++ i) {\n\t\tnumber_counts[i] = count(numbers[i], numbers, 100);\n\t}\n\t\n\t//printIntArray(numbers, 100);\n\t//putchar('\\n');\n\t\n\t\n\tint first_occurence[100];\n\tfor (int i = 0; i < 100; ++ i) {\n\t\tfirst_occurence[i] = find(numbers[i], numbers, 100);\n\t}\n\n\tfor (int i = 0; i < 100; ++ i) {\n\t\tif (i == first_occurence[i]) {\n\t\t\tprintInt(numbers[i]);\n\t\t\tputchar(' ');\n\t\t\tprintInt(number_counts[i]);\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n}\n",
            "\nfrom random import randint\nfor i in range(10):\n\tfor j in range(10):\n\t\tprint(f'{randint(1,10):>7}', end='')\n\tprint()",
            1606275600,
            1607000400
        ],
        [
            "7.5 Grades",
            "The program reads 100 grades, find the highest grade, and print a 5-level grades based on the highest grade and the following rules:\n<ul>\n<li>A if the grade is ≥ <i>highest</i> - 10</li>\n<li>B if the grade is ≥ <i>highest</i> - 20</li>\n<li>C if the grade is ≥ <i>highest</i> - 30</li>\n<li>D if the grade is ≥ <i>highest</i> - 40</li>\n<li>F otherwise</li>\n</ul>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n     55     94     49     27     31      0     13     68     51     53\n     42     26     64     64     68     28     49     40     79     59\n     26     25     78     90      9     54     40      3     80     75\n     74     91     23     50     39     85     17     29     19     84\n     88      7     59     95     29      4     56     79     12     38\n     71     29     11     19     30     89     59     34     80      8\n     40     58     51     11     10     13     21      8     63     72\n     92     20     82     29     58     82     51     50      2     33\n     25     62     90     39     28     78     97     36     88     82\n     52     78     49     41     15     90     48     72     51     36\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\nFAFFFFFCFFFFDDCFFFBDFFBAFFFFBCCAFFFBFFFBAFDAFFFBFFCFFFFADFBFFDFFFFFFDCAFBFDBFFFFFDAFFBAFABFBFFFAFCFF\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n#include <string.h>\n\nint getInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid readIntArray(int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tarray[i] = getInt();\n\t}\n}\n\nint indexOfMax(int array[], int size) {\n\tint index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif (array[i] > array[index]) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}\n\nchar getGrade(int best, int grade) {\n\tif (grade >= best - 10) {\n\t\treturn 'A';\n\t}\n\tif (grade >= best - 20) {\n\t\treturn 'B';\n\t}\n\tif (grade >= best - 30) {\n\t\treturn 'C';\n\t}\n\tif (grade >= best - 40) {\n\t\treturn 'D';\n\t}\n\treturn 'F';\n}\n\nint main() {\n\tint array[100];\n\treadIntArray(array, 100);\n\tint index = indexOfMax(array, 100);\n\tint best = array[index];\n\tfor (int i = 0; i < 100; ++ i) {\n\t\tputchar(getGrade(best, array[i]));\n\t}\n}\n",
            "\nfrom random import randint\nfor i in range(10):\n\tfor j in range(10):\n\t\tprint(f'{randint(1,100):>7}', end='')\n\tprint()",
            1605841200,
            1606395600
        ],
        [
            "7.6 Character functions",
            "Implement the following character functions:\n<ul>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isDigit(<font color=\"blue\">char</font> c)</font>\nreturns true if a character is between <font color=\"#CC00CC\">'0'</font> and <font color=\"#CC00CC\">'9'</font>.\n</li>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isLower(<font color=\"blue\">char</font> c)</font>\nreturns true if a character is between <font color=\"#CC00CC\">'a'</font> and <font color=\"#CC00CC\">'z'</font>.\n</li>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isUpper(<font color=\"blue\">char</font> c)</font>\nreturns true if a character is between <font color=\"#CC00CC\">'A'</font> and <font color=\"#CC00CC\">'Z'</font>.\n</li>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isAlphabit(<font color=\"blue\">char</font> c)</font>\nreturns true if a character <i>isLower</i> or <i>isUpper</i>.\n</li>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isAlphabitOrNumber(<font color=\"blue\">char</font> c)</font>\nreturns true if a character <i>isAlphabit</i> or <i>isDigit</i>.\n</li>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isSpace(<font color=\"blue\">char</font> c)</font>\nreturns true if a character is one of <font color=\"#CC00CC\">' '</font>, <font color=\"#CC00CC\">'\\t'</font>, <font color=\"#CC00CC\">'\\r'</font>, or <font color=\"#CC00CC\">'\\n'</font>.\n</li>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isPrintable(<font color=\"blue\">char</font> c)</font>\nreturns true if a character is between <font color=\"#CC00CC\">'!'</font> and <font color=\"#CC00CC\">'~'</font>.\n</li>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isGraphical(<font color=\"blue\">char</font> c)</font>\nreturns true if a character <i>isPrintable</i> but not <i>isSpace</i>.\n</li>\n\n<li><font style=\"background-color: #EEEEEE\"><font color=\"blue\">bool</font> isPunctuation(<font color=\"blue\">char</font> c)</font>\nreturns true if a character <i>isGraphical</i> but not <i>isAlphabitOrNumber</i>.\n</li>\n\n</ul>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>4\n3Ab#\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>isDigit(3) = 1\nisLower(3) = 0\nisUpper(3) = 0\nisAlphabit(3) = 0\nisAlphabitOrNumber(3) = 1\nisSpace(3) = 0\nisPrintable(3) = 1\nisGraphical(3) = 1\nisPunctuation(3) = 0\n\nisDigit(A) = 0\nisLower(A) = 0\nisUpper(A) = 1\nisAlphabit(A) = 1\nisAlphabitOrNumber(A) = 1\nisSpace(A) = 0\nisPrintable(A) = 1\nisGraphical(A) = 1\nisPunctuation(A) = 0\n\nisDigit(b) = 0\nisLower(b) = 1\nisUpper(b) = 0\nisAlphabit(b) = 1\nisAlphabitOrNumber(b) = 1\nisSpace(b) = 0\nisPrintable(b) = 1\nisGraphical(b) = 1\nisPunctuation(b) = 0\n\nisDigit(#) = 0\nisLower(#) = 0\nisUpper(#) = 0\nisAlphabit(#) = 0\nisAlphabitOrNumber(#) = 0\nisSpace(#) = 0\nisPrintable(#) = 1\nisGraphical(#) = 1\nisPunctuation(#) = 1\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint inputInt() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nint inputChar() {\n\tchar val;\n\tscanf(\"%c\", &val);\n\treturn val;\n}\n\nint main() {\n\tint times = inputInt();\n\tinputChar(); // read '\\n'\n\tfor (int i = 0; i < times; ++ i) {\n\t\tchar c = inputChar();\n\t\tprintf(\"isDigit(%c) = %d\\n\", c, isDigit(c));\n\t\tprintf(\"isLower(%c) = %d\\n\", c, isLower(c));\n\t\tprintf(\"isUpper(%c) = %d\\n\", c, isUpper(c));\n\t\tprintf(\"isAlphabit(%c) = %d\\n\", c, isAlphabit(c));\n\t\tprintf(\"isAlphabitOrNumber(%c) = %d\\n\", c, isAlphabitOrNumber(c));\n\t\tprintf(\"isSpace(%c) = %d\\n\", c, isSpace(c));\n\t\tprintf(\"isPrintable(%c) = %d\\n\", c, isPrintable(c));\n\t\tprintf(\"isGraphical(%c) = %d\\n\", c, isGraphical(c));\n\t\tprintf(\"isPunctuation(%c) = %d\\n\", c, isPunctuation(c));\n\t\tputchar('\\n');\n\t}\n}",
            "#define bool int\n\nbool isDigit(char c) {\n\treturn (c >= '0' && c <= '9');\n}\n\nbool isLower(char c) {\n\treturn (c >= 'a' && c <= 'z');\n}\n\nbool isUpper(char c) {\n\treturn (c >= 'A' && c <= 'Z');\n}\n\nbool isAlphabit(char c) {\n\treturn (isLower(c) || isUpper(c));\n}\n\nbool isAlphabitOrNumber(char c) {\n\treturn (isDigit(c) || isAlphabit(c));\n}\n\nbool isSpace(char c) {\n\treturn (c == ' ' || c == '\\r' || c == '\\t' || c == '\\n');\n}\n\nbool isPrintable(char c) {\n\treturn (c >= '!' && c <= '~');\n}\n\nbool isGraphical(char c) {\n\treturn (isPrintable(c) && ! isSpace(c));\n}\n\nbool isPunctuation(char c) {\n\treturn (isGraphical(c) && ! isAlphabitOrNumber(c));\n}\n",
            "\nfrom random import randint\nn = randint(3,9)\nprint(n)\nr = ord('~') - ord('!')\nfor i in range(n):\n\tprint(chr(ord('!')+randint(0,r)), end='')\n",
            1605841200,
            1606395600
        ],
        [
            "7.7 Character array functions",
            "Implement the following character array functions:\n<ul>\n\n<li><font color=\"blue\">unsigned long</font> strlen(<font color=\"blue\">const char</font> text[])\n</li>\n<li><font color=\"blue\">char</font> * strcpy(<font color=\"blue\">char</font> to[], <font color=\"blue\">const char</font> from[])\n</li>\n<li><font color=\"blue\">char</font> * strcat(<font color=\"blue\">char</font> to[], <font color=\"blue\">const char</font> from[])\n</li>\n<li><font color=\"blue\">int</font> strcmp(<font color=\"blue\">const char</font> s1[], <font color=\"blue\">const char</font> s2[])\n</li>\n<li><font color=\"blue\">int</font> atoi(<font color=\"blue\">const char</font> array[])\n</li>\n<li><font color=\"blue\">void</font> itoa(<font color=\"blue\">int</font> value, <font color=\"blue\">char</font> array[])\n</li>\n<li><font color=\"blue\">void</font> substring(<font color=\"blue\">char</font> to[], <font color=\"blue\">const char</font> text[], <font color=\"blue\">int</font> start, <font color=\"blue\">int</font> len)\n</li>\n<li><font color=\"blue\">void</font> insert(<font color=\"blue\">char</font> to[], <font color=\"blue\">int</font> at, <font color=\"blue\">const char</font> ins[])\n</li>\n\n</ul>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>You Me Meet\n12345 -54321\n23456 -65432\nabcdefg 2 4\nXYZ\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>length 3\nstrcpy You\nstrcat YouMe\nstrcmp -101\natoi 12345 -54321\nitoa 23456 -65432\nsubstring cdef\ninsert abXYZcdefg\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint main() {\n\tchar text1[100];\n\tchar text2[100];\n\t\n\tscanf(\"%s\", text1);\n\tprintf(\"length %ld\\n\", strlen(text1));\n\t\n\tstrcpy(text2, text1);\n\tprintf(\"strcpy %s\\n\", text2);\n\t\n\tscanf(\"%s\", text1);\n\tstrcat(text2, text1);\n\tprintf(\"strcat %s\\n\", text2);\n\t\n\tscanf(\"%s\", text2);\n\tprintf(\"strcmp %d\\n\", strcmp(text1, text2));\n\t\n\tscanf(\"%s\", text1);\n\tscanf(\"%s\", text2);\n\tprintf(\"atoi %d %d\\n\", atoi(text1), atoi(text2));\n\t\n\tint number1, number2;\n\tscanf(\"%d %d\", &number1, &number2);\n\titoa(number1, text1);\n\titoa(number2, text2);\n\tprintf(\"itoa %s %s\\n\", text1, text2);\n\t\n\tint start, len;\n\tscanf(\"%s %d %d\", text1, &start, &len);\n\tsubstring(text2, text1, start, len);\n\tprintf(\"substring %s\\n\", text2);\n\t\n\tscanf(\"%s\", text2);\n\tinsert(text1, start, text2);\n\tprintf(\"insert %s\\n\", text1);\n}",
            "#define bool int\n#define true 1\n#define false 0\n\nunsigned long strlen(const char text[]) {\n\tfor (int i = 0; true; ++ i) {\n\t\tif (text[i] == 0) return i;\n\t}\n}\n\nchar * strcpy(char to[], const char from[]) {\n\tfor (int i = 0; true; ++ i) {\n\t\tto[i] = from[i];\n\t\tif (from[i] == 0) break;\n\t}\n\treturn to;\n}\n\nchar * strcat(char to[], const char from[]) {\n\tint length = strlen(to);\n\tstrcpy(&to[length], from);\n\treturn to;\n}\n\nint strcmp(const char s1[], const char s2[]) {\n\tfor (int i = 0; true; ++ i) {\n\t\tint diff = s1[i] - s2[i];\n\t\tif (diff != 0) return diff;\n\t\tif (s1[i] == 0) return 0; \n\t}\n}\n\nint atoi(const char text[]) {\n\tbool negative = (text[0] == '-');\n\tint value = 0;\n\tint i = (negative ? 1 : 0);\n\tfor (; i < strlen(text); ++ i) {\n\t\tvalue = value * 10 + (text[i] - '0');\n\t}\n\treturn (negative ? -value : value);\n}\n\nvoid reverse(char text[]) {\n\tint length = strlen(text);\n\tfor (int i = 0; i < length / 2; ++ i) {\n\t\tchar temp = text[i];\n\t\ttext[i] = text[length - 1 - i];\n\t\ttext[length - 1 - i] = temp;\n\t}\n}\n\nvoid _itoaPositive(int value, char text[]) {\n\tint i = 0;\n\tfor (; value > 0; ++ i) {\n\t\ttext[i] = value % 10 + '0';\n\t\tvalue /= 10;\n\t}\n\ttext[i] = 0;\n\treverse(text);\n}\n\nvoid itoa(int value, char text[]) {\n\tif (value == 0) {\n\t\ttext[0] = '0';\n\t\ttext[1] = 0;\n\t}\n\telse if (value > 0) {\n\t\t_itoaPositive(value, text);\n\t}\n\telse {\n\t\ttext[0] = '-';\n\t\t_itoaPositive(-value, &text[1]);\n\t}\n}\n\nvoid substring(char to[], const char text[], \n\t\t\t\tint start, int len) \n{\n\tfor (int i = 0; i < len; ++ i) {\n\t\tto[i] = text[start + i];\n\t}\n\tto[len] = 0;\n}\n\nvoid insert(char to[], int at, const char ins[]) {\n\tint lenTo = strlen(to);\n\tint lenIns = strlen(ins);\n\tfor (int i = 0; i < lenTo - at; ++ i) {\n\t\tto[lenTo + lenIns - 1 - i] = \n\t\t\tto[lenTo - 1 - i];\n\t}\n\tto[lenTo + lenIns] = 0;\n\tfor (int i = 0; i < lenIns; ++ i) {\n\t\tto[at + i] = ins[i];\n\t}\n}\n",
            "\nfrom random import randint\nprint('''You Me Meet\n12345 -54321\n23456 -65432\nabcdefg 2 4\nXYZ''')\n\n",
            1606448400,
            1607000400
        ],
        [
            "7.8 Input",
            "Input a given number of integers in a single line.<br>\nThe integers are separated only by spaces.<br>\nAssume that each line contains no more than 1,000 characters.<br>\n<br>\nPlease write a function <font color=\"blue\">int</font> readLine(<font color=\"blue\">int</font> array[], <font color=\"blue\">int</font> max), where <i>max</i> is the max number of integers to be read. The number of integers can be smaller than <i>max</i>, the function returns the actual number of integers read.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>     79     38     14     81     41     41     15     24     40\n     17     42     83     53     67     70      1     87     58     85     80\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>79 38 14 81 41 41 15 24 40 \n17 42 83 53 67 70 1 87 58 85 \n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nvoid print(int data[], int length) {\n\tfor (int i = 0; i < length; ++ i) {\n\t\tprintf(\"%d \", data[i]);\n\t}\n\tputchar('\\n');\n}\n\nint main() {\n\tfor (int i = 0; i < 2; ++ i) {\n\t\tint data[10];\n\t\tint count = readLine(data, 10);\n\t\tprint(data, count);\n\t}\n}",
            "#define bool int\n#define true 1\n#define false 0\n\nunsigned long strlen(const char text[]) {\n\tfor (int i = 0; true; ++ i) {\n\t\tif (text[i] == 0) return i;\n\t}\n}\n\nint atoi(const char text[]) {\n\tbool negative = (text[0] == '-');\n\tint value = 0;\n\tint i = (negative ? 1 : 0);\n\tfor (; i < strlen(text); ++ i) {\n\t\tvalue = value * 10 + (text[i] - '0');\n\t}\n\treturn (negative ? -value : value);\n}\n\nbool isSpace(char c) {\n\treturn (c == ' ' || c == '\\r' || c == '\\t' || c == '\\n');\n}\n\nbool isInSet(const char set[], char c) {\n\tint len = strlen(set);\n\tfor (int i = 0; i < len; ++ i) {\n\t\tif (c == set[i]) return true;\n\t}\n\treturn false;\n}\n\nint indexOf(const char line[], const char set[], int start) {\n\tfor (int i = start; true; ++ i) {\n\t\tif (line[i] == 0) return -1;\n\t\tif (isInSet(set, line[i])) return i;\n\t}\n}\n\n#include <stdio.h>\n\nint inputString(char buf[], int bufSize) {\n\tfor (int i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == bufSize - 1) {\n\t\t\tbuf[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\tbuf[i] = c;\n\t}\n}\n\nint readLine(int data[], int max) {\n\tchar line[1000];\n\tinputString(line, 1000);\n\tint length = strlen(line);\n\t\n\tint start = 0;\n\tfor (int i = 0; i < max; ++ i) {\n\t\tstart = indexOf(line, \"-0123456789\", start);\n\t\tif (start == -1) return i;\n\n\t\tint end = indexOf(line, \" \", start);\n\t\tif (end >= 0) {\n\t\t\tline[end] = 0;\n\t\t}\n\t\telse {\n\t\t\tend = length;\n\t\t}\n\t\t\n\t\tdata[i] = atoi(&line[start]);\n\t\t\n\t\tstart = end + 1;\n\t\tif (start >= length) return i + 1;\n\t}\n\treturn max;\n}\n",
            "\nfrom random import randint\nfor i in range(2):\n\tfor j in range(randint(5,15)):\n\t\tprint(f'{randint(1,99):>7}', end='')\n\tprint()",
            1606448400,
            1607000400
        ],
        [
            "7.9 Distinct numbers",
            "Write a function that returns distinct integers.<br>\nAssume that there are no more than 1,000 characters and no more than 20 integers in each line.<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n     17     42     17     42     67\n     79     38     14     81     41     79     81     41     15     24     40     80     81     82     83\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n17 42 67 \n79 38 14 81 41 15 24 40 80 82 \n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nvoid print(int data[], int length) {\n\tfor (int i = 0; i < length; ++ i) {\n\t\tprintf(\"%d \", data[i]);\n\t}\n\tputchar('\\n');\n}\n\nint main() {\n\tfor (int i = 0; i < 2; ++ i) {\n\t\tint data[10];\n\t\tint count = readLineDistinct(data, 10);\n\t\tprint(data, count);\n\t}\n}",
            "#define bool int\n#define true 1\n#define false 0\n\nunsigned long strlen(const char text[]) {\n\tfor (int i = 0; true; ++ i) {\n\t\tif (text[i] == 0) return i;\n\t}\n}\n\nint atoi(const char text[]) {\n\tbool negative = (text[0] == '-');\n\tint value = 0;\n\tint i = (negative ? 1 : 0);\n\tfor (; i < strlen(text); ++ i) {\n\t\tvalue = value * 10 + (text[i] - '0');\n\t}\n\treturn (negative ? -value : value);\n}\n\nbool isSpace(char c) {\n\treturn (c == ' ' || c == '\\r' || c == '\\t' || c == '\\n');\n}\n\nbool isInSet(const char set[], char c) {\n\tint len = strlen(set);\n\tfor (int i = 0; i < len; ++ i) {\n\t\tif (c == set[i]) return true;\n\t}\n\treturn false;\n}\n\nint indexOf(const char line[], const char set[], int start) {\n\tfor (int i = start; true; ++ i) {\n\t\tif (line[i] == 0) return -1;\n\t\tif (isInSet(set, line[i])) return i;\n\t}\n}\n\nint indexOfInt(const int data[], int size, int to_find) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tif (to_find == data[i]) return i;\n\t}\n\treturn -1;\n}\n\n#include <stdio.h>\n\nint inputString(char buf[], int bufSize) {\n\tfor (int i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == bufSize - 1) {\n\t\t\tbuf[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\tbuf[i] = c;\n\t}\n}\n\nint readLineDistinct(int data[], int max) {\n\tchar line[1000];\n\tinputString(line, 1000);\n\tint length = strlen(line);\n\t\n\tint start = 0;\n\tint count = 0;\n\twhile (count < max) {\n\t\tstart = indexOf(line, \"-0123456789\", start);\n\t\tif (start == -1) return count;\n\n\t\tint end = indexOf(line, \" \", start);\n\t\tif (end >= 0) {\n\t\t\tline[end] = 0;\n\t\t}\n\t\telse {\n\t\t\tend = length;\n\t\t}\n\t\t\n\t\t//cout << &line[start] << endl;\n\t\tint val = atoi(&line[start]);\n\t\tif (indexOfInt(data, count, val) == -1) {\n\t\t\tdata[count] = val;\n\t\t\t++ count;\n\t\t}\n\t\t\n\t\tstart = end + 1;\n\t\tif (start >= length) return count;\n\t}\n\treturn max;\n}\n",
            "from random import randint\nfor i in range(2):\n\tn = randint(2,7)\n\td = [randint(1,99) for j in range(n)]\n\tfor j in range(n*2):\n\t\tprint(f'{d[randint(0,len(d)-1)]:>7}', end='')\n\tprint()",
            1606448400,
            1607000400
        ],
        [
            "7.10 Occurrences",
            "Write a function that counts the number of occurrences of each digit in a string using the following header:<br>\n<pre>\nvoid countDigits(const char digits[], int count[]) \n</pre>\nThe function counts how many times a digit appears in the string. The return value is an array of ten elements, each of which holds the count for a digit.<br>\nFor example, if '7' appears 5 times, and the 7-th integer in the returned array is 5.<br>\nIn this problem, we assume that all strings cannot be longer than 100 characters.<br>\n<br>\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n9\n66577611241850072160\n47524868810868027771\n85047736610627034552\n33452604418576051323\n71875563318335068104\n28480331118284085875\n66813208817053002646\n14327167717812020427\n51741035516661036288\n</pre>\n \n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>\n3 4 2 0 1 2 4 3 1 0 \n2 2 2 0 2 1 2 4 5 0 \n3 1 2 2 2 3 3 3 1 0 \n2 2 2 4 3 3 2 1 1 0 \n2 3 0 4 1 3 2 2 3 0 \n2 3 2 2 2 2 0 1 6 0 \n4 2 2 2 1 1 4 1 3 0 \n2 4 4 1 2 0 1 5 1 0 \n2 4 1 2 1 3 4 1 2 0 \n</pre>",
            "#include <stdio.h>\n#include \"source.c\"\n\nvoid printIntArray(int array[], int length) {\n\tfor (int i = 0; i < length; ++ i) {\n\t\tprintf(\"%d \", array[i]);\n\t}\n\tputchar('\\n');\n}\n\nvoid countDigitTest() {\n\tchar digits[100];\n\tscanf(\"%s\", digits);\n\tint count[10];\n\tcountDigits(digits, count);\n\tprintIntArray(count, 10);\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tfor (int i = 0; i < times; ++ i) {\n\t\tcountDigitTest();\n\t}\n}",
            "int stringLength(const char text[]) {\n\tfor (int i = 0; ; ++ i) {\n\t\tif (text[i] == 0) return i;\n\t}\n}\n\nint isDigit(char c) { \n    return (c >= '0' && c <= '9'); \n} \n\nvoid countDigits(const char digits[], int count[]) {\n\tint length = stringLength(digits);\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcount[i] = 0;\n\t}\n\tfor (int i = 0; i < length; ++ i) {\n\t\tif (! isDigit(digits[i])) continue;\n\t\tint num = digits[i] - '0';\n\t\t++ count[num];\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nn = randint(7,15)\nprint(n)\nfor i in range(n):\n\tprint(rand_int(randint(15,25)))",
            1606458000,
            1606464000
        ],
        [
            "7.11 Count letters",
            "Write a function that counts the number of letters in a string with the following header:\n<pre>\nint countLetters(const char s[])\n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n10\nSfytNYkk4CuaYXtk CW\nMZBRFLLrr42aPXXdAo05\ny5XaSKzyy4tStWXXPNpf\nkcjt3JnGG4Ty8VXH3bNp\n6jFNgIbNN4jfNUXqjAbz\nTq05sH UU4JWrTX9yZzJ\nFwmpFFO1149D5SXUNnYT\nrDJIREC884AjKRXD2Mm2\ndK413Dqff4 0pQXnhaKc\nRqkfCenn4qH3PX6wz8m\n</pre>\n\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>\n17\n16\n18\n16\n18\n15\n15\n15\n14\n15\n</pre>",
            "#include <stdio.h>\n#include \"source.c\"\n\nint get_line(char text[], int limit) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == limit - 1) {\n\t\t\ttext[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\ttext[i] = c;\n\t}\n}\n\nvoid test() {\n\tchar line[100];\n\tget_line(line, 100);\n\tprintf(\"%d\\n\", countLetters(line));\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tchar temp[100];\n\tget_line(temp, 100);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "#define bool int\n\nint stringLength(const char string1[]) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tif (string1[i] == 0) return i;\n\t}\n}\n\nbool isLower(char c) { \n    return (c >= 'a' && c <= 'z'); \n} \n\nbool isUpper(char c) { \n    return (c >= 'A' && c <= 'Z'); \n} \n\nbool isAlphabit(char c) { \n    return (isLower(c) || isUpper(c)); \n}\n\nint countLetters(const char s[]) {\n\tint length = stringLength(s);\n\tint count = 0;\n\tint i;\n\tfor (i = 0; i < length; ++ i) {\n\t\tif (isAlphabit(s[i])) ++ count;\n\t}\n\treturn count;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 '):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,15)\nprint(n)\nfor i in range(n):\n\tprint(rand_str(randint(15,25)))\n",
            1607062800,
            1607068800
        ],
        [
            "7.12 Count letters",
            "Write a function that counts the number of occurrence of each of the 26 letters in the string using the following header:<br>\n<pre>\nvoid count(const char line[], int array[])\n</pre>\nThe function returns the numbers of occurrence of the 26 letters as an integer array. We count each letter ignoring it case. That is letters <i>a</i> and <i>A</i> are regarded as the same letter.<br>\n<br>\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n10\nSfytNYkk4CuaYXtk CW\nMZBRFLLrr42aPXXdAo05\ny5XaSKzyy4tStWXXPNpf\nkcjt3JnGG4Ty8VXH3bNp\n6jFNgIbNN4jfNUXqjAbz\nTq05sH UU4JWrTX9yZzJ\nFwmpFFO1149D5SXUNnYT\nrDJIREC884AjKRXD2Mm2\ndK413Dqff4 0pQXnhaKc\nRqkfCenn4qH3PX6wz8m\n</pre>\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>\n1 0 2 0 0 1 0 0 0 0 3 0 0 1 0 0 0 0 1 2 1 0 1 1 3 0 \n2 1 0 1 0 1 0 0 0 0 0 2 1 0 1 1 0 3 0 0 0 0 0 2 0 1 \n1 0 0 0 0 1 0 0 0 0 1 0 0 1 0 2 0 0 2 2 0 0 1 3 3 1 \n0 1 1 0 0 0 2 1 0 2 1 0 0 2 0 1 0 0 0 2 0 1 0 1 1 0 \n1 2 0 0 0 2 1 0 1 3 0 0 0 4 0 0 1 0 0 0 1 0 0 1 0 1 \n0 0 0 0 0 0 0 1 0 2 0 0 0 0 0 0 1 1 1 2 2 0 1 1 1 2 \n0 0 0 1 0 3 0 0 0 0 0 0 1 2 1 1 0 0 1 1 1 0 1 1 1 0 \n1 0 1 2 1 0 0 0 1 2 1 0 2 0 0 0 0 3 0 0 0 0 0 1 0 0 \n1 0 1 2 0 2 0 1 0 0 2 0 0 1 0 1 2 0 0 0 0 0 0 1 0 0 \n0 0 1 0 1 1 0 1 0 0 1 0 1 2 0 1 2 1 0 0 0 0 1 1 0 1\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint readLine(char buf[], int bufSize) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == bufSize - 1) {\n\t\t\tbuf[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\tbuf[i] = c;\n\t}\n}\n\nvoid test() {\n\tchar line[100];\n\treadLine(line, 100);\n\tint array[26];\n\tcount(line, array);\n\tint i;\n\tfor (i = 0; i < 26; ++ i) {\n\t\tprintf(\"%d \", array[i]);\n\t}\n\tputchar('\\n');\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tchar temp[100];\n\treadLine(temp, 100);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "#define bool int\n\nint stringLength(const char string1[]) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tif (string1[i] == 0) return i;\n\t}\n}\n\nbool isLower(char c) { \n    return (c >= 'a' && c <= 'z'); \n} \n\nbool isUpper(char c) { \n    return (c >= 'A' && c <= 'Z'); \n} \n\nbool isAlphabit(char c) { \n    return (isLower(c) || isUpper(c)); \n}\n\nchar toUpper(char c) { \n    if (c >= 'a' && c <= 'z') { \n        return c - 'a' + 'A'; \n    } \n    return c; \n} \n\nvoid count(const char line[], int array[]) {\n\tint length = stringLength(line);\n\tint i;\n\tfor (i = 0; i < 26; ++ i) {\n\t\tarray[i] = 0;\n\t}\n\tfor (i = 0; i < length; ++ i) {\n\t\tchar c = line[i];\n\t\tif (isAlphabit(c)) {\n\t\t\tc = toUpper(c);\n\t\t\t++ array[c - 'A'];\n\t\t}\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789 '):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,15)\nprint(n)\nfor i in range(n):\n\tprint(rand_str(randint(15,25)))\n",
            1607062800,
            1607068800
        ],
        [
            "7.13 Parse Hex",
            "Write a function that parses a hex (16-dight-based) number as a string into a decimal (10-digit-based) integer.\nThe function header is as follows:\n<pre>\nint parseHex(const char hexString[])\n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n10\n12C7830A\n7351BB89\n4FCD308\n55960C86\n6312405\n37CB5C84\n8667412\n1A00AD91\nBABC510\nC35FD9E\n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n315065098\n1934736265\n83677960\n1435896966\n103883781\n936074372\n140932114\n436252049\n195806480\n204864926\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint readLine(char buf[], int bufSize) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == bufSize - 1) {\n\t\t\tbuf[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\tbuf[i] = c;\n\t}\n}\n\nvoid test() {\n\tchar line[100];\n\treadLine(line, 100);\n\tint dec = parseHex(line);\n\tprintf(\"%d\\n\", dec);\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tchar temp[100];\n\treadLine(temp, 100);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "#define bool int\n\nint stringLength(const char string1[]) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tif (string1[i] == 0) return i;\n\t}\n}\n\nbool isLower(char c) { \n    return (c >= 'a' && c <= 'z'); \n} \n\nbool isUpper(char c) { \n    return (c >= 'A' && c <= 'Z'); \n} \n\nbool isAlphabit(char c) { \n    return (isLower(c) || isUpper(c)); \n}\n\nchar toUpper(char c) { \n    if (c >= 'a' && c <= 'z') { \n        return c - 'a' + 'A'; \n    } \n    return c; \n} \n\nbool isDigit(char c) { \n    return (c >= '0' && c <= '9'); \n} \n\nint parseHex(const char hexString[]) {\n\tint length = stringLength(hexString);\n\tint value = 0;\n\tint i;\n\tfor (i = 0; i < length; ++ i) {\n\t\tint d = hexString[i];\n\t\tif (isDigit(d)) {\n\t\t\td = d - '0';\n\t\t}\n\t\telse if (isUpper(d)) {\n\t\t\td = d - 'A' + 10;\n\t\t}\n\t\telse if (isLower(d)) {\n\t\t\td = d - 'a' + 10;\n\t\t}\n\t\tvalue = value * 16 + d;\n\t}\n\treturn value;\n}\n",
            "\nfrom random import randint\n\ndef rand_str0(k, chars='ABCDEF1234567890'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_str1(k, chars='ABCDEF123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,12)\nprint(n)\nfor i in range(n):\n\tprint(rand_str1(1)+rand_str0(randint(3,6)))\n",
            1606448400,
            1607000400
        ],
        [
            "7.14 Parse Bin",
            "Write a function that parses a binary number as a string into a decimal integer.\nThe function header is as follows:\n<pre>\nint parseBin(const char line[])\n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n10\n0010100111011001100001111101011\n1111100011100010111001010011111\n0011000001101000001010011000101\n1100010101110011011010110111001\n0000110001010001000000111101001\n1101110011001010110011111010011\n0101010111100000101011010001111\n1010010011111011111001011111111\n0110100001110001001000110100011\n1011100101001010010010111001001\n</pre>\n\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>\n351060971\n2087809695\n406066373\n1656337849\n103317993\n1852139475\n720393871\n1383985919\n876122531\n1554326985\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint readLine(char buf[], int bufSize) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == bufSize - 1) {\n\t\t\tbuf[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\tbuf[i] = c;\n\t}\n}\n\nvoid test() {\n\tchar line[100];\n\treadLine(line, 100);\n\tint dec = parseBin(line);\n\tprintf(\"%d\\n\", dec);\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tchar temp[100];\n\treadLine(temp, 100);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "#define bool int\n\nint stringLength(const char string1[]) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tif (string1[i] == 0) return i;\n\t}\n}\n\nbool isLower(char c) { \n    return (c >= 'a' && c <= 'z'); \n} \n\nbool isUpper(char c) { \n    return (c >= 'A' && c <= 'Z'); \n} \n\nbool isAlphabit(char c) { \n    return (isLower(c) || isUpper(c)); \n}\n\nchar toUpper(char c) { \n    if (c >= 'a' && c <= 'z') { \n        return c - 'a' + 'A'; \n    } \n    return c; \n} \n\nbool isDigit(char c) { \n    return (c >= '0' && c <= '9'); \n} \n\nint parseBin(const char line[]) {\n\tint length = stringLength(line);\n\tint value = 0;\n\tint i;\n\tfor (i = 0; i < length; ++ i) {\n\t\tint d = line[i];\n\t\tif (isDigit(d)) {\n\t\t\td = d - '0';\n\t\t}\n\t\telse if (isUpper(d)) {\n\t\t\td = d - 'A' + 10;\n\t\t}\n\t\telse if (isLower(d)) {\n\t\t\td = d - 'a' + 10;\n\t\t}\n\t\tvalue = value * 2 + d;\n\t}\n\treturn value;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='01'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,12)\nprint(n)\nfor i in range(n):\n\tprint(rand_str(randint(20,30)))",
            1606448400,
            1607000400
        ],
        [
            "7.15 Dec to Hex",
            "Write a function that parses a decimal (10-digit-based) number into a heximal (16-digit-based) number as a string.\nThe function headers is as follows:\n<pre>void decToHex(const char dec[], char hex[])\n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>10\n351060971\n2087809695\n406066373\n1656337849\n103317993\n1852139475\n720393871\n1383985919\n876122531\n1554326985 \n</pre>\n\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>14ECC3EB\n7C71729F\n183414C5\n62B9B5B9\n62881E9\n6E6567D3\n2AF0568F\n527DF2FF\n343891A3\n5CA525C9\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint readLine(char buf[], int bufSize) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == bufSize - 1) {\n\t\t\tbuf[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\tbuf[i] = c;\n\t}\n}\n\nvoid test() {\n\tchar dec[100], hex[100];\n\treadLine(dec, 100);\n\tdecToHex(dec, hex);\n\tprintf(\"%s\\n\", hex);\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tchar temp[100];\n\treadLine(temp, 100);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "#define bool int\n\nint stringLength(const char string1[]) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tif (string1[i] == 0) return i;\n\t}\n}\n\nbool isLower(char c) { \n    return (c >= 'a' && c <= 'z'); \n} \n\nbool isUpper(char c) { \n    return (c >= 'A' && c <= 'Z'); \n} \n\nbool isAlphabit(char c) { \n    return (isLower(c) || isUpper(c)); \n}\n\nchar toUpper(char c) { \n    if (c >= 'a' && c <= 'z') { \n        return c - 'a' + 'A'; \n    } \n    return c; \n} \n\nbool isDigit(char c) { \n    return (c >= '0' && c <= '9'); \n} \n\nlong parseNumber(const char line[], int base) {\n\tint length = stringLength(line);\n\tlong value = 0;\n\tint i;\n\tfor (i = 0; i < length; ++ i) {\n\t\tint d = line[i];\n\t\tif (isDigit(d)) {\n\t\t\td = d - '0';\n\t\t}\n\t\telse if (isUpper(d)) {\n\t\t\td = d - 'A' + 10;\n\t\t}\n\t\telse if (isLower(d)) {\n\t\t\td = d - 'a' + 10;\n\t\t}\n\t\tvalue = value * base + d;\n\t}\n\treturn value;\n}\n\nvoid stringCopy(char to[], const char from[]) { \n    for (int i = 0; ; ++ i) { \n        to[i] = from[i]; \n        if (to[i] == 0) break; \n    } \n} \n\nvoid stringReverse(char s[]) { \n    int length = stringLength(s); \n    for (int i = 0; i < length / 2; ++ i) { \n        char temp = s[i]; \n        s[i] = s[length - i - 1]; \n        s[length - i - 1] = temp; \n    } \n} \n\nvoid longToArray(long value, char s[], int base) { \n    if (value == 0) { \n        stringCopy(s, \"0\"); \n    } \n    int length = 0; \n    while (value > 0) { \n        int digit = value % base; \n        value = value / base; \n        if (digit < 10) digit += '0'; \n        else digit += ('A' - 10); \n        s[length] = digit; \n        ++ length; \n    } \n    s[length] = 0; \n    stringReverse(s); \n}\n\n// #include <stdio.h>\n\nvoid decToHex(const char dec[], char hex[]) {\n\tlong number = parseNumber(dec, 10);\n\t// printf(\"%ld\", number);\n\tlongToArray(number, hex, 16);\n}\n",
            "\nfrom random import randint\n\ndef rand_str0(k, chars='01234567'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_str1(k, chars='1234567'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,12)\nprint(n)\nfor i in range(n):\n\tprint(rand_str1(1)+rand_str0(randint(5,8)))",
            1606448400,
            1607000400
        ],
        [
            "7.16 Dec to Bin",
            "Write a function that parses a decimal (10-digit-based) number into a binary (2-digit-based) number as a string.\nThe function headers is as follows:\n<pre>\nvoid decToBin(const char dec[], char bin[])\n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n10\n351060971\n2087809695\n406066373\n1656337849\n103317993\n1852139475\n720393871\n1383985919\n876122531\n1554326985 \n</pre>\n\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>\n10100111011001100001111101011\n1111100011100010111001010011111\n11000001101000001010011000101\n1100010101110011011010110111001\n110001010001000000111101001\n1101110011001010110011111010011\n101010111100000101011010001111\n1010010011111011111001011111111\n110100001110001001000110100011\n1011100101001010010010111001001\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint readLine(char buf[], int bufSize) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == bufSize - 1) {\n\t\t\tbuf[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\tbuf[i] = c;\n\t}\n}\n\nvoid test() {\n\tchar dec[100], bin[100];\n\treadLine(dec, 100);\n\tdecToBin(dec, bin);\n\tprintf(\"%s\\n\", bin);\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tchar temp[100];\n\treadLine(temp, 100);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "#define bool int\n\nint stringLength(const char string1[]) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tif (string1[i] == 0) return i;\n\t}\n}\n\nbool isLower(char c) { \n    return (c >= 'a' && c <= 'z'); \n} \n\nbool isUpper(char c) { \n    return (c >= 'A' && c <= 'Z'); \n} \n\nbool isAlphabit(char c) { \n    return (isLower(c) || isUpper(c)); \n}\n\nchar toUpper(char c) { \n    if (c >= 'a' && c <= 'z') { \n        return c - 'a' + 'A'; \n    } \n    return c; \n} \n\nbool isDigit(char c) { \n    return (c >= '0' && c <= '9'); \n} \n\nlong parseNumber(const char line[], int base) {\n\tint length = stringLength(line);\n\tlong value = 0;\n\tint i;\n\tfor (i = 0; i < length; ++ i) {\n\t\tint d = line[i];\n\t\tif (isDigit(d)) {\n\t\t\td = d - '0';\n\t\t}\n\t\telse if (isUpper(d)) {\n\t\t\td = d - 'A' + 10;\n\t\t}\n\t\telse if (isLower(d)) {\n\t\t\td = d - 'a' + 10;\n\t\t}\n\t\tvalue = value * base + d;\n\t}\n\treturn value;\n}\n\nvoid stringCopy(char to[], const char from[]) { \n    for (int i = 0; ; ++ i) { \n        to[i] = from[i]; \n        if (to[i] == 0) break; \n    } \n} \n\nvoid stringReverse(char s[]) { \n    int length = stringLength(s); \n    for (int i = 0; i < length / 2; ++ i) { \n        char temp = s[i]; \n        s[i] = s[length - i - 1]; \n        s[length - i - 1] = temp; \n    } \n} \n\nvoid longToArray(long value, char s[], int base) { \n    if (value == 0) { \n        stringCopy(s, \"0\"); \n    } \n    int length = 0; \n    while (value > 0) { \n        int digit = value % base; \n        value = value / base; \n        if (digit < 10) digit += '0'; \n        else digit += ('A' - 10); \n        s[length] = digit; \n        ++ length; \n    } \n    s[length] = 0; \n    stringReverse(s); \n}\n\nvoid decToBin(const char dec[], char bin[]) {\n\tlong number = parseNumber(dec, 10);\n\tlongToArray(number, bin, 2);\n}\n",
            "\nfrom random import randint\n\ndef rand_str0(k, chars='01234567'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_str1(k, chars='1234567'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,12)\nprint(n)\nfor i in range(n):\n\tprint(rand_str1(1)+rand_str0(randint(5,8)))",
            1606448400,
            1607000400
        ],
        [
            "7.17 Sort",
            "Write a function that returns a sorted string with the following header:\n<pre>\nvoid sort(char s[])\n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n10\n351060971\n2087809695\n406066373\n1656337849\n103317993\n1852139475\n720393871\n1383985919\n876122531\n1554326985 \n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n001135679\n0025678899\n003346667\n1334566789\n011333799\n1123455789\n012337789\n1133588999\n112235678\n1234555689\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint readLine(char buf[], int bufSize) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == EOF || c == '\\n' || i == bufSize - 1) {\n\t\t\tbuf[i] = 0;\n\t\t\treturn i;\n\t\t}\n\t\tbuf[i] = c;\n\t}\n}\n\nvoid test() {\n\tchar text[100];\n\treadLine(text, 100);\n\tsort(text);\n\tprintf(\"%s\\n\", text);\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tchar temp[100];\n\treadLine(temp, 100);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "int stringLength(const char string1[]) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tif (string1[i] == 0) return i;\n\t}\n}\n\nvoid stringCopy(char to[], const char from[]) {\n\tint i;\n    for (i = 0; ; ++ i) { \n        to[i] = from[i]; \n        if (to[i] == 0) break; \n    } \n} \n\nint maxIndex(char s[], int length) {\n\tint index = 0;\n\tint i;\n\tfor (i = 1; i < length; ++ i) {\n\t\tif (s[i] > s[index]) {\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}\n\nvoid swapCharArrayElements(char s[], int index1, int index2) {\n\tchar temp = s[index1];\n\ts[index1] = s[index2];\n\ts[index2] = temp;\n}\n\nvoid selectionSort(char s[], int length) {\n\tif (length == 1) return;\n\tint index = maxIndex(s, length);\n\tswapCharArrayElements(s, index, length - 1);\n\tselectionSort(s, length - 1);\n}\n\nvoid sort(char s[]) {\n\tselectionSort(s, stringLength(s));\n}\n",
            "\nfrom random import randint\n\ndef rand_str0(k, chars='0123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_str1(k, chars='123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,12)\nprint(n)\nfor i in range(n):\n\tprint(rand_str1(1)+rand_str0(randint(5,8)))",
            1606448400,
            1607000400
        ],
        [
            "7.18 Anagram",
            "Write a function that checks whether two words are anagrams. <br>\nTwo words are anagrams if they contain the same letters in any order. <br>\nFor example \"silent\" and \"listen\" are anagrams. <br>\nThe header of the function is as follows:\n<pre>bool isAnagram(const char s1[], const char s2[])\n</pre>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>10\n351060971 001135679\n2087809695 4025678899\n406066373 003346667\n1656337849 1334566789\n103317993 011333799\n1852139475 1123455789\n720393871 12337789\n1383985919 1133588899\n876122531 112235678\n1554326985 1234555689\n</pre>\n\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>true\nfalse\ntrue\ntrue\ntrue\ntrue\nfalse\nfalse\ntrue\ntrue\n</pre>",
            "#define bool int\n#include \"source.c\"\n#include <stdio.h>\n\nvoid test() {\n\tchar s1[100], s2[100];\n\tscanf(\"%s\", s1);\n\tscanf(\"%s\", s2);\n\tbool res = isAnagram(s1, s2);\n\tprintf(\"%s\\n\", (res ? \"true\" : \"false\"));\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "int _getInsertionPosition(const char s[], int length, char toIns) {\n\tint i;\n    for (i = 0; i < length; ++ i) { \n        if (s[i] > toIns) return i;\n    }\n\treturn length;\n}\n\nvoid _moveChars(char s[], int from, int to, int steps) {\n\tint i;\n\tif (steps < 0) {\n\t\tfor (i = from; i <= to; ++ i) {\n\t\t\ts[i + steps] = s[i];\n\t\t}\n\t}\n\telse {\n\t\tfor (i = to; i >= from; -- i) {\n\t\t\ts[i + steps] = s[i];\n\t\t}\n\t}\n}\n\nvoid _insert(char s[], int length, char toIns) {\n\tint insIndex = _getInsertionPosition(s, length, toIns);\n\t_moveChars(s, insIndex, length - 1, 1);\n\ts[insIndex] = toIns;\n}\n\nvoid insertionSort(char s[], int length) {\n\tif (length <= 1) return;\n\tinsertionSort(s, length - 1);\n\t_insert(s, length - 1, s[length - 1]);\n}\n\n#include <string.h>\n\nvoid sort(char s[]) {\n\tinsertionSort(s, strlen(s));\n}\n\nbool isAnagram(const char s1[], const char s2[]) {\n\tchar s3[100];\n\tchar s4[100];\n\tstrcpy(s3, s1);\n\tstrcpy(s4, s2);\n\tsort(s3);\n\tsort(s4);\n\treturn 0 == strcmp(s3, s4);\n}\n",
            "\nfrom random import randint\n\ndef rand_str0(k, chars='0123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_str1(k, chars='123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,12)\nprint(n)\nfor i in range(n):\n\ttext1 = rand_str1(1)+rand_str0(randint(5,8))\n\ttext2 = ''.join(sorted(text1))\n\tif randint(0,1) == 0:\n\t\ttext2 = text2.replace(text2[randint(0,len(text2)-1)], rand_str0(1))\n\tprint(text1, text2)",
            1606448400,
            1607000400
        ],
        [
            "7.19 Common prefix",
            "Write a function that returns the common prefix of two strings. <br>\nThe header of the function is as follows:\n<pre>\ncommonPrefix(const char s1[], const char s2[], char prefix[])\n</pre>\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n10\n351060971 3510135679\n2087809695 20878099\n406066373 406066346667\n1656337849 1334566789\n103317993 011333799\n1852139475 185213923455789\n720393871 7203938712337789\n1383985919 13833588899\n876122531 876125678\n12345556896985 1234555689\n</pre>\n<u><i>EXAMPLE INPUT</i></u>\n<pre>\n3510\n2087809\n4060663\n1\n\n1852139\n720393871\n1383\n87612\n1234555689\n</pre>",
            "#define bool int\n#include \"source.c\"\n#include <stdio.h>\n\nvoid test() {\n\tchar s1[100], s2[100], prefix[100];\n\tscanf(\"%s\", s1);\n\tscanf(\"%s\", s2);\n\tcommonPrefix(s1, s2, prefix);\n\tprintf(\"%s\\n\", prefix);\n}\n\nint main() {\n\tint times;\n\tscanf(\"%d\", &times);\n\tint i;\n\tfor (i = 0; i < times; ++ i) {\n\t\ttest();\n\t}\n}",
            "void commonPrefix(const char s1[], const char s2[], char prefix[]) {\n\tint length = 0;\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tif (s1[i] != s2[i]) break;\n\t\tprefix[i] = s1[i];\n\t\t++ length;\n\t}\n\tprefix[length] = 0;\n}\n",
            "\nfrom random import randint\n\ndef rand_str0(k, chars='0123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_str1(k, chars='123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(7,12)\nprint(n)\nfor i in range(n):\n\ttext0 = rand_str0(randint(0,8))\n\tif len(text0) > 0 and text0[0] == '0':\n\t\ttext0 = rand_str1(1)+text0\n\ttext1 = rand_str1(1)+rand_str0(randint(5,8))\n\ttext2 = rand_str1(1)+rand_str0(randint(5,8))\n\tprint(text0+text1, text0+text2)\n",
            1606880400,
            1607000400
        ],
        [
            "7.20 get ints",
            "Get all integers from the console.<br>\n<br>\n<b>EXAMPLE INPUT</b>\n<pre>\n    akdfadfa 13413412   adfef   23423berf  \n</pre>\n\n<b>EXAMPLE OUTPUT</b>\n<pre>\n13413412\n23423\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nvoid get_line(char line[]) {\n\tfor (int i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == -1 || c == '\\n') {\n\t\t\tline[i] = 0;\n\t\t\tbreak;\n\t\t}\n\t\tline[i] = c;\n\t}\n}\n\nint main() {\n\tchar line[1000];\n\tget_line(line);\n\tchar * ints[100];\n\tget_ints(line, ints);\n\tfor (int i = 0; i < 100; ++ i) {\n\t\tif (ints[i] == 0) break;\n\t\tputs(ints[i]);\n\t}\n}",
            "int int_index(char line[], int * size) {\n\tint index = -1;\n\tfor (int i = 0; ; ++ i) {\n\t\tif (index == -1) {\n\t\t\tif (line[i] == 0) return -1;\n\t\t\tif (line[i] >= '0' && line[i] <= '9') {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (line[i] < '0' || line[i] > '9') {\n\t\t\t\t*size = i - index;\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid get_ints(char line[], char * ints[]) {\n\tchar * p = line;\n\tint size;\n\tfor (int i = 0; ; ++ i) {\n\t\tint index = int_index(p, &size);\n\t\tif (index == -1) {\n\t\t\tints[i] = 0;\n\t\t\tbreak;\n\t\t}\n\t\tints[i] = p + index;\n\t\tif (p[index + size] == 0) {\n\t\t\tints[i+1] = 0;\n\t\t\tbreak;\n\t\t}\n\t\tp[index + size] = 0;\n\t\tp = p + index + size + 1;\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'.lower()):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_int(k, chars='123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nfor i in range(randint(5,8)):\n\tprint(' '*randint(1,5), end='')\n\tif randint(0,1) == 0:\n\t\tprint(rand_str(randint(3,8)), end='')\n\tif randint(0,1) == 0:\n\t\tprint(rand_int(randint(3,8)), end='')\nprint(' '*randint(0,2), end='')\n\t",
            1607049600,
            1607605200
        ],
        [
            "7.21 get specific ints",
            "Get all integers from the console.<br>\n<br>\n<b>EXAMPLE INPUT</b>\n<pre>\nstudent_id=13413412 num_of_books=20 floors=7\nfloors student_id\n</pre>\n\n<b>EXAMPLE OUTPUT</b>\n<pre>\n7\n13413412\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nvoid get_line(char line[]) {\n\tfor (int i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == -1 || c == '\\n') {\n\t\t\tline[i] = 0;\n\t\t\tbreak;\n\t\t}\n\t\tline[i] = c;\n\t}\n}\n\nint main() {\n\tchar line[1000];\n\tget_line(line);\n\tfor (int i = 0; i < 2; ++ i) {\n\t\tchar key[100];\n\t\tscanf(\"%s\", key);\n\t\tint value = get_int(line, key);\n\t\tprintf(\"%d\\n\", value);\n\t}\n}",
            "#include <string.h>\n#include <stdio.h>\n\nint int_index(char line[], int * size) {\n\tint index = -1;\n\tfor (int i = 0; ; ++ i) {\n\t\tif (index == -1) {\n\t\t\tif (line[i] == 0) return -1;\n\t\t\tif (line[i] >= '0' && line[i] <= '9') {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (line[i] < '0' || line[i] > '9') {\n\t\t\t\t*size = i - index;\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint index_(char line[], char key[]) {\n\tint len = strlen(key);\n\tint total_len = strlen(line);\n\tfor (int i = 0; i <= total_len - len; ++ i) {\n\t\tif (strncmp(line + i, key, len) == 0) return i;\n\t}\n\treturn -1;\n}\n\nint atoi_(char word[]) {\n\tint len = strlen(word);\n\tint value = 0;\n\tfor (int i = 0; i < len; ++ i) {\n\t\tvalue = value * 10 + word[i] - '0';\n\t}\n\treturn value;\n}\n\nint get_int(char line[], char key[]) {\n\tint start = index_(line, key);\n\tif (start == -1) return 0;\n\tint size;\n\tint index = int_index(line + start, &size);\n\tif (index == -1) {\n\t\tputs(\"No number\");\n\t\treturn 0;\n\t}\n\tchar c = line[start + index + size];\n\tline[start + index + size] = 0;\n\tint val = atoi_(line + start + index);\n\tline[start + index + size] = c;\n\treturn val;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ_'.lower()):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_int(k, chars='123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(3,9)\nd = {rand_str(randint(3,8)):rand_int(randint(3,8)) for i in range(n)}\nprint(' '.join(f'{k}={v}' for k,v in d.items()))\nkeys = list(d.keys())\nk=2\nprint(' '.join(keys[randint(0,n-1)] for i in range(k)))\n",
            1607049600,
            1607605200
        ],
        [
            "io.4",
            "Please replace all <i>C++</i> in the text with <i>JAVA</i>\n<br>\n<br>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>The C++ rules and recommendations in this wiki are a work\n in progress and reflect the current thinking of the secure\n coding community. Because this is a development website, \nmany pages are incomplete or contain errors. As rules and \nrecommendations mature, they are published in report or \nbook form as official releases. These releases are issued \nas dictated by the needs and interests of the secure \nsoftware development community.\n\nThe CERT C++ Coding Standard does not currently expose \nany recommendations; all C++ recommendations have been \nremoved (moved to The Void section) due to quality concerns \npending further review and development. Create a sign-in \naccount if you want to comment on existing content. \nIf you wish to be more involved and directly edit content \non the site, you still need an account, but you'll also \nneed to request edit privileges. \n</pre>\n\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>The JAVA rules and recommendations in this wiki are a work\n in progress and reflect the current thinking of the secure\n coding community. Because this is a development website, \nmany pages are incomplete or contain errors. As rules and \nrecommendations mature, they are published in report or \nbook form as official releases. These releases are issued \nas dictated by the needs and interests of the secure \nsoftware development community.\n\nThe CERT JAVA Coding Standard does not currently expose \nany recommendations; all JAVA recommendations have been \nremoved (moved to The Void section) due to quality concerns \npending further review and development. Create a sign-in \naccount if you want to comment on existing content. \nIf you wish to be more involved and directly edit content \non the site, you still need an account, but you'll also \nneed to request edit privileges.\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n#include <string.h>\n\n#define bool int\n#define true 1\n#define false 0\n\nvoid read(char text[], int limit) {\n\tint i;\n\tfor (i = 0; i < limit; ++ i) {\n\t\ttext[i] = fgetc(stdin);\n\t\tif (i == limit - 1 || feof(stdin)) {\n\t\t\ttext[i] = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nvoid moveChars(char text[], int start, int moves) {\n\tint len = strlen(text);\n\tint i;\n\tif (moves > 0) {\n\t\tfor (i = len; i >= start; -- i) {\n\t\t\ttext[i + moves] = text[i];\n\t\t}\n\t}\n\telse {\n\t\tfor (i = start; i <= len; ++ i) {\n\t\t\ttext[i + moves] = text[i];\n\t\t}\t\n\t}\n}\n\nint find(const char inText[], const char pattern[]) {\n\tint len = strlen(inText);\n\tint plen = strlen(pattern);\n\tint i;\n\tfor (i = 0; i < len - plen; ++ i) {\n\t\tif (strncmp(pattern, inText + i, plen) == 0) return i;\n\t}\n\treturn -1;\n}\n\nvoid copyChars(char to[], const char from[], int chars) {\n\tint i;\n\tfor (i = 0; i < chars; ++ i) {\n\t\tto[i] = from[i];\n\t}\n}\n\nbool replace(char inText[], const char pattern[], const char withPattern[]) {\n\tint len = strlen(inText);\n\tint plen = strlen(pattern);\n\tint wlen = strlen(withPattern);\n\tint index = find(inText, pattern);\n\tif (index == -1) return false;\n\tmoveChars(inText, index + plen, wlen - plen);\n\tstrncpy(inText + index, withPattern, wlen);\n\treturn true;\n}\n\nvoid replaceAll(char inText[], const char pattern[], const char withPattern[]) {\n\twhile (replace(inText, pattern, withPattern));\n}\n\nint main() {\n\tchar text[5000];\n\tread(text, 4000);\n\treplaceAll(text, \"C++\", \"JAVA\");\n\tputs(text);\n}\n",
            "print('''The C++ rules and recommendations in this wiki are a work\n in progress and reflect the current thinking of the secure\n coding community. Because this is a development website, \nmany pages are incomplete or contain errors. As rules and \nrecommendations mature, they are published in report or \nbook form as official releases. These releases are issued \nas dictated by the needs and interests of the secure \nsoftware development community.\n\nThe CERT C++ Coding Standard does not currently expose \nany recommendations; all C++ recommendations have been \nremoved (moved to The Void section) due to quality concerns \npending further review and development. Create a sign-in \naccount if you want to comment on existing content. \nIf you wish to be more involved and directly edit content \non the site, you still need an account, but you'll also \nneed to request edit privileges. ''')",
            1598889600,
            1598889600
        ],
        [
            "io.5",
            "Please replace all <i>C++</i> in the text with numbers.\n<br>\n<br>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>The C++ rules and recommendations in this wiki are a work\n in progress and reflect the current thinking of the secure\n coding community. Because this is a development website, \nmany pages are incomplete or contain errors. As rules and \nrecommendations mature, they are published in report or \nbook form as official releases. These releases are issued \nas dictated by the needs and interests of the secure \nsoftware development community.\n\nThe CERT C++ Coding Standard does not currently expose \nany recommendations; all C++ recommendations have been \nremoved (moved to The Void section) due to quality concerns \npending further review and development. Create a sign-in \naccount if you want to comment on existing content. \nIf you wish to be more involved and directly edit content \non the site, you still need an account, but you'll also \nneed to request edit privileges.</pre>\n\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>The {1} rules and recommendations in this wiki are a work\n in progress and reflect the current thinking of the secure\n coding community. Because this is a development website, \nmany pages are incomplete or contain errors. As rules and \nrecommendations mature, they are published in report or \nbook form as official releases. These releases are issued \nas dictated by the needs and interests of the secure \nsoftware development community.\n\nThe CERT {2} Coding Standard does not currently expose \nany recommendations; all {3} recommendations have been \nremoved (moved to The Void section) due to quality concerns \npending further review and development. Create a sign-in \naccount if you want to comment on existing content. \nIf you wish to be more involved and directly edit content \non the site, you still need an account, but you'll also \nneed to request edit privileges.\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n#include <string.h>\n\n#define bool int\n#define true 1\n#define false 0\n\nvoid read(char text[], int limit) {\n\tint i;\n\tfor (i = 0; i < limit; ++ i) {\n\t\ttext[i] = fgetc(stdin);\n\t\tif (i == limit - 1 || feof(stdin)) {\n\t\t\ttext[i] = 0;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nvoid moveChars(char text[], int start, int moves) {\n\tint len = strlen(text);\n\tint i;\n\tif (moves > 0) {\n\t\tfor (i = len; i >= start; -- i) {\n\t\t\ttext[i + moves] = text[i];\n\t\t}\n\t}\n\telse {\n\t\tfor (i = start; i <= len; ++ i) {\n\t\t\ttext[i + moves] = text[i];\n\t\t}\t\n\t}\n}\n\nint find(const char inText[], const char pattern[]) {\n\tint len = strlen(inText);\n\tint plen = strlen(pattern);\n\tint i;\n\tfor (i = 0; i < len - plen; ++ i) {\n\t\tif (strncmp(pattern, inText + i, plen) == 0) return i;\n\t}\n\treturn -1;\n}\n\nvoid copyChars(char to[], const char from[], int chars) {\n\tint i;\n\tfor (i = 0; i < chars; ++ i) {\n\t\tto[i] = from[i];\n\t}\n}\n\nbool replace(char inText[], const char pattern[], const char withPattern[]) {\n\tint len = strlen(inText);\n\tint plen = strlen(pattern);\n\tint wlen = strlen(withPattern);\n\tint index = find(inText, pattern);\n\tif (index == -1) return false;\n\tmoveChars(inText, index + plen, wlen - plen);\n\tstrncpy(inText + index, withPattern, wlen);\n\treturn true;\n}\n\nvoid markAll(char inText[], const char pattern[]) {\n\tint i;\n\tfor (i = 0; ; ++ i) {\n\t\tchar withPattern[10] = {0};\n\t\tsprintf(withPattern, \"{%d}\", (i + 1));\n\t\tif (! replace(inText, pattern, withPattern)) break;\n\t}\n}\n\nint main() {\n\tchar text[5000];\n\tread(text, 4000);\n\tmarkAll(text, \"C++\");\n\tputs(text);\n}\n",
            "print('''The C++ rules and recommendations in this wiki are a work\n in progress and reflect the current thinking of the secure\n coding community. Because this is a development website, \nmany pages are incomplete or contain errors. As rules and \nrecommendations mature, they are published in report or \nbook form as official releases. These releases are issued \nas dictated by the needs and interests of the secure \nsoftware development community.\n\nThe CERT C++ Coding Standard does not currently expose \nany recommendations; all C++ recommendations have been \nremoved (moved to The Void section) due to quality concerns \npending further review and development. Create a sign-in \naccount if you want to comment on existing content. \nIf you wish to be more involved and directly edit content \non the site, you still need an account, but you'll also \nneed to request edit privileges.''')",
            1598889600,
            1598889600
        ],
        [
            "io.6",
            "Read information about three computers, and print the information about the cheapest one.\n<br><br>\n\n<u><i>EXAMPLE INPUT</i></u>\n<pre>Microsoft Surface 9000\nLenovo ThinkPad 8000\nApple MacBook 10000\n</pre>\n\n<u><i>EXAMPLE OUTPUT</i></u>\n<pre>Lenovo ThinkPad 8000\n</pre>",
            "#include <stdio.h>\n#include <string.h>\n#define printf 1\n#define scanf 1\n\nstruct ComputerInfo\n{\n\tchar brand[20];\n\tchar model[20];\n\tint price;\n};\n\n#include \"source.c\"\n\nvoid printMinInPrice(FILE * fin, FILE * fout) {\n\tstruct ComputerInfo info[3];\n\treadComputerInfo(fin, info, 3);\n\tstruct ComputerInfo min = getMinInPrice(info, 3);\n\tprintComputerInfo(fout, min);\n}\n\nint main() {\n\tFILE * fin = stdin;\n\tFILE * fout = stdout;\n\tprintMinInPrice(fin, fout);\n}",
            "struct ComputerInfo readComputerInfo1(FILE * fin) {\n\tstruct ComputerInfo info;\n\tfscanf(fin, \"%s %s %d\", info.brand, info.model, &info.price);\n\treturn info;\n}\n\nvoid readComputerInfo(FILE * fin, struct ComputerInfo info[], int count) {\n\tint i;\n\tfor (i = 0; i < count; ++ i) {\n\t\tinfo[i] = readComputerInfo1(fin);\n\t}\n}\n\nvoid printComputerInfo(FILE * fout, struct ComputerInfo info) {\n\tfprintf(fout, \"%s %s %d\\n\", info.brand, info.model, info.price);\n}\n\n#define getMin(a,b) (a.price < b.price ? a : b)\n\nstruct ComputerInfo getMinInPrice(struct ComputerInfo info[], int count) {\n\tstruct ComputerInfo min = info[0];\n\tint i;\n\tfor (i = 1; i < count; ++ i) {\n\t\tmin = getMin(min, info[i]);\n\t}\n\treturn min;\n}\n",
            "\nfrom random import randint\nprint(f'Microsoft Surface {randint(1000,9999)}')\nprint(f'Lenovo ThinkPad {randint(1000,9999)}')\nprint(f'Apple MacBook {randint(1000,9999)}')",
            1598889600,
            1598889600
        ],
        [
            "9.1 Rod cutting",
            "Input：有一个长n米的木头，和一个price table，table如下：<br>\n\n长度 i     1　　2　　3　　4　　5　　6 。。。<br>\n\n价格 Pi　1　　5　　8　　9　　10　　17。。。<br>\n<br>\n\n意思很明显，就是长度为1米的木头可以买1元，长5米的可以卖10元，依次类推<br>\n\nOutput：找一个cut的方法，使最后赚的钱最多。<br>\n\n很显然，这个递归的主要思路是我切一刀之后，分成两段，一段我按table的价钱卖了，另一段我当成一个新的子问题，继续作为我的函数的新的参数，这样不就递归了吗？但是问题是这一刀怎么切，没错，我们就来个找最大值，即max<sub>i =1 to n</sub> Pi + Cut(n-i).<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>1 2 3 4 5 6\n1 5 8 9 10 17\n\n17 16 15 14 13 12 11 10 9 8\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>47\n44\n42\n39\n35\n34\n30\n27\n25\n22\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nvoid readPriceTable(int prices[][2], int priceCount) {\n\tfor (int i = 0; i < priceCount; ++ i) {\n\t\tscanf(\"%d\", &prices[i][0]);\n\t}\n\tfor (int i = 0; i < priceCount; ++ i) {\n\t\tscanf(\"%d\", &prices[i][1]);\n\t}\n}\n\nvoid test(int prices[][2], int priceCount) {\n\tint rodLength;\n\tscanf(\"%d\", &rodLength);\n\tprintf(\"%d\\n\", getMaxCuttingPrice(prices, priceCount, rodLength));\n}\n\nint main() {\n\tint prices[6][2];\n\treadPriceTable(prices, 6);\n\t\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttest(prices, 6);\n\t}\n}",
            "int getPrice(int prices[][2], int priceCount, int rodLength) {\n\tfor (int i = 0; i < priceCount; ++ i) {\n\t\tif (prices[i][0] == rodLength) {\n\t\t\treturn prices[i][1];\n\t\t}\n\t}\n\treturn 0;\n}\n\nint computed[1000] = {0};\n\nint getMaxCuttingPrice(int prices[][2], int priceCount, int rodLength) {\n\tif (computed[rodLength] > 0) return computed[rodLength];\n\tint cur_max = getPrice(prices, priceCount, rodLength);\n\tfor (int i = 1; i < rodLength; ++ i) {\n\t\tint price = getMaxCuttingPrice(prices, priceCount, i) +\n\t\t\t\t\tgetMaxCuttingPrice(prices, priceCount, rodLength - i);\n\t\tcur_max = (price > cur_max ? price : cur_max);\n\t}\n\tcomputed[rodLength] = cur_max;\n\treturn cur_max;\n}\n",
            "\nfrom random import randint\n\nprint('1 2 3 4 5 6')\nfor i in [1, 2, 3, 4, 5, 6]:\n\tprint(randint(i, i*3), end=' ')\nprint('\\n')\n\ns = randint(3,5)\nfor i in range(10):\n\tif randint(0,2) == 0:\n\t\ts += 1\n\tprint(s + i, end=' ')",
            1607654400,
            1639746000
        ],
        [
            "9.2 Subsequence",
            "<h3>Longest common subsequence problem (最长公共字串)</h3>\n\n如果字符串一的所有字符按其在字符串中的顺序出现在另外一个字符串二中，则字符串一称之为字符串二的子串。注意，并不要求子串（字符串一）的字符必须连续出现在字符串二中。请编写一个函数，输入两个字符串，求它们的最长公共子序列，并打印出最长公共子序列。<br><br>\n\n例如：输入两个字符串BDCABA和ABCBDAB，字符串BCBA和BDAB都是是它们的最长公共子序列，则输出它们的长度4。<br><br>\n\n当然这里，我们也是要先找递归的。假设我的两个sequence，一个是X，长度为n；另一个是Y，长度为m。\n现在假设我有两个point，一个是i，指在X的最后一个元素上，另一个是j，指在Y的最后一个元素上。我们的递归应该是分三种情况的。\n<ol>\n<li>如果X[i] == Y[j] 那么LCS(X[0:i],Y[0:j]) = LCS(X[0:i-1],Y[0:j-1]) + 1<br>\n这个很明显，因为发现了一组公共元素，就看剩下的有多少公共元素。</li>\n\n<li>如果X[i] != Y[j] 那么 LCS(X[0:i],Y[0:j]) = max( LCS(X[0:i-1], Y[0:j]), LCS(X[0:i], Y[0:j-1]) )<br>\n这个其实也很容易相同，就是如果发现不同的，就去掉X或Y的最后一个，然后和另一个完整的比较，这样去掉X还是Y的最后一个，就有两种可能，所以就是要找中间max的一个。</li>\n\n<li>如果 i=0 或者 j=0，就return 0<br>\n因为有一个sequence已经完了。</li>\n\n</ol>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\nBDCABA\nABCBDAB\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n4\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nint main() {\n\tchar text1[100];\n\tchar text2[100];\n\tscanf(\"%s\", text1);\n\tscanf(\"%s\", text2);\n\t\n\tprintf(\"%d\", LCS(text1, text2));\n}",
            "#include <string.h>\n\nint LCS(char text1[], char text2[]) {\n\tif (strlen(text1) == 0 || strlen(text2) == 0) return 0;\n\t\n\tif (text1[0] == text2[0]) {\n\t\treturn 1 + LCS(&text1[1], &text2[1]);\n\t}\n\t\n\tint len1 = LCS(&text1[1], text2);\n\tint len2 = LCS(text1, &text2[1]);\n\treturn len1 > len2 ? len1 : len2;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nc = rand_str(randint(3,7))\ndef r(c):\n\treturn ''.join([i+(rand_str(1) if randint(0,1)==0 else '')for i in c])\nprint(r(c))\nprint(r(c))\n",
            1607654400,
            1639746000
        ],
        [
            "9.3 Subsequence 2",
            "<h3>Longest common subsequence problem (最长公共字串)</h3>\n\n如果字符串一的所有字符按其在字符串中的顺序出现在另外一个字符串二中，则字符串一称之为字符串二的子串。注意，并不要求子串（字符串一）的字符必须连续出现在字符串二中。请编写一个函数，输入两个字符串，求它们的最长公共子序列，并打印出最长公共子序列。<br><br>\n\n例如：输入两个字符串BDCABA和ABCBDAB，字符串BCBA和BDAB都是是它们的最长公共子序列，则输出BDAB。<br><br>\n\n当然这里，我们也是要先找递归的。假设我的两个sequence，一个是X，长度为n；另一个是Y，长度为m。\n现在假设我有两个point，一个是i，指在X的最后一个元素上，另一个是j，指在Y的最后一个元素上。我们的递归应该是分三种情况的。\n<ol>\n<li>如果X[i] == Y[j] 那么LCS(X[i],Y[j]) = X[i] + LCS(X[i-1],Y[j-1])<br>\n这个很明显，因为发现了一组公共元素，就看剩下的有多少公共元素。</li>\n\n<li>如果X[i] != Y[j] 那么 LCS(X[i],Y[j]) = max_len( LCS(X[i-1], Y[j]), LCS(X[i], Y[j-1]) )<br>\n这个其实也很容易相同，就是如果发现不同的，就去掉X或Y的最后一个，然后和另一个完整的比较，这样去掉X还是Y的最后一个，就有两种可能，所以就是要找中间max的一个。</li>\n\n<li>如果 i=0 或者 j=0，就return ''<br>\n因为有一个sequence已经完了。</li>\n\n</ol>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\nBDCABA\nABCBDAB\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\nBDAB\n</pre>",
            "struct Result\n{\n\tchar LCS[100];\n};\n\n#include \"source.c\"\n\n#include <stdio.h>\n\nint main() {\n\tchar text1[100];\n\tchar text2[100];\n\tscanf(\"%s\", text1);\n\tscanf(\"%s\", text2);\n\t\n\tstruct Result result = LCS(text1, text2);\n\tprintf(\"%s\", result.LCS);\n}",
            "#include <string.h>\n\nstruct Result getEmptyResult() {\n\tstruct Result result;\n\tresult.LCS[0] = 0;\n\treturn result;\n}\n\nvoid insertAt0_(char text[], char toInsert) {\n\tint length = strlen(text);\n\tfor (int i = length; i >= 0; -- i) {\n\t\ttext[i + 1] = text[i];\n\t}\n\ttext[0] = toInsert;\n}\n\nstruct Result insertAt0(struct Result result, char c) {\n\tinsertAt0_(result.LCS, c);\n\treturn result;\n}\n\nstruct Result getBetter(struct Result result1, struct Result result2) {\n\tint len1 = strlen(result1.LCS);\n\tint len2 = strlen(result2.LCS);\n\treturn (len1 > len2 ? result1 : result2);\n}\n\nstruct Result LCS(char text1[], char text2[]) {\n\tif (strlen(text1) == 0 || strlen(text2) == 0) {\n\t\treturn getEmptyResult();\n\t}\n\t\n\tif (text1[0] == text2[0]) {\n\t\tstruct Result result = LCS(&text1[1], &text2[1]);\n\t\treturn insertAt0(result, text1[0]);\n\t}\n\t\n\tstruct Result result1 = LCS(&text1[1], text2);\n\tstruct Result result2 = LCS(text1, &text2[1]);\n\treturn getBetter(result1, result2);\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEF'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nc = rand_str(randint(3,7))\ndef r(c):\n\treturn ''.join([i+(rand_str(1) if randint(0,1)==0 else '')for i in c])\nprint(r(c))\nprint(r(c))\n",
            1607654400,
            1639746000
        ],
        [
            "9.4 Matrix multiplication",
            "矩阵链相乘，求最小的乘法次数<br>\n<br>\n\nGiven a sequence of matrices, we want to find the most efficient way to multiply these matrices together. The problem is not actually to perform the multiplications, but merely to decide in which order to perform the multiplications.<br>\n\nWe have many options because matrix multiplication is associative. In other words, no matter how we parenthesize the product, the result will be the same. For example, if we had four matrices A, B, C, and D, we would have:<br>\n(ABC)D = (AB)(CD) = A(BCD) = A(BC)D = ....<br>\n<br>\n\nHowever, the order in which we parenthesize the product affects the number of simple arithmetic operations needed to compute the product, or the efficiency. For example, suppose A is a 10 × 30 matrix, B is a 30 × 5 matrix, and C is a 5 × 60 matrix. Then,<br>\n(AB)C = (10×30×5) + (10×5×60) = 1500 + 3000 = 4500 operations<br>\nA(BC) = (30×5×60) + (10×30×60) = 9000 + 18000 = 27000 operations.<br>\n<br>\n\nClearly the first method is the more efficient. Now that we have identified the problem, how do we determine the optimal parenthesization of a product of n matrices? We could go through each possible parenthesization (brute force), but this would require time exponential in the number of matrices, which is very slow and impractical for large n. The solution, as we will see, is to break up the problem into a set of related subproblems. By solving subproblems one time and reusing these solutions many times, we can drastically reduce the time required. This is known as dynamic programming.<br>\n<br>\n\n先形式化一下我们的input，矩阵链{A<sub>1</sub>，A<sub>2</sub>，...，A<sub>n</sub>}，其中对于矩阵A<sub>i</sub>，它是一个P<sub>i-1</sub> * P<sub>i</sub>的矩阵。m[i,j] 表示{A<sub>i</sub>,A<sub>i+1</sub>,..., A<sub>j</sub>}相乘的最小的乘法次数<br>\n<br>\n\n这个递归的思路其实和第一个问题有点类似，先看怎么递归。<br>\n<br>\n\n首先我们要找出一个点来分隔这个链，相当于这个点把这个问题转换为了 该点前一部分的矩阵链的最小的乘法次数问题和该点后一部分的矩阵链的最小的乘法次数问题。<br>\n<br>\n\n但是这个点怎么找呢？和第一个例子一样，我们直接遍历的来找。<br>\n<br>\n\n所以我们的递归应该是这样的：<br>\nm[i,j] = min<sub>i&lt;=k&lt;=j</sub> (m[i,k] + m[k+1,j] + P<sub>i-1</sub>*P<sub>k</sub>*P<sub>j</sub>)<br>\n<br>\n\n当然，这是对于i!=j的情况，当i==j的时候呢？显然 是0了，因为我们的矩阵链就一个矩阵。<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>9     6    10    11     8     4     5     7    12    13\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>2816\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nint main() {\n\tint dimensions[10];\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tscanf(\"%d\", &dimensions[i]);\n\t}\n\tprintf(\"%d\", getMultiplications(9, dimensions));\n}",
            "void initialize2(int mul[][100], int first, int len, int dim[]) {\n\tint last = first + len - 1;\n\t// for all possible sub-sequences\n\tint total = 0;\n\tfor (int mid = first; mid < last; ++ mid) {\n\t\tint total1 = mul[first][mid] + mul[mid + 1][last] +\n\t\tdim[first] * dim[mid + 1] * dim[last + 1];\n\t\tif (total == 0 || total > total1) total = total1;\n\t}\n\tmul[first][last] = total;\n}\n\t\nvoid initialize(int mul[][100], int matrixes, int dim[]) {\n\t// all sequence of length 1\n\tfor (int i = 0; i < matrixes; ++ i) {\n\t\tmul[i][i] = 0;\n\t}\n\t\n\t// from short to long sequence\n\tfor (int len = 2; len <= matrixes; ++ len) {\n\t\tfor (int first = 0; first <= matrixes - len; ++ first) {\n\t\t\tinitialize2(mul, first, len, dim);\n\t\t}\n\t}\n}\n\nint getMultiplications(int matrixes, int dimensions[]) {\n\tint multiplications[100][100];\n\tinitialize(multiplications, matrixes, dimensions);\n\treturn multiplications[0][matrixes - 1];\n}\n",
            "\nfrom random import randint\nfor i in range(10):\n\tprint(f'{randint(3,15):<6}', end='')",
            1607654400,
            1639746000
        ],
        [
            "9.5 Backpack",
            "这个问题一般叫Knapsack问题。Knapsack与backpack同义。<br>\n给定一组物品，每种物品都有自己的重量和价格，在限定的总重量内，我们如何选择，才能使得物品的总价格最高。问题的名称来源于如何选择最合适的物品放置于给定背包中。<br>\n<br>\n\n我们有n种物品，物品j的重量为w<sub>j</sub>，价格为p<sub>j</sub>。我们假定所有物品的重量和价格都是非负的。背包所能承受的最大重量为W。<br>\n<br>\n如果不限定每种物品的数量，则问题称为无界背包问题。<br>\n<br>\n\n<b>算法</b> 在总重量不超过W的前提下，我们希望总价格最高。对于Y ≤ W，我们将在总重量不超过Y的前提下，总价格所能达到的最高值定义为A(Y)。A(W)即为问题的答案。<br>\n<br>\n显然，A(Y)满足：\n<ul>\n<li>A(0) = 0</li>\n<li>A(Y) = max { A(Y - 1), max { p<sub>j</sub> + A(Y - w<sub>j</sub>) | w<sub>j</sub> ≤ Y } }</li>\n</ul>\n其中，p<sub>j</sub>为第j种物品的价格。<br>\n<br>\n\n关于第二个公式的一个解释：总重量为Y时背包的最高价值可能有两种情况，第一种是该重量无法被完全填满，这对应于表达式A(Y - 1)。第二种是刚好填满，这对应于一个包含一系列刚好填满的可能性的集合，其中的可能性是指当最后放进包中的物品恰好是重量为w<sub>j</sub>的物品时背包填满并达到最高价值。而这时的背包价值等于重量为w<sub>j</sub>物品的价值和当没有放入该物品时背包的最高价值之和。故归纳为表达式p<sub>j</sub> + A(Y - w<sub>j</sub>)。最后把所有上述情况中背包价值的最大值求出就得到了A(Y)的值。<br>\n如果总重量为0，总价值也为0。然后依次计算A(0), A(1), ..., A(W)，并把每一步骤的结果存入表中供后续步骤使用，完成这些步骤后A(W)即为最终结果。如果把w1, ..., wn, W都除以它们的最大公因数，算法的时间将得到很大的提升。<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>     9     6    10    11     8     4     5     7    12    13\n    11     6    12     9    14    10    13     8    15     7\n    48\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>84\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nvoid read(int array[], int length) {\n\tfor (int i = 0; i < length;  ++ i) {\n\t\tscanf(\"%d\", &array[i]);\n\t}\n}\n\nint main() {\n\tint prices[10];\n\tread(prices, 10);\n\tint weights[10];\n\tread(weights, 10);\n\tint maxWeight;\n\tscanf(\"%d\", &maxWeight);\n\t\n\tprintf(\"%d\", knapsack(prices, weights, maxWeight)); \n}",
            "int knapsack(int p[], int w[], int maxWeight) {\n\tint price[100]; // assume that maxWeight < 100\n\tprice[0] = 0;\n\t\n\tfor (int weight = 1; weight <= maxWeight; ++ weight) {\n\t\tprice[weight] = price[weight - 1];\n\t\tfor (int item = 0; item < 10; ++ item) {\n\t\t\tint weight1 = weight - w[item];\n\t\t\tif (weight1 < 0) continue;\n\t\t\tint price1 = p[item] + price[weight1];\n\t\t\tif (price[weight] < price1) {\n\t\t\t\tprice[weight] = price1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn price[maxWeight];\n}\n",
            "\nfrom random import randint\n\ndef r(n,s,e):\n\td = []\n\twhile len(d) < n:\n\t\ti = randint(s,e)\n\t\tif i not in d:\n\t\t\td.append(i)\n\treturn d\n\nprint(''.join(f'{i:>6}' for i in r(10,5,20)))\nprint(''.join(f'{i:>6}' for i in r(10,5,20)))\nprint(randint(40,60))",
            1607654400,
            1639746000
        ],
        [
            "9.6 0-1 Backpack",
            "0-1 Kanpsack 问题<br>\n给定一组物品，每种物品都有自己的重量和价格，在限定的总重量内，我们如何选择，才能使得物品的总价格最高。问题的名称来源于如何选择最合适的物品放置于给定背包中。<br>\n<br>\n\n我们有n种物品，物品j的重量为w<sub>j</sub>，价格为p<sub>j</sub>。我们假定所有物品的重量和价格都是非负的。背包所能承受的最大重量为W。<br>\n<br>\n如果限定每种物品只能选择0个或1个，则问题称为0-1背包问题。<br>\n<br>\n\n<b>算法</b> 我们将在总重量不超过Y的前提下，前j种物品的总价格所能达到的最高值定义为A(j, Y)。\nA(j, Y)的递推关系为：\n<ul>\n<li>A(0, Y) = 0</li>\n<li>A(j, 0) = 0</li>\n<li>如果w<sub>j</sub> > Y, A(j, Y) = A(j - 1, Y)</li>\n<li>如果w<sub>j</sub> ≤ Y, A(j, Y) = max { A(j - 1, Y), p<sub>j</sub> + A(j - 1, Y - w<sub>j</sub>) }</li>\n</ul>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n     9     6    10    11     8     4     5     7    12    13\n    11     6    12     9    14    10    13     8    15     7\n    48\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n51\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nvoid read(int array[], int length) {\n\tfor (int i = 0; i < length;  ++ i) {\n\t\tscanf(\"%d\", &array[i]);\n\t}\n}\n\nint main() {\n\tint prices[10];\n\tread(prices, 10);\n\tint weights[10];\n\tread(weights, 10);\n\tint maxWeight;\n\tscanf(\"%d\", &maxWeight);\n\t\n\tprintf(\"%d\", knapsack(prices, weights, maxWeight)); \n}",
            "int knapsack(int p[], int w[], int maxWeight) {\n\tint A[11][100];\n\tfor (int j = 0; j < 11; ++ j) A[j][0] = 0;\n\tfor (int y = 0; y <= maxWeight; ++ y) A[0][y] = 0;\n\tfor (int y = 1; y <= maxWeight; ++ y) {\n\t\tfor (int j = 1; j < 11; ++ j) {\n\t\t\tA[j][y] = A[j-1][y];\n\t\t\tif (w[j-1] <= y) {\n\t\t\t\tint p2 = p[j-1] + A[j-1][y-w[j-1]];\n\t\t\t\tA[j][y] = (A[j][y] > p2 ? A[j][y] : p2);\n\t\t\t}\n\t\t}\n\t}\n\treturn A[10][maxWeight];\n}",
            "\nfrom random import randint\n\ndef r(n,s,e):\n\td = []\n\twhile len(d) < n:\n\t\ti = randint(s,e)\n\t\tif i not in d:\n\t\t\td.append(i)\n\treturn d\n\nprint(''.join(f'{i:>6}' for i in r(10,5,20)))\nprint(''.join(f'{i:>6}' for i in r(10,5,20)))\nprint(randint(40,60))",
            1607654400,
            1639746000
        ],
        [
            "9.7 Insertion sort",
            "<b><u>EXAMPLE INPUT</u></b>\n<pre>\n8 2 5 9 4 7 2 7 4 6\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n2 2 4 4 5 6 7 7 8 9 \n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nvoid readData(int array[]) {\n\tint i;\n\tfor (i = 0; i < 10; ++ i) {\n\t\tscanf(\"%d\", &array[i]);\n\t}\n}\n\nvoid print(int array[]) {\n\tint i;\n\tfor (i = 0; i < 10; ++ i) {\n\t\tprintf(\"%d \", array[i]);\n\t}\n}\n\nint main() {\n\tint data[10];\n\treadData(data);\n\tinsertionSort(data, 10);\n\tprint(data);\n}",
            "void insert(int data[], int len, int toInsert) {\n\tint index = len - 1;\n\twhile (index >= 0 && data[index] > toInsert) {\n\t\tdata[index + 1] = data[index];\n\t\t-- index;\n\t}\n\tdata[index + 1] = toInsert;\n}\n\nvoid insertionSort(int data[], int len) {\n\tif (len == 1) return;\n\tinsertionSort(data, len - 1);\n\tinsert(data, len - 1, data[len - 1]);\n}\n",
            "\nfrom random import randint\nfor i in range(10):\n\tprint(f'{randint(1,9):>6}', end='')\n",
            1607667600,
            1639209600
        ],
        [
            "9.8 Config",
            "从屏幕读取数据\n<br>\n<br>\n<u>EXAMPLE INPUT 1</u>\n<pre>\nYear=2000\nMonth=10\nDay=20\n</pre>\n\n<u>EXAMPLE OUTPUT 1</u>\n<pre>\nYear=2000\nMonth=10\nDay=20\n</pre>\n\n<u>EXAMPLE INPUT 2</u>\n<pre>\nHour=10\nMinute=30\n</pre>\n\n<u>EXAMPLE OUTPUT 2</u>\n<pre>\nHour=10\nMinute=30\n</pre>",
            "#include <stdio.h>\n\nstruct Config\n{\n\tchar name[100];\n\tint value;\n}; \n\nvoid printConfig1(struct Config c) {\n\tprintf(\"%s=%d\\n\", c.name, c.value);\n}\n\nvoid printConfig(struct Config config[], int len) {\n\tfor (int i = 0; i < len; ++ i) {\n\t\tprintConfig1(config[i]);\n\t}\n}\n\n#include \"source.c\"\n\nint main() {\n\tstruct Config config[100];\n\tint len = readConfig(config, 100);\n\tif (len < 1) puts(\"Wrong!\\n\");\n\tprintConfig(config, len);\n}",
            "int readline(char line[], int max_len) {\n\tfor (int i = 0; ; ++ i) {\n\t\tint c = getchar();\n\t\tline[i] = c;\n\t\tif (c == '\\n' || c == '\\r' || c == -1 || i == max_len - 1) {\n\t\t\tline[i] = 0;\n\t\t\tif (i == 0 && c == -1) return -1;\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nint char_index(char line[], char to_find) {\n\tfor (int i = 0; ; ++ i) {\n\t\tif (line[i] == 0) return -1;\n\t\tif (line[i] == to_find) return i;\n\t}\n\treturn -1;\n}\n\n#include <string.h>\n#include <stdlib.h>\n\nint readConfig(struct Config config[], int max_len) {\n\tint len = 0;\n\twhile (len < max_len) {\n\t\tchar line[1000];\n\t\tint line_len = readline(line, 1000);\n\t\tif (line_len == -1) break;\n\t\tint index = char_index(line, '=');\n\t\tif (index == -1) continue;\n\t\tline[index] = 0;\n\t\tstrcpy(config[len].name, line);\n\t\tconfig[len].value = atoi(line + index + 1);\n\t\t++ len;\n\t}\n\treturn len;\n}\n",
            "\nfrom random import randint\n\ndef rand_str(k, chars='ABCDEFGHIJKLMNOPQRSTUVWXYZ_'.lower()):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\ndef rand_int(k, chars='123456789'):\n\treturn ''.join([chars[randint(0,len(chars)-1)] for i in range(k)])\n\nn = randint(3,9)\nd = {rand_str(randint(3,8)):rand_int(randint(3,8)) for i in range(n)}\nprint('\\n'.join(f'{k}={v}' for k,v in d.items()))\n",
            1598889600.0,
            1630425600.0
        ],
        [
            "10.1 Sort",
            "Write a function that sorts three double values.<br>\n<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=\"blue\">void</font> sort(<font color=\"blue\">double</font> * value1, <font color=\"blue\">double</font> * value2, <font color=\"blue\">double</font> * value3)</font>\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>   60.9000   63.5000    3.2000\n   45.2000   55.6000   64.3000\n   12.3000   97.1000   36.1000\n   44.8000   39.6000   40.8000\n   87.2000   93.2000    4.0000\n   77.2000   69.9000    2.2000\n    9.9000   29.4000   46.0000\n   74.6000   24.4000   96.0000\n   17.4000   28.1000   86.0000\n   33.3000   69.2000   26.1000\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>3.200000 60.900000 63.500000\n45.200000 55.600000 64.300000\n12.300000 36.100000 97.100000\n39.600000 40.800000 44.800000\n4.000000 87.200000 93.200000\n2.200000 69.900000 77.200000\n9.900000 29.400000 46.000000\n24.400000 74.600000 96.000000\n17.400000 28.100000 86.000000\n26.100000 33.300000 69.200000\n</pre>",
            "#include \"source.c\"\n#include <stdio.h>\n\nvoid test() {\n\tdouble num1, num2, num3;\n\tscanf(\"%lf %lf %lf\", &num1, &num2, &num3);\n\tsort(&num1, &num2, &num3);\n\tprintf(\"%lf %lf %lf\\n\", num1, num2, num3);\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) {\n\t\ttest();\n\t}\n}",
            "void swap(double * value1, double * value2) {\n\tdouble temp = *value1;\n\t*value1 = *value2;\n\t*value2 = temp;\n}\n\nvoid sort(double * value1, double * value2, double * value3) {\n\tif (*value1 > *value2) swap(value1, value2);\n\tif (*value2 > *value3) swap(value2, value3);\n\tif (*value1 > *value2) swap(value1, value2);\n}\n",
            "\nfrom random import randint\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nfor i in range(10):\n\tfor j in range(3):\n\t\tprint(f'{randint(10,999)/10:>10.4f}', end='')\n\tprint()",
            1598889600,
            1598889600
        ],
        [
            "10.3 Sort",
            "Write a function that sorts an array of <i>Goods</i> according to their prices without actually changing any object in the array.<br>\nThis function does this by sorting the addresses of the objects instead of swapping the objects in the array.<br>\nThe function has the following header:<br>\n<font style=\"background-color: #EEEEEE\"><font color=blue>void</font> sort(Goods * [] goods, <font color=blue>int</font> size)</font>\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\n   261   796   170\n   303   678   999\n   653   343   325\n   175   744   784\n   545    92   756\n    34   705   682\n   758   600   520\n   773   723   983\n   646   865   440\n   152   301   409\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n261 796 170\n303 678 999\n653 343 325\n175 744 784\n545 92 756\n34 705 682\n758 600 520\n773 723 983\n646 865 440\n152 301 409\n\n261 796 170\n653 343 325\n152 301 409\n646 865 440\n758 600 520\n34 705 682\n545 92 756\n175 744 784\n773 723 983\n303 678 999\n</pre>",
            "#include <stdio.h>\n\nstruct Goods\n{\n\tint number;\n\tint weight;\n\tint price;\n};\n\nvoid read(struct Goods * goods) {\n\tscanf(\"%d %d %d\\n\", &(*goods).number, \n\t\t\t&(*goods).weight, &(*goods).price);\n}\n\nvoid readArray(struct Goods goods[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tread(&goods[i]);\n\t}\n}\n\nvoid print(const struct Goods * goods) {\n\tprintf(\"%d %d %d\\n\", (*goods).number, \n\t\t\t(*goods).weight, (*goods).price);\n}\n\nvoid printArray(const struct Goods goods[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tprint(&goods[i]);\n\t}\n}\n\n#include \"source.c\"\n\nvoid printGoods(const struct Goods * address[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tprint(address[i]);\n\t}\n}\n\nint main() {\n\tstruct Goods goods[10];\n\treadArray(goods, 10);\n\t\n\tconst struct Goods * addresses[10];\n\tfor (int i = 0; i < 10; ++ i) {\n\t\taddresses[i] = &goods[i];\n\t}\n\tsort(addresses, 10);\n\t\n\tprintArray(goods, 10);\n\tprintf(\"\\n\");\n\tprintGoods(addresses, 10);\n}",
            "int getMaxPriceIndex(const struct Goods * addresses[], int size) {\n\tint maxPrice = (*addresses[0]).price;\n\tint index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tint price = (*addresses[i]).price;\n\t\tif (maxPrice < price) {\n\t\t\tmaxPrice = price;\n\t\t\tindex = i;\n\t\t}\n\t}\n\treturn index;\n}\n\nvoid swap(const struct Goods * * addr1, const struct Goods * * addr2) {\n\tconst struct Goods * temp = * addr1;\n\t* addr1 = * addr2;\n\t* addr2 = temp;\n}\n\nvoid sort(const struct Goods * addresses[], int size) {\n\tfor (int i = size; i > 1; -- i) {\n\t\tint index = getMaxPriceIndex(addresses, i);\n\t\tif (index == i - 1) continue;\n\t\telse swap(&addresses[i - 1], &addresses[index]);\n\t}\n}\n",
            "\nfrom random import randint\n\ndef rand_int(k):\n\tval = randint(1,9)\n\tfor i in range(k-1):\n\t\tval = val * 10 + randint(0,9)\n\treturn val\n\nfor i in range(10):\n\tfor j in range(3):\n\t\tprint(f'{randint(10,999):>6}', end='')\n\tprint()",
            1598889600,
            1598889600
        ],
        [
            "io.1",
            "Please write a function to read student records from the standard input.\nAssume that each student record is stored in a single line, and the attributes of each student are separated by tabs.\n\n<b>EXAMPLE INPUT 1</b>\n<pre>Delaney\tJudd\tAnkunding\t03174364122\tdell43@example.net\nReva\tGolda\tOsinski\t(507)365-8405\tqo'kon@example.com\nHelga\tCleve\tMohr\t677.401.9382\tnya.lesch@example.net\n</pre>\n\n<b>EXAMPLE OUTPUT 1</b>\n<pre>There are a totle of 3 students:\nDelaney\tJudd\tAnkunding\t03174364122\tdell43@example.net\nReva\tGolda\tOsinski\t(507)365-8405\tqo'kon@example.com\nHelga\tCleve\tMohr\t677.401.9382\tnya.lesch@example.net\n</pre>\n\n<b>EXAMPLE INPUT 2</b>\n<pre>Timmothy\tAnna\tWard\t(096)889-8954x524\terwin.zboncak@example.com\nHobart\tLorenz\tBalistreri\t1-009-710-5151\tswift.kolby@example.com\nWarren\tViolet\tGleichner\t07661787471\tjohns.unique@example.net\nJarvis\tAaliyah\tCarroll\t09700166582\tjillian26@example.net\nMilton\tVaughn\tChristiansen\t171-642-5684\tlhartmann@example.org\nStanford\tMona\tRogahn\t436.613.7683\tskassulke@example.net\nFrida\tAisha\tHuel\t1-879-796-8987x164\tbaumbach.lucious@example.org\nDelaney\tJudd\tAnkunding\t03174364122\tdell43@example.net\nReva\tGolda\tOsinski\t(507)365-8405\tqo'kon@example.com\nHelga\tCleve\tMohr\t677.401.9382\tnya.lesch@example.net\n</pre>\n\n<b>EXAMPLE OUTPUT 2</b>\n<pre>There are a totle of 9 students:\nTimmothy\tAnna\tWard\t(096)889-8954x524\terwin.zboncak@example.com\nHobart\tLorenz\tBalistreri\t1-009-710-5151\tswift.kolby@example.com\nWarren\tViolet\tGleichner\t07661787471\tjohns.unique@example.net\nJarvis\tAaliyah\tCarroll\t09700166582\tjillian26@example.net\nMilton\tVaughn\tChristiansen\t171-642-5684\tlhartmann@example.org\nStanford\tMona\tRogahn\t436.613.7683\tskassulke@example.net\nFrida\tAisha\tHuel\t1-879-796-8987x164\tbaumbach.lucious@example.org\nDelaney\tJudd\tAnkunding\t03174364122\tdell43@example.net\nReva\tGolda\tOsinski\t(507)365-8405\tqo'kon@example.com\n</pre>",
            "#include <stdio.h>\n\ntypedef struct {\n\tchar first_name[9];\n\tchar middle_name[9];\n\tchar last_name[13];\n\tchar cell_mobile_number[20];\n\tchar email_address[29];\n} Student;\n\nvoid print_students(Student students[], int size) {\n\tprintf(\"There are a totle of %d students:\\n\", size);\n\tfor (int i = 0; i < size; ++ i) {\n\t\tprintf(\"%s\\t%s\\t%s\\t%s\\t%s\\n\", \n\t\t\tstudents[i].first_name,\n\t\t\tstudents[i].middle_name,\n\t\t\tstudents[i].last_name,\n\t\t\tstudents[i].cell_mobile_number,\n\t\t\tstudents[i].email_address);\n\t}\n}\n\n#include \"source.c\"\n\nint main() {\n\tStudent students[9];\n\tint size;\n\tsize = read_students(students, 9);\n\tprint_students(students, size);\n}",
            "int read_students(Student students[], int max) {\n\tchar buf[1000];\n\tfor (int i = 0; i < max; ++ i) {\n\t\tchar * res = fgets(buf, 1000, stdin);\n\t\tif (res == NULL) return i;\n\t\tsscanf(buf, \"%s\\t%s\\t%s\\t%s\\t%s\",\n\t\t\tstudents[i].first_name,\n\t\t\tstudents[i].middle_name,\n\t\t\tstudents[i].last_name,\n\t\t\tstudents[i].cell_mobile_number,\n\t\t\tstudents[i].email_address);\n\t}\n\treturn max;\n}\n",
            "\nfrom random import randint\n\nlines = '''Delaney\tJudd\tAnkunding\t03174364122\tdell43@example.net\nReva\tGolda\tOsinski\t(507)365-8405\tqo'kon@example.com\nHelga\tCleve\tMohr\t677.401.9382\tnya.lesch@example.net\nTimmothy\tAnna\tWard\t(096)889-8954x524\terwin.zboncak@example.com\nHobart\tLorenz\tBalistreri\t1-009-710-5151\tswift.kolby@example.com\nWarren\tViolet\tGleichner\t07661787471\tjohns.unique@example.net\nJarvis\tAaliyah\tCarroll\t09700166582\tjillian26@example.net\nMilton\tVaughn\tChristiansen\t171-642-5684\tlhartmann@example.org\nStanford\tMona\tRogahn\t436.613.7683\tskassulke@example.net\nFrida\tAisha\tHuel\t1-879-796-8987x164\tbaumbach.lucious@example.org\nDelaney\tJudd\tAnkunding\t03174364122\tdell43@example.net'''\n\nlines = lines.split('\\n')\nfor line in lines:\n\tif randint(0,1) == 0:\n\t\tprint(line)",
            1598889600,
            1598889600
        ],
        [
            "io.2",
            "<p>Please write a C function that can read a data in three different formats.\n</p><p>\n<b>EXAMPLE INPUT</b>\n<pre>2018年12月30日\n12/3/2018\n2018-12-15\nDec. 5, 2018 \n</pre>\n\n<b>EXAMPLE OUTPUT</b>\n<pre>2018年12月30日\n12/3/2018\n2018/12/15\nWrong format\n</pre></p>",
            "#include <stdio.h>\n#include <stdlib.h>\n\nenum Format { CHINESE, MONTH_FIRST, YEAR_FIRST, WRONG };\n\nstruct Date\n{\n\tint year;\n\tint month;\n\tint day;\n\tenum Format format;\n};\n\nvoid printDate(struct Date date) {\n\tswitch (date.format) {\n\tcase CHINESE: printf(\"%d年%d月%d日\\n\", date.year, date.month, date.day); break;\n\tcase MONTH_FIRST: printf(\"%d/%d/%d\\n\", date.month, date.day, date.year); break;\n\tcase YEAR_FIRST: printf(\"%d/%d/%d\\n\", date.year, date.month, date.day); break;\n\tdefault: puts(\"Wrong format\");\n\t}\n}\n\n#include \"source.c\"\n\nint main() {\n\tfor (int i = 0; i < 4; ++ i) {\n\t\tstruct Date date = readDate();\n\t\tprintDate(date);\n\t}\n}",
            "struct Date readDate() {\n\tstruct Date date;\n\tchar line[100];\n\tfgets(line, 100, stdin);\n\tif (sscanf(line, \"%d年%d月%d日\\n\", &date.year, &date.month, &date.day) == 3) {\n\t\tdate.format = CHINESE;\n\t}\n\telse if (sscanf(line, \"%d/%d/%d\", &date.month, &date.day, &date.year) == 3) {\n\t\tdate.format = MONTH_FIRST;\n\t}\n\telse if (sscanf(line, \"%d-%d-%d\", &date.year, &date.month, &date.day) == 3) {\n\t\tdate.format = YEAR_FIRST;\n\t}\n\telse {\n\t\tdate.format = WRONG;\n\t}\n\treturn date;\n}\n",
            "\nfrom random import randint\nyear = randint(2001,2020)\nmonth = randint(1,12)\nday = randint(1,28)\nmonth_repr='''Jan. Feb. Mar. Apr. May Jun. Jul. Aug. Sep. Oct. Nov. Dec.'''.split()\nformats = [f'{year}年{month}月{day}日', f'{month:02}/{day:02}/{year}', f'{year}-{month:02}-{day:02}', f'{month_repr[month-1]} {day}, {year}']\n\ndef rand_perm(ss):\n\tfor k in range(len(ss), 1, -1):\n\t\ti = randint(0, k-1)\n\t\ts = ss[k-1]\n\t\tss[k-1]=ss[i]\n\t\tss[i] = s\n\t\t\nrand_perm(formats)\nfor f in formats:\n\tprint(f)\n",
            1598889600,
            1598889600
        ],
        [
            "io.3",
            "<p>Write a function to input a number of integers user input in each line.\n</p><p>\n<b>EXMAPLE INPUT</b>\n<pre>1 2 3 4\n2 3 4 5 6 7 8 9\n8 2 3 5\n</pre>\n\n<b>EXMAPLE OUTPUT</b>\n<pre>1 2 3 4 \n2 3 4 5 6 7 8 9 \n8 2 3 5 \n</pre></p>",
            "#include \"source.c\"\n\nvoid print_ints(double data[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tprintf(\"%lg \", data[i]);\n\t}\n\tputchar('\\n');\n}\n\nint main() {\n\twhile (1) {\n\t\tdouble data[100];\n\t\tint size = read_ints(data, 100);\n\t\tif (size == 0) break;\n\t\tprint_ints(data, size);\n\t}\n}",
            "#include <stdio.h>\n#include <string.h>\n\nenum Status { SPACE, NON_SPACE };\n\nint is_space(char c) {\n\treturn c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n}\n\nint split_words(char line[], char * words[], int max_words) {\n\tenum Status status = SPACE;\n\tint word_count = 0;\n\tint len = strlen(line);\n\tfor (int i = 0; i < len; ++ i) {\n\t\tif (status == NON_SPACE) {\n\t\t\tif (is_space(line[i])) {\n\t\t\t\tline[i] = 0;\n\t\t\t\tstatus = SPACE;\n\t\t\t}\n\t\t}\n\t\telse { // status == SPACE\n\t\t\tif (! is_space(line[i])) {\n\t\t\t\twords[word_count ++ ] = line + i;\n\t\t\t\tstatus = NON_SPACE;\n\t\t\t}\n\t\t}\n\t}\n\treturn word_count;\n}\n\nint read_ints(double values[], int max_size) {\n\tchar line[1000];\n\tif (fgets(line, 100, stdin) == NULL) return 0;\n\tchar * words[100];\n\tint word_count = split_words(line, words, 100);\n\tfor (int i = 0; i < word_count; ++ i)\n\t\tsscanf(words[i], \"%lg\", &values[i]);\n\treturn word_count;\n}\n",
            "\nfrom random import randint\n\nfor i in range(randint(3,5)):\n\tfor j in range(randint(3,10)):\n\t\tprint(randint(1,9), end=' ')\n\tprint()\n",
            1598889600,
            1598889600
        ],
        [
            "struct.1",
            "Sort student records by last name.",
            "struct T_student {\n\tdouble student_id;\n\tchar last_name[9];\n\tchar first_name[8];\n\tdouble age;\n\tchar sex[2];\n\tdouble major;\n\tdouble advisor;\n\tchar city_code[4];\n};\n\nstruct T_student student[] = {\n\t{ 1001,    \"Smith\",   \"Linda\", 18, \"F\", 600, 1121, \"BAL\" },\n\t{ 1002,      \"Kim\",   \"Tracy\", 19, \"F\", 600, 7712, \"HKG\" },\n\t{ 1003,    \"Jones\",  \"Shiela\", 21, \"F\", 600, 7792, \"WAS\" },\n\t{ 1004,    \"Kumar\",  \"Dinesh\", 20, \"M\", 600, 8423, \"CHI\" },\n\t{ 1005,  \"Gompers\",    \"Paul\", 26, \"M\", 600, 1121, \"YYZ\" },\n\t{ 1006,  \"Schultz\",    \"Andy\", 18, \"M\", 600, 1148, \"BAL\" },\n\t{ 1007,     \"Apap\",    \"Lisa\", 18, \"F\", 600, 8918, \"PIT\" },\n\t{ 1008,   \"Nelson\",   \"Jandy\", 20, \"F\", 600, 9172, \"BAL\" },\n\t{ 1009,      \"Tai\",    \"Eric\", 19, \"M\", 600, 2192, \"YYZ\" },\n\t{ 1010,      \"Lee\",   \"Derek\", 17, \"M\", 600, 2192, \"HOU\" },\n\t{ 1011,    \"Adams\",   \"David\", 22, \"M\", 600, 1148, \"PHL\" },\n\t{ 1012,    \"Davis\",  \"Steven\", 20, \"M\", 600, 7723, \"PIT\" },\n\t{ 1014,   \"Norris\", \"Charles\", 18, \"M\", 600, 8741, \"DAL\" },\n\t{ 1015,      \"Lee\",   \"Susan\", 16, \"F\", 600, 8721, \"HKG\" },\n\t{ 1016, \"Schwartz\",    \"Mark\", 17, \"M\", 600, 2192, \"DET\" },\n\t{ 1017,   \"Wilson\",   \"Bruce\", 27, \"M\", 600, 1148, \"LON\" },\n\t{ 1018, \"Leighton\", \"Michael\", 20, \"M\", 600, 1121, \"PIT\" },\n\t{ 1019,     \"Pang\",  \"Arthur\", 18, \"M\", 600, 2192, \"WAS\" },\n\t{ 1020, \"Thornton\",     \"Ian\", 22, \"M\", 520, 7271, \"NYC\" },\n\t{ 1021,  \"Andreou\",  \"George\", 19, \"M\", 520, 8722, \"NYC\" },\n\t{ 1022,    \"Woods\", \"Michael\", 17, \"M\", 540, 8722, \"PHL\" },\n\t{ 1023,  \"Shieber\",   \"David\", 20, \"M\", 520, 8722, \"NYC\" },\n\t{ 1024,   \"Prater\",   \"Stacy\", 18, \"F\", 540, 7271, \"BAL\" },\n\t{ 1025,  \"Goldman\",    \"Mark\", 18, \"M\", 520, 7134, \"PIT\" },\n\t{ 1026,     \"Pang\",    \"Eric\", 19, \"M\", 520, 7134, \"HKG\" },\n\t{ 1027,    \"Brody\",    \"Paul\", 18, \"M\", 520, 8723, \"LOS\" },\n\t{ 1028,     \"Rugh\",    \"Eric\", 20, \"M\", 550, 2311, \"ROC\" },\n\t{ 1029,      \"Han\",     \"Jun\", 17, \"M\", 100, 2311, \"PEK\" },\n\t{ 1030,    \"Cheng\",    \"Lisa\", 21, \"F\", 550, 2311, \"SFO\" },\n\t{ 1031,    \"Smith\",   \"Sarah\", 20, \"F\", 550, 8772, \"PHL\" },\n\t{ 1032,    \"Brown\",    \"Eric\", 20, \"M\", 550, 8772, \"ATL\" },\n\t{ 1033,    \"Simms\", \"William\", 18, \"M\", 550, 8772, \"NAR\" },\n\t{ 1034,      \"Epp\",    \"Eric\", 18, \"M\",  50, 5718, \"BOS\" },\n\t{ 1035,  \"Schmidt\",   \"Sarah\", 26, \"F\",  50, 5718, \"WAS\" }\n};\n\n#define len(t) (sizeof t / sizeof(struct T_##t))\n\n#include \"source.c\"\n#include <stdio.h>\n\n\t\nvoid print_a_record(struct T_student * s) {\n\tprintf(\"%d\\t%s\\t%s\\t%d\\t%s\\t%d\\t%d\\t%s\\n\", \n\t\t\t(int)s->student_id,\n\t\t\ts->last_name,\n\t\t\ts->first_name,\n\t\t\t(int)s->age,\n\t\t\ts->sex,\n\t\t\t(int)s->major,\n\t\t\t(int)s->advisor,\n\t\t\ts->city_code);\n}\n\nvoid print_all_records() {\n\tfor (int i = 0; i < len(student); ++ i) {\n\t\tprint_a_record(student + i);\n\t}\n}\n\nint main() {\n\tsort_by_last_name(); // Just do it\n\tprint_all_records();\n}",
            "#include <string.h>\n\ntypedef int (* Compare)(struct T_student * s1, struct T_student * s2);\n\nint cmp(struct T_student * s1, struct T_student * s2) {\n\treturn strcmp(s1->last_name, s2->last_name);\n}\n\nint find_min(struct T_student student[], int size, Compare cmp) {\n\tint min_index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif ((*cmp)(student + min_index, student + i) > 0) {\n\t\t\tmin_index = i;\n\t\t}\n\t}\n\treturn min_index;\n}\n\n#define swap(T,d,i,j) struct T __temp__ = d[i]; d[i] = d[j]; d[j] = __temp__;  \n/*\nvoid sort(Compare cmp) {\n\tfor (int i = 0; i < len(student); ++ i) {\n\t\tint min_index = find_min(student + i, len(student) - i, cmp);\n\t\tswap(T_student, student, i + min_index, i);\n\t}\n}\n*/\nvoid sort(Compare cmp) {\n\tfor (int i = len(student) - 1; i > 0; -- i) {\n\t\tfor (int j = 0; j < i; ++ j) {\n\t\t\tif (cmp(student + j, student + j + 1) > 0) {\n\t\t\t\tswap(T_student, student, j, j + 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid sort_by_last_name() {\n\tsort(cmp);\n}\n",
            "",
            1598889600,
            1598889600
        ],
        [
            "struct.2",
            "Sort student records by last name in a reverse order.",
            "struct T_student {\n\tdouble student_id;\n\tchar last_name[9];\n\tchar first_name[8];\n\tdouble age;\n\tchar sex[2];\n\tdouble major;\n\tdouble advisor;\n\tchar city_code[4];\n};\n\nstruct T_student student[] = {\n\t{ 1001,    \"Smith\",   \"Linda\", 18, \"F\", 600, 1121, \"BAL\" },\n\t{ 1002,      \"Kim\",   \"Tracy\", 19, \"F\", 600, 7712, \"HKG\" },\n\t{ 1003,    \"Jones\",  \"Shiela\", 21, \"F\", 600, 7792, \"WAS\" },\n\t{ 1004,    \"Kumar\",  \"Dinesh\", 20, \"M\", 600, 8423, \"CHI\" },\n\t{ 1005,  \"Gompers\",    \"Paul\", 26, \"M\", 600, 1121, \"YYZ\" },\n\t{ 1006,  \"Schultz\",    \"Andy\", 18, \"M\", 600, 1148, \"BAL\" },\n\t{ 1007,     \"Apap\",    \"Lisa\", 18, \"F\", 600, 8918, \"PIT\" },\n\t{ 1008,   \"Nelson\",   \"Jandy\", 20, \"F\", 600, 9172, \"BAL\" },\n\t{ 1009,      \"Tai\",    \"Eric\", 19, \"M\", 600, 2192, \"YYZ\" },\n\t{ 1010,      \"Lee\",   \"Derek\", 17, \"M\", 600, 2192, \"HOU\" },\n\t{ 1011,    \"Adams\",   \"David\", 22, \"M\", 600, 1148, \"PHL\" },\n\t{ 1012,    \"Davis\",  \"Steven\", 20, \"M\", 600, 7723, \"PIT\" },\n\t{ 1014,   \"Norris\", \"Charles\", 18, \"M\", 600, 8741, \"DAL\" },\n\t{ 1015,      \"Lee\",   \"Susan\", 16, \"F\", 600, 8721, \"HKG\" },\n\t{ 1016, \"Schwartz\",    \"Mark\", 17, \"M\", 600, 2192, \"DET\" },\n\t{ 1017,   \"Wilson\",   \"Bruce\", 27, \"M\", 600, 1148, \"LON\" },\n\t{ 1018, \"Leighton\", \"Michael\", 20, \"M\", 600, 1121, \"PIT\" },\n\t{ 1019,     \"Pang\",  \"Arthur\", 18, \"M\", 600, 2192, \"WAS\" },\n\t{ 1020, \"Thornton\",     \"Ian\", 22, \"M\", 520, 7271, \"NYC\" },\n\t{ 1021,  \"Andreou\",  \"George\", 19, \"M\", 520, 8722, \"NYC\" },\n\t{ 1022,    \"Woods\", \"Michael\", 17, \"M\", 540, 8722, \"PHL\" },\n\t{ 1023,  \"Shieber\",   \"David\", 20, \"M\", 520, 8722, \"NYC\" },\n\t{ 1024,   \"Prater\",   \"Stacy\", 18, \"F\", 540, 7271, \"BAL\" },\n\t{ 1025,  \"Goldman\",    \"Mark\", 18, \"M\", 520, 7134, \"PIT\" },\n\t{ 1026,     \"Pang\",    \"Eric\", 19, \"M\", 520, 7134, \"HKG\" },\n\t{ 1027,    \"Brody\",    \"Paul\", 18, \"M\", 520, 8723, \"LOS\" },\n\t{ 1028,     \"Rugh\",    \"Eric\", 20, \"M\", 550, 2311, \"ROC\" },\n\t{ 1029,      \"Han\",     \"Jun\", 17, \"M\", 100, 2311, \"PEK\" },\n\t{ 1030,    \"Cheng\",    \"Lisa\", 21, \"F\", 550, 2311, \"SFO\" },\n\t{ 1031,    \"Smith\",   \"Sarah\", 20, \"F\", 550, 8772, \"PHL\" },\n\t{ 1032,    \"Brown\",    \"Eric\", 20, \"M\", 550, 8772, \"ATL\" },\n\t{ 1033,    \"Simms\", \"William\", 18, \"M\", 550, 8772, \"NAR\" },\n\t{ 1034,      \"Epp\",    \"Eric\", 18, \"M\",  50, 5718, \"BOS\" },\n\t{ 1035,  \"Schmidt\",   \"Sarah\", 26, \"F\",  50, 5718, \"WAS\" }\n};\n\n#define len(t) (sizeof t / sizeof(struct T_##t))\n\n#include \"source.c\"\n#include <stdio.h>\n\n\t\nvoid print_a_record(struct T_student * s) {\n\tprintf(\"%d\\t%s\\t%s\\t%d\\t%s\\t%d\\t%d\\t%s\\n\", \n\t\t\t(int)s->student_id,\n\t\t\ts->last_name,\n\t\t\ts->first_name,\n\t\t\t(int)s->age,\n\t\t\ts->sex,\n\t\t\t(int)s->major,\n\t\t\t(int)s->advisor,\n\t\t\ts->city_code);\n}\n\nvoid print_all_records() {\n\tfor (int i = 0; i < len(student); ++ i) {\n\t\tprint_a_record(student + i);\n\t}\n}\n\nint main() {\n\tsort_by_last_name(); // Just do it\n\tprint_all_records();\n}",
            "#include <string.h>\n\ntypedef int (* Compare)(struct T_student * s1, struct T_student * s2);\n\nint cmp(struct T_student * s1, struct T_student * s2) {\n\treturn -strcmp(s1->last_name, s2->last_name);\n}\n\nint find_min(struct T_student student[], int size, Compare cmp) {\n\tint min_index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif ((*cmp)(student + min_index, student + i) > 0) {\n\t\t\tmin_index = i;\n\t\t}\n\t}\n\treturn min_index;\n}\n\n#define swap(T,d,i,j) struct T __temp__ = d[i]; d[i] = d[j]; d[j] = __temp__;  \n\n/*\nvoid sort(Compare cmp) {\n\tfor (int i = 0; i < len(student); ++ i) {\n\t\tint min_index = find_min(student + i, len(student) - i, cmp);\n\t\tswap(T_student, student, i + min_index, i);\n\t}\n}\n*/\nvoid sort(Compare cmp) {\n\tfor (int i = len(student) - 1; i > 0; -- i) {\n\t\tfor (int j = 0; j < i; ++ j) {\n\t\t\tif (cmp(student + j, student + j + 1) > 0) {\n\t\t\t\tswap(T_student, student, j, j + 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid sort_by_last_name() {\n\tsort(cmp);\n}\n",
            "",
            1598889600,
            1598889600
        ],
        [
            "struct.3",
            "Sort student records first by age, then by major, and lastly by last_name.\n\n<pre>1015\tLee\tSusan\t16\tF\t600\t8721\tHKG\n1029\tHan\tJun\t17\tM\t100\t2311\tPEK\n1022\tWoods\tMichael\t17\tM\t540\t8722\tPHL\n1010\tLee\tDerek\t17\tM\t600\t2192\tHOU\n1016\tSchwartz\tMark\t17\tM\t600\t2192\tDET\n1034\tEpp\tEric\t18\tM\t50\t5718\tBOS\n1027\tBrody\tPaul\t18\tM\t520\t8723\tLOS\n1025\tGoldman\tMark\t18\tM\t520\t7134\tPIT\n1024\tPrater\tStacy\t18\tF\t540\t7271\tBAL\n1033\tSimms\tWilliam\t18\tM\t550\t8772\tNAR\n1007\tApap\tLisa\t18\tF\t600\t8918\tPIT\n1014\tNorris\tCharles\t18\tM\t600\t8741\tDAL\n1019\tPang\tArthur\t18\tM\t600\t2192\tWAS\n1006\tSchultz\tAndy\t18\tM\t600\t1148\tBAL\n1001\tSmith\tLinda\t18\tF\t600\t1121\tBAL\n1021\tAndreou\tGeorge\t19\tM\t520\t8722\tNYC\n1026\tPang\tEric\t19\tM\t520\t7134\tHKG\n1002\tKim\tTracy\t19\tF\t600\t7712\tHKG\n1009\tTai\tEric\t19\tM\t600\t2192\tYYZ\n1023\tShieber\tDavid\t20\tM\t520\t8722\tNYC\n1032\tBrown\tEric\t20\tM\t550\t8772\tATL\n1028\tRugh\tEric\t20\tM\t550\t2311\tROC\n1031\tSmith\tSarah\t20\tF\t550\t8772\tPHL\n1012\tDavis\tSteven\t20\tM\t600\t7723\tPIT\n1004\tKumar\tDinesh\t20\tM\t600\t8423\tCHI\n1018\tLeighton\tMichael\t20\tM\t600\t1121\tPIT\n1008\tNelson\tJandy\t20\tF\t600\t9172\tBAL\n1030\tCheng\tLisa\t21\tF\t550\t2311\tSFO\n1003\tJones\tShiela\t21\tF\t600\t7792\tWAS\n1020\tThornton\tIan\t22\tM\t520\t7271\tNYC\n1011\tAdams\tDavid\t22\tM\t600\t1148\tPHL\n1035\tSchmidt\tSarah\t26\tF\t50\t5718\tWAS\n1005\tGompers\tPaul\t26\tM\t600\t1121\tYYZ\n1017\tWilson\tBruce\t27\tM\t600\t1148\tLON\n</pre>",
            "struct T_student {\n\tdouble student_id;\n\tchar last_name[9];\n\tchar first_name[8];\n\tdouble age;\n\tchar sex[2];\n\tdouble major;\n\tdouble advisor;\n\tchar city_code[4];\n};\n\nstruct T_student student[] = {\n\t{ 1001,    \"Smith\",   \"Linda\", 18, \"F\", 600, 1121, \"BAL\" },\n\t{ 1002,      \"Kim\",   \"Tracy\", 19, \"F\", 600, 7712, \"HKG\" },\n\t{ 1003,    \"Jones\",  \"Shiela\", 21, \"F\", 600, 7792, \"WAS\" },\n\t{ 1004,    \"Kumar\",  \"Dinesh\", 20, \"M\", 600, 8423, \"CHI\" },\n\t{ 1005,  \"Gompers\",    \"Paul\", 26, \"M\", 600, 1121, \"YYZ\" },\n\t{ 1006,  \"Schultz\",    \"Andy\", 18, \"M\", 600, 1148, \"BAL\" },\n\t{ 1007,     \"Apap\",    \"Lisa\", 18, \"F\", 600, 8918, \"PIT\" },\n\t{ 1008,   \"Nelson\",   \"Jandy\", 20, \"F\", 600, 9172, \"BAL\" },\n\t{ 1009,      \"Tai\",    \"Eric\", 19, \"M\", 600, 2192, \"YYZ\" },\n\t{ 1010,      \"Lee\",   \"Derek\", 17, \"M\", 600, 2192, \"HOU\" },\n\t{ 1011,    \"Adams\",   \"David\", 22, \"M\", 600, 1148, \"PHL\" },\n\t{ 1012,    \"Davis\",  \"Steven\", 20, \"M\", 600, 7723, \"PIT\" },\n\t{ 1014,   \"Norris\", \"Charles\", 18, \"M\", 600, 8741, \"DAL\" },\n\t{ 1015,      \"Lee\",   \"Susan\", 16, \"F\", 600, 8721, \"HKG\" },\n\t{ 1016, \"Schwartz\",    \"Mark\", 17, \"M\", 600, 2192, \"DET\" },\n\t{ 1017,   \"Wilson\",   \"Bruce\", 27, \"M\", 600, 1148, \"LON\" },\n\t{ 1018, \"Leighton\", \"Michael\", 20, \"M\", 600, 1121, \"PIT\" },\n\t{ 1019,     \"Pang\",  \"Arthur\", 18, \"M\", 600, 2192, \"WAS\" },\n\t{ 1020, \"Thornton\",     \"Ian\", 22, \"M\", 520, 7271, \"NYC\" },\n\t{ 1021,  \"Andreou\",  \"George\", 19, \"M\", 520, 8722, \"NYC\" },\n\t{ 1022,    \"Woods\", \"Michael\", 17, \"M\", 540, 8722, \"PHL\" },\n\t{ 1023,  \"Shieber\",   \"David\", 20, \"M\", 520, 8722, \"NYC\" },\n\t{ 1024,   \"Prater\",   \"Stacy\", 18, \"F\", 540, 7271, \"BAL\" },\n\t{ 1025,  \"Goldman\",    \"Mark\", 18, \"M\", 520, 7134, \"PIT\" },\n\t{ 1026,     \"Pang\",    \"Eric\", 19, \"M\", 520, 7134, \"HKG\" },\n\t{ 1027,    \"Brody\",    \"Paul\", 18, \"M\", 520, 8723, \"LOS\" },\n\t{ 1028,     \"Rugh\",    \"Eric\", 20, \"M\", 550, 2311, \"ROC\" },\n\t{ 1029,      \"Han\",     \"Jun\", 17, \"M\", 100, 2311, \"PEK\" },\n\t{ 1030,    \"Cheng\",    \"Lisa\", 21, \"F\", 550, 2311, \"SFO\" },\n\t{ 1031,    \"Smith\",   \"Sarah\", 20, \"F\", 550, 8772, \"PHL\" },\n\t{ 1032,    \"Brown\",    \"Eric\", 20, \"M\", 550, 8772, \"ATL\" },\n\t{ 1033,    \"Simms\", \"William\", 18, \"M\", 550, 8772, \"NAR\" },\n\t{ 1034,      \"Epp\",    \"Eric\", 18, \"M\",  50, 5718, \"BOS\" },\n\t{ 1035,  \"Schmidt\",   \"Sarah\", 26, \"F\",  50, 5718, \"WAS\" }\n};\n\n#define len(t) (sizeof t / sizeof(struct T_##t))\n\n#include \"source.c\"\n#include <stdio.h>\n\n\t\nvoid print_a_record(struct T_student * s) {\n\tprintf(\"%d\\t%s\\t%s\\t%d\\t%s\\t%d\\t%d\\t%s\\n\", \n\t\t\t(int)s->student_id,\n\t\t\ts->last_name,\n\t\t\ts->first_name,\n\t\t\t(int)s->age,\n\t\t\ts->sex,\n\t\t\t(int)s->major,\n\t\t\t(int)s->advisor,\n\t\t\ts->city_code);\n}\n\nvoid print_all_records() {\n\tfor (int i = 0; i < len(student); ++ i) {\n\t\tprint_a_record(student + i);\n\t}\n}\n\nint main() {\n\tsort_by_last_name(); // Just do it\n\tprint_all_records();\n}",
            "#include <string.h>\n\ntypedef int (* Compare)(struct T_student * s1, struct T_student * s2);\n\nint cmp(struct T_student * s1, struct T_student * s2) {\n\tif (s1->age != s2->age) return s1->age - s2->age;\n\tif (s1->major != s2->major) return s1->major - s2->major;\n\treturn strcmp(s1->last_name, s2->last_name);\n}\n\nint find_min(struct T_student student[], int size, Compare cmp) {\n\tint min_index = 0;\n\tfor (int i = 1; i < size; ++ i) {\n\t\tif ((*cmp)(student + min_index, student + i) > 0) {\n\t\t\tmin_index = i;\n\t\t}\n\t}\n\treturn min_index;\n}\n\n#define swap(T,d,i,j) struct T __temp__ = d[i]; d[i] = d[j]; d[j] = __temp__;  \n\n/*\nvoid sort(Compare cmp) {\n\tfor (int i = 0; i < len(student); ++ i) {\n\t\tint min_index = find_min(student + i, len(student) - i, cmp);\n\t\tswap(T_student, student, i + min_index, i);\n\t}\n}\n*/\nvoid sort(Compare cmp) {\n\tfor (int i = len(student) - 1; i > 0; -- i) {\n\t\tfor (int j = 0; j < i; ++ j) {\n\t\t\tif (cmp(student + j, student + j + 1) > 0) {\n\t\t\t\tswap(T_student, student, j, j + 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid sort_by_last_name() {\n\tsort(cmp);\n}\n",
            "\nfrom random import randint\n\ndef rand_perm(ss):\n\tfor k in range(len(ss), 1, -1):\n\t\ti = randint(0, k-1)\n\t\ts = ss[k-1]\n\t\tss[k-1]=ss[i]\n\t\tss[i] = s\n\nlines = '''1015\tLee\tSusan\t16\tF\t600\t8721\tHKG\n1029\tHan\tJun\t17\tM\t100\t2311\tPEK\n1022\tWoods\tMichael\t17\tM\t540\t8722\tPHL\n1010\tLee\tDerek\t17\tM\t600\t2192\tHOU\n1016\tSchwartz\tMark\t17\tM\t600\t2192\tDET\n1034\tEpp\tEric\t18\tM\t50\t5718\tBOS\n1027\tBrody\tPaul\t18\tM\t520\t8723\tLOS\n1025\tGoldman\tMark\t18\tM\t520\t7134\tPIT\n1024\tPrater\tStacy\t18\tF\t540\t7271\tBAL\n1033\tSimms\tWilliam\t18\tM\t550\t8772\tNAR\n1007\tApap\tLisa\t18\tF\t600\t8918\tPIT\n1014\tNorris\tCharles\t18\tM\t600\t8741\tDAL\n1019\tPang\tArthur\t18\tM\t600\t2192\tWAS\n1006\tSchultz\tAndy\t18\tM\t600\t1148\tBAL\n1001\tSmith\tLinda\t18\tF\t600\t1121\tBAL\n1021\tAndreou\tGeorge\t19\tM\t520\t8722\tNYC\n1026\tPang\tEric\t19\tM\t520\t7134\tHKG\n1002\tKim\tTracy\t19\tF\t600\t7712\tHKG\n1009\tTai\tEric\t19\tM\t600\t2192\tYYZ\n1023\tShieber\tDavid\t20\tM\t520\t8722\tNYC\n1032\tBrown\tEric\t20\tM\t550\t8772\tATL\n1028\tRugh\tEric\t20\tM\t550\t2311\tROC\n1031\tSmith\tSarah\t20\tF\t550\t8772\tPHL\n1012\tDavis\tSteven\t20\tM\t600\t7723\tPIT\n1004\tKumar\tDinesh\t20\tM\t600\t8423\tCHI\n1018\tLeighton\tMichael\t20\tM\t600\t1121\tPIT\n1008\tNelson\tJandy\t20\tF\t600\t9172\tBAL\n1030\tCheng\tLisa\t21\tF\t550\t2311\tSFO\n1003\tJones\tShiela\t21\tF\t600\t7792\tWAS\n1020\tThornton\tIan\t22\tM\t520\t7271\tNYC\n1011\tAdams\tDavid\t22\tM\t600\t1148\tPHL\n1035\tSchmidt\tSarah\t26\tF\t50\t5718\tWAS\n1005\tGompers\tPaul\t26\tM\t600\t1121\tYYZ\n1017\tWilson\tBruce\t27\tM\t600\t1148\tLON'''\n\n\n",
            1598889600,
            1598889600
        ],
        [
            "M.1 Pattern",
            "Let <i>n</i> be an integer that you can read from the standard input.<br>\nPrint the following square pattern whose length is <i>n</i>.<br>\n<br>\n\n<u><b>EXAMPLE INPUT 1</b></u>\n<pre>\n5\n</pre>\n\n<u><b>EXAMPLE OUTPUT 1</b></u>\n<pre>\n#####\n#    \n# ###\n# #  \n# # #\n</pre>\n\n<u><b>EXAMPLE INPUT 2</b></u>\n<pre>\n10\n</pre>\n\n<u><b>EXAMPLE OUTPUT 2</b></u>\n<pre>\n##########\n#         \n# ########\n# #       \n# # ######\n# # #     \n# # # ####\n# # # #   \n# # # # ##\n# # # # # \n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint get_int() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid print_line(int session1, int session2) {\n\tint i;\n\tfor (i = 0; i < session1; ++ i) {\n\t\tif (i % 2 == 0) putchar('#');\n\t\telse putchar(' ');\n\t}\n\tfor (i = 0; i < session2; ++ i) {\n\t\tif (session1 % 2 == 0) putchar('#');\n\t\telse putchar(' ');\n\t}\n\tputchar('\\n');\n}\n\nint main() {\n\tint len = get_int();\n\tint i;\n\tfor (i = 0; i < len; ++ i) {\n\t\tprint_line(i, len - i);\n\t}\n}\n",
            "\nfrom random import randint\nprint(randint(5,10))",
            1598889600,
            1598889600
        ],
        [
            "M.2 Year",
            "Let <i>n</i> be an integer that represents a year and that you can read from the standard input.<br>\nStarting from <i>n</i> (including <i>n</i>), find the first leap year, whose reversed number is prime.<br> \n<br>\n\n<u><b>EXAMPLE INPUT 1</b></u>\n<pre>\n1000\n</pre>\n\n<u><b>EXAMPLE OUTPUT 1</b></u>\n<pre>\n1004\n</pre>\n\n<u><b>EXAMPLE INPUT 2</b></u>\n<pre>\n2017\n</pre>\n\n<u><b>EXAMPLE OUTPUT 2</b></u>\n<pre>\n3004\n</pre>",
            "#include \"source.c\"",
            "int is_leap_year(int year) {\n\treturn (year % 4 == 0 && year % 100 != 0) || (year % 400 == 0);\n}\n\nint reverse(int n) {\n\tint r = 0;\n\twhile (n > 0) {\n\t\tr = r * 10 + (n % 10);\n\t\tn /= 10;\n\t}\n\treturn r;\n}\n\nint is_prime(int number) {\n\tint i;\n\tfor (i = number / 2; i >= 2; -- i) {\n\t\tif (number % i == 0) return 0;\n\t}\n\treturn 1;\n}\n\n#include <stdio.h>\n\nint get_int() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nvoid print_int(int val) {\n\tprintf(\"%d\", val);\n}\n\nint main() {\n\tint year = get_int();\n\tfor (; ; ++ year) {\n\t\tif (is_leap_year(year) && is_prime(reverse(year))) {\n\t\t\tprint_int(year);\n\t\t\tbreak;\n\t\t}\n\t}\n}\n",
            "\nfrom random import randint\nprint(randint(1000,2020))",
            1598889600,
            1598889600
        ],
        [
            "M.3 Pattern 2",
            "Let <i>n</i> be an odd integer that you can read from the standard input.<br>\nPrint the following square pattern whose length is <i>n</i>.<br>\nIn this exercise, <i>n</i> is less that 9 + 26.<br>\n<br>\n\n<u><b>EXAMPLE INPUT 1</b></u>\n<pre>\n9\n</pre>\n\n<u><b>EXAMPLE OUTPUT 1</b></u>\n<pre>\n123456789\n223456788\n333456777\n444456666\n555555555\n666654444\n777654333\n887654322\n987654321\n</pre>\n\n<u><b>EXAMPLE INPUT 2</b></u>\n<pre>\n15\n</pre>\n\n<u><b>EXAMPLE OUTPUT 2</b></u>\n<pre>\n123456789ABCDEF\n223456789ABCDEE\n333456789ABCDDD\n444456789ABCCCC\n555556789ABBBBB\n666666789AAAAAA\n777777789999999\n888888888888888\n999999987777777\nAAAAAA987666666\nBBBBBA987655555\nCCCCBA987654444\nDDDCBA987654333\nEEDCBA987654322\nFEDCBA987654321\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nvoid print_char(int c) {\n\tif (c >= 0 && c <= 9) putchar('0' + c);\n\telse if (c >= 9 + 1 && c <= 9 + 26) putchar('A' + c - 10);\n\telse putchar(' ');\n}\n\nvoid print_chars(int c, int len, int incr) {\n\tfor (int i = 0; i < len; ++ i) {\n\t\tprint_char(c + i * incr);\n\t}\n}\n\nint get_int() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nint min(int x, int y) {\n\treturn x > y ? y : x;\n} \n\nvoid print_line(int i, int len) {\n\tint len13 = min(i, len - 1 - i);\n\tint len2 = len - len13 * 2;\n\tprint_chars(i + 1, len13, 0);\n\tint incr = i < len / 2 ? 1 : -1;\n\tprint_chars(i + 1, len2, incr);\n\tprint_chars(len - i, len13, 0);\n\tputchar('\\n');\n}\n\nint main() {\n\tint len = get_int();\n\tint i;\n\tfor (i = 0; i < len; ++ i) {\n\t\tprint_line(i, len);\n\t}\n}\n",
            "\nfrom random import randint\nprint(randint(5,9+26))",
            1598889600,
            1598889600
        ],
        [
            "M.4 Progress Bar",
            "Read two numbers from the standard input:<br>\n<i>total_tasks</i> and <i>progress_bar_length</i>.<br>\nThen draw a progress bar as below.<br>\n<br>\n<u><b>HINT</b></u>\n<pre>percentage = cur_task * 100 / total_tasks\nnum_equals = cur_task * (progress_bar_length - 2) / total_tasks\n</pre>\n<br>\n\n<u><b>EXAMPLE INPUT 1</b></u>\n<pre>10 12\n</pre>\n\n<u><b>EXAMPLE OUTPUT 1</b></u>\n<pre>[&gt;   0%    ]\n[=&gt; 10%    ]\n[==&gt;20%    ]\n[===30%    ]\n[===40%    ]\n[===50%    ]\n[===60%&gt;   ]\n[===70%=&gt;  ]\n[===80%==&gt; ]\n[===90%===&gt;]\n[===100%===]\n</pre>\n\n<u><b>EXAMPLE INPUT 2</b></u>\n<pre>15 20\n</pre>\n\n<u><b>EXAMPLE OUTPUT 2</b></u>\n<pre>[&gt;       0%        ]\n[=&gt;      6%        ]\n[==&gt;    13%        ]\n[===&gt;   20%        ]\n[====&gt;  26%        ]\n[======&gt;33%        ]\n[=======40%        ]\n[=======46%        ]\n[=======53%        ]\n[=======60%&gt;       ]\n[=======66%==&gt;     ]\n[=======73%===&gt;    ]\n[=======80%====&gt;   ]\n[=======86%=====&gt;  ]\n[=======93%======&gt; ]\n[=======100%=======]\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint get_int() {\n\tint val;\n\tscanf(\"%d\", &val);\n\treturn val;\n}\n\nint power(int base, int exp) {\n\tint pow = 1;\n\tint i;\n\tfor (i = 0; i < exp; ++ i) {\n\t\tpow *= base;\n\t}\n\treturn pow;\n}\n\nint num_length(int num) {\n\tint len = 1;\n\tint i;\n\tfor (i = 0; i < 100; ++ i) {\n\t\tif (num < power(10, i + 1)) return len;\n\t\t++ len;\n\t}\n\treturn 0;\n}\n\nvoid progress_bar(int total_tasks, int cur_task, int progress_bar_length) {\n\tint percentage = cur_task * 100 / total_tasks;\n\tint label_length = num_length(percentage) + 1;\n\tint label_start = (progress_bar_length - label_length) / 2;\n\tint num_equals = cur_task * (progress_bar_length - 2) / total_tasks;\n\t\n\tint i;\n\tfor (i = 0; i < progress_bar_length; ++ i) {\n\t\tif (i == 0) putchar('[');\n\t\telse if (i == progress_bar_length - 1) putchar(']');\n\t\telse if (i == label_start) printf(\"%d%%\", percentage);\n\t\telse if (i < label_start || i >= label_start + label_length) {\n\t\t\tif (i - 1 < num_equals) putchar('=');\n\t\t\telse if (i - 1 == num_equals) putchar('>');\n\t\t\telse putchar(' ');\n\t\t}\n\t}\n}\n\nint main() {\n\tint total_tasks = get_int();\n\tint cur_task;\n\tint progress_bar_length = get_int();\n\tfor (cur_task = 0; cur_task <= total_tasks; ++ cur_task) {\n\t\tprogress_bar(total_tasks, cur_task, progress_bar_length);\n\t\tputchar('\\n');\n\t}\n}\n",
            "\nfrom random import randint\ntotal_tasks = randint(10,20)\nprogress_bar_length = total_tasks + randint(2,10)\nprint(total_tasks, progress_bar_length)",
            1598889600,
            1598889600
        ],
        [
            "M.7",
            "<h2>###. Numbers 4</h2>\nSummarize the number of occurrences of the 100 given numbers.<br>\nSort the results according to the values and the occurrences of the numbers.<br>\n<br>\n找出每个数字共出现的次数.<br>\n对结果排序.<br>\n本题需要实现函数 <pre>void getSortedIndexes(const int array[], int size, int indexes[])</pre>\n\n<b>Input format:</b><br>\n100 numbers are given in 10 lines.\n<br>\n<br>\n\n<b>Output</b><br>\nPrint the given numbers in a ascending order.<br>\nPrint a number is a line, followed by its occurrence times.<br>\nThe number and its occurrence times is separated by a single empty space.<br>\n<br>\n每行输出一个数字和它的位置/次数.<br>\n按数字由小到大的顺序输出结果.<br>\n按出现次数由小到大的顺序输出结果.<br>\n<br>\n\n<b><u>EXAMPLE INPUT 1</u></b>\n<pre>5 1 5 9 3 8 2 1 5 1 \n3 1 8 2 8 8 8 2 1 2 \n9 5 8 2 3 3 1 3 5 5 \n9 8 3 1 8 5 5 8 9 1 \n8 5 8 5 2 2 8 8 3 1 \n8 9 5 9 5 9 5 8 2 9 \n8 2 8 5 8 8 8 3 9 5 \n1 2 9 5 8 8 5 9 1 9 \n8 1 8 1 1 9 1 3 8 5 \n9 1 1 5 3 2 5 8 1 8 \n</pre>\n\n<b><u>EXAMPLE OUTPUT 1</u></b>\n<pre>3 10\n2 11\n9 14\n1 18\n5 20\n8 27\n</pre>\n\n<b><u>EXAMPLE INPUT 2</u></b>\n<pre>1 1 6 2 2 2 4 6 2 2 \n2 1 4 4 1 1 6 2 1 2 \n4 1 2 6 4 4 1 1 6 4 \n1 6 4 1 2 4 2 1 6 2 \n2 1 2 2 1 2 6 2 6 1 \n1 4 2 2 1 2 6 2 6 6 \n4 2 1 2 2 2 2 2 2 2 \n6 4 2 1 4 2 1 1 2 6 \n4 6 2 6 2 4 1 2 4 2 \n1 4 2 4 6 6 1 1 6 6  \n</pre>\n\n<b><u>EXAMPLE OUTPUT 2</u></b>\n<pre>4 18\n6 20\n1 25\n2 37\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nvoid printIntsWithInfo(int array[], int info[], int count, int * indexes) {\n\tfor (int i = 0; i < count; ++ i) {\n\t\tint index = (indexes != 0 ? indexes[i] : i);\n\t\tprintf(\"%d %d\\n\", array[index], info[index]);\n\t\t//cout << array[index] << \" \" << info[index] << endl;\n\t}\t\n}\n\nvoid readInts(int array[], int count) {\n\tfor (int i = 0; i < count; ++ i) {\n\t\t//cin >> array[i];\n\t\tscanf(\"%d\", &array[i]);\n\t}\n}\n\nint find(int number, int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tif (number == array[i]) return i;\n\t}\n\treturn -1;\n}\n\nint getOccurrenceTimes(int array[], int size, int numbers[], int occurrences[]) {\n\tint numbersCount = 0;\n\tfor (int i = 0; i < size; ++ i) {\n\t\tint index = find(array[i], numbers, numbersCount);\n\t\tif (index == -1) {\n\t\t\tnumbers[numbersCount] = array[i];\n\t\t\toccurrences[numbersCount] = 1;\n\t\t\t++ numbersCount;\n\t\t}\n\t\telse {\n\t\t\t++ occurrences[index];\n\t\t}\n\t}\n\treturn numbersCount;\n}\n\nint getFirstOccurrenceIndexes(int array[], int size, int numbers[], int indexes[]) {\n\tint numbersCount = 0;\n\tfor (int i = 0; i < size; ++ i) {\n\t\tint index = find(array[i], numbers, numbersCount);\n\t\tif (index == -1) {\n\t\t\tnumbers[numbersCount] = array[i];\n\t\t\tindexes[numbersCount] = i;\n\t\t\t++ numbersCount;\n\t\t}\n\t}\n\treturn numbersCount;\n}\n\nvoid getSortedIndexes(const int array[], int size, int indexes[]) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tindexes[i] = i;\n\t}\n\tfor (int i = size - 1; i > 0; -- i) {\n\t\tfor (int j = 0; j < i; ++ j) {\n\t\t\tint index1 = indexes[j];\n\t\t\tint index2 = indexes[j + 1];\n\t\t\tif (array[index1] > array[index2]) {\n\t\t\t\tindexes[j] = index2;\n\t\t\t\tindexes[j + 1] = index1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main() {\n\tint array[100];\n\treadInts(array, 100); // TODO\n\t\n\tint numbers[100];\n\tint numbersCount;\t\n\t\n\t// get the times of occurrence of the numbers\n\tint occurrences[100];\n\tnumbersCount = getOccurrenceTimes(array, 100, numbers, occurrences); // TODO\n\t\n\tint indexes[100];\n\n\t// sort indexes in an ascending order of the number values\n\t//getSortedIndexes(numbers, numbersCount, indexes); // TODO\n\t//printIntsWithInfo(numbers, occurrences, numbersCount, indexes);\n\t//printf(\"\\n\");\n\t\n\t// sort indexes in an ascending order of the occurrences\n\tgetSortedIndexes(occurrences, numbersCount, indexes);\n\tprintIntsWithInfo(numbers, occurrences, numbersCount, indexes);\n\tprintf(\"\\n\");\n}\n",
            "\nfrom random import randint\n\nnum = [i for i in range(1,10) if randint(0,2) > 0]\nfor i in range(10):\n\tfor j in range(10):\n\t\tprint(num[randint(0,len(num)-1)], end=' ')\n\tprint()",
            1598889600,
            1598889600
        ],
        [
            "M.8",
            "You are going up a stair.<br>\nIn each of your step, you can take 1 to 3 stair-steps <br> \nGiven the number of total stair-steps, please compute the number of ways to go up the stair.<br>\n\n<b>Input format:</b><br>\nFirst line: the number of total steps <i>n</i>.\n<br>\n<br>\n\n<b>Output format:</b><br>\nThe number of possible ways.\n<br>\n<br>\n\n<b><u>EXAMPLE INPUT 1</u></b>\n<pre>\n3\n</pre>\n\n<b><u>EXAMPLE OUTPUT 1</u></b>\n<pre>\nnumberOfWays = 4\n</pre>\n\n<b><u>EXAMPLE INPUT 2</u></b>\n<pre>\n6\n</pre>\n\n<b><u>EXAMPLE OUTPUT 2</u></b>\n<pre>\nnumberOfWays = 24\n</pre>\n\n<b><u>EXAMPLE INPUT 3</u></b>\n<pre>\n12\n</pre>\n\n<b><u>EXAMPLE OUTPUT 3</u></b>\n<pre>\nnumberOfWays = 927\n</pre>",
            "#include \"source.c\"",
            "//#include <iostream>\n//using namespace std;\n\n// numberOfWays : dynamic programming helper funtion\nint numberOfWays0(int totalSteps, int stepSizes[], int stepSizesCount, int memorized[]) {\n\tif (memorized[totalSteps] != -1) return memorized[totalSteps];\n\t\n\tint ways = 0;\n\tfor (int i = 0; i < stepSizesCount; ++ i) {\n\t\tint firstStepSize = stepSizes[i];\n\t\tint remainingSteps = totalSteps - firstStepSize;\n\t\tif (remainingSteps < 0) continue;\n\t\tif (remainingSteps == 0) {\n\t\t\t++ ways;\n\t\t\tcontinue;\n\t\t} \n\t\tways += numberOfWays0(remainingSteps, stepSizes, stepSizesCount, memorized);\n\t}\n\t\n\tmemorized[totalSteps] = ways;\n\treturn ways;\n}\n\n// numberOfWays\nint numberOfWays(int totalSteps, int stepSizes[], int stepSizesCount) {\n\tint memorized[100];\n\tfor (int i = 0; i < totalSteps + 1; ++ i) {\n\t\tmemorized[i] = -1;\n\t}\n\tint ways = numberOfWays0(totalSteps, stepSizes, stepSizesCount, memorized);\n\treturn ways;\n}\n\n// find\nint find(int number, int array[], int size) {\n\tfor (int i = 0; i < size; ++ i) {\n\t\tif (number == array[i]) return i;\n\t}\n\treturn -1;\n}\n\n\n#include <stdio.h>\n\nint main() {\n\tint totalSteps;\n\t//cin >> totalSteps;\n\tscanf(\"%d\", &totalSteps);\n\t\n\tint stepSizes[] = {1, 2, 3};\n\t\t\t\t\n\t//cout << \"leastSteps = \" \n\t//\t<< leastSteps(totalSteps, stepSizes, 3)\n\t//\t<< endl;\n\tprintf(\"%d\", numberOfWays(totalSteps, stepSizes, 3));\n\t\t\n}\n",
            "\nfrom random import randint\nprint(randint(5,20))",
            1598889600,
            1598889600
        ],
        [
            "2020-midterm-1",
            "<div _ngcontent-cpa-c285=\"\" class=\"assignment-info-header\" style=\"height: 24px; display: flex; flex-direction: row; align-items: flex-end; justify-content: flex-start; margin-bottom: 1rem; margin-top: 1rem; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><span _ngcontent-cpa-c285=\"\" class=\"assignment-title\" style=\"font-size: 16px; color: rgb(0, 0, 0); white-space: nowrap;\">[2020 C Midterm] Formatted output（格式化输出）&nbsp;<nz-tag _ngcontent-cpa-c285=\"\" class=\"assignment-judge-type ng-tns-c204-193 ng-trigger ng-trigger-fadeMotion ant-tag\" style=\"color: rgb(0, 153, 153); font-variant-numeric: tabular-nums; font-variant-east-asian: normal; list-style: none; font-feature-settings: &quot;tnum&quot;; display: inline-block; height: auto; margin: 0px 8px 0px 0px; padding: 0px 7px; font-size: 12px; line-height: 20px; background: rgb(230, 249, 246); border: 1px solid rgb(0, 153, 153); border-radius: 4px; cursor: default; opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86) 0s;\">实时评测</nz-tag></span></div><div _ngcontent-cpa-c285=\"\" class=\"assignment-info-extra\" style=\"font-size: 12px; line-height: 24px; display: flex; justify-content: flex-start; flex-wrap: wrap; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\"><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"截止时间\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary ng-star-inserted\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:calendar-deadline\" class=\"anticon anticon-matrix-icons:calendar-deadline\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:calendar-deadline\" aria-hidden=\"true\"><path fill=\"#bfbfbf\" d=\"M14.1 11.915a.209.209 0 0 0-.216.2v.4a.217.217 0 0 0 .432 0v-.4a.208.208 0 0 0-.216-.2zm.021 1.2a.214.214 0 0 0-.251.162.847.847 0 0 1-.851.657H11.3a.2.2 0 1 0 0 .4h1.719a1.273 1.273 0 0 0 1.277-.986.2.2 0 0 0-.172-.231zm-.718-11.908h-1.3V.4a.433.433 0 0 0-.864 0v.81H4.751V.4a.433.433 0 0 0-.864 0v.81h-1.3a2.505 2.505 0 0 0-2.595 2.4v9.99A2.505 2.505 0 0 0 2.587 16h10.811a2.505 2.505 0 0 0 2.595-2.4V3.606a2.5 2.5 0 0 0-2.588-2.397zm-10.811.8h1.3V2.4a.433.433 0 0 0 .864 0v-.391h6.486V2.4a.433.433 0 0 0 .864 0v-.391h1.3a1.671 1.671 0 0 1 1.73 1.6V5.17H.866V3.606a1.669 1.669 0 0 1 1.728-1.6zM13.405 15.2H2.595a1.671 1.671 0 0 1-1.73-1.6V5.57h14.27v8.03a1.667 1.667 0 0 1-1.728 1.6zm-5.843-2.987V7.358A.277.277 0 0 1 7.7 7.11a.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v1.589h1.987a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H8.494v2.406h2.346a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H4.851a.292.292 0 0 1-.269-.133.548.548 0 0 1-.09-.313.474.474 0 0 1 .084-.288.317.317 0 0 1 .276-.128h.781V8.762a.277.277 0 0 1 .138-.248.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v3.452h1zm0 0\"></path></svg></span>&nbsp;2020-11-04 16:30</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"时间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:clock\" class=\"anticon anticon-matrix-icons:clock\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:clock\" aria-hidden=\"true\"><path data-name=\"186\" d=\"M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm0 15.273A7.273 7.273 0 1 1 15.273 8 7.273 7.273 0 0 1 8 15.275zM12 8H8.364V3.275a.364.364 0 0 0-.727 0v5.091a.364.364 0 0 0 .364.364h4a.364.364 0 1 0 0-.727z\" fill=\"#bfbfbf\"></path></svg></span>&nbsp;1000 ms</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"空间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 0px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:cubic\" class=\"anticon anticon-matrix-icons:cubic\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:cubic\" aria-hidden=\"true\"><g transform=\"translate(-68.457)\" fill=\"#bfbfbf\"><path d=\"M500.857 245.632a.233.233 0 0 0-.173.05l-7.652 3.838a.293.293 0 0 0-.173.3v7.676a.313.313 0 0 0 .345.3.233.233 0 0 0 .173-.05l7.652-3.838a.293.293 0 0 0 .173-.3v-7.676a.168.168 0 0 0-.057-.15.326.326 0 0 0-.288-.15zM493.55 256.9v-6.928l6.9-3.439v6.928z\" transform=\"translate(-416.749 -241.794)\"></path><path d=\"M68.931 245.632a.31.31 0 0 0-.345.3v7.676a.412.412 0 0 0 .173.3l7.652 3.838a.233.233 0 0 0 .173.05.31.31 0 0 0 .345-.3v-7.726a.412.412 0 0 0-.173-.3l-7.656-3.838zm7.307 11.268l-6.9-3.439v-6.928l6.9 3.439z\" transform=\"translate(-.127 -241.794)\"></path><path d=\"M76.457 0a.233.233 0 0 0-.173.05l-7.652 3.838c-.058.05-.115.05-.115.1a.3.3 0 0 0 .115.449l7.652 3.838a.324.324 0 0 0 .345 0l7.652-3.838c.058-.05.115-.05.115-.1a.3.3 0 0 0-.115-.449L76.629.05a.233.233 0 0 0-.172-.05zm0 7.626l-6.9-3.439 6.9-3.439 6.9 3.439z\"></path></g></svg></span>&nbsp;32 MB</span></div><div _ngcontent-cpa-c271=\"\" class=\"assignment-info\" style=\"color: rgb(144, 147, 153); font-size: 12px; line-height: 1.8; display: flex; justify-content: space-between;\"><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div></div><p><one-assignment-info _ngcontent-cpa-c285=\"\" _nghost-cpa-c271=\"\" style=\"color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><matrix-md _ngcontent-cpa-c271=\"\" _nghost-cpa-c238=\"\" class=\"ng-star-inserted\" style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; color: rgb(51, 51, 51); text-size-adjust: 100%; line-height: 1.5; overflow-wrap: break-word;\"></matrix-md></one-assignment-info></p><div _ngcontent-cpa-c238=\"\" class=\"markdown-body new-markdown-style\" markdownid=\"1\" style=\"box-sizing: border-box; margin-top: 0px !important; margin-bottom: 0px !important; font-size: 14px; line-height: 22px; font-weight: 400; color: rgb(89, 89, 89);\"><h2 id=\"1-0-Description\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Description</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">In the first line is a number n representing the number of the test cases.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Each case contains two numbers in a line. The first number is an integer, the second is a float.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">You shold output 3 lines of each test case. In the first line, you should print the integer with a width of 10 digits, but fill the space with 0. In the second line, you shold print the float with a precision of 4 characters after the decimal point. In the third line, you should print the float with a width of at least 12 wide, and a precision of 4 characters after the decimal point.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Each line is end of<span>&nbsp;</span><code style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 0.2em 0.4em; margin: 0px 0.1em; border-radius: 3px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244);\">\\n</code>, including the last line.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">格式化输出</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">第一行只有一个数字，表示测试样例的个数。</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">后面每一行表示一个测试样例。每个测试样例有两个数字，第一个数字是整型数，第二个数是浮点数。</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">对于每个测试样例，你需要输出3行。第一行输出该测试样例里的整型数，以固定位宽10，前面补0的形式输出。第二行输出该测试样例的浮点数，保留4位小数。第三行输出该测试样例的浮点数，以固定位宽12输出，保留4位小数。</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">每一行以<code style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; padding: 0.2em 0.4em; margin: 0px 0.1em; border-radius: 3px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244);\">\\n</code>结尾</p><h2 id=\"1-1-SampleInput\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Input</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span>\n<span class=\"hljs-symbol\" style=\"box-sizing: border-box; color: rgb(188, 96, 96);\">25 </span><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3.52</span>\n<span class=\"hljs-symbol\" style=\"box-sizing: border-box; color: rgb(188, 96, 96);\">1024 </span><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2020.996</span>\n</code></pre><h2 id=\"1-2-SampleOutput\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Output</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">0000000025</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3.5200</span>\n      <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3.5200</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">0000001024</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2020.9960</span>\n   <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2020.9960</span></code></pre></div>",
            "#include \"source.c\"",
            "# include <stdio.h>\n\nint main() {\n    int num_test_case = 0;\n    scanf(\"%d\", &num_test_case);\n\t  for (int i = 0; i < num_test_case; ++ i) {\n        int a = 0;\n        scanf(\"%d\", &a);\n        printf(\"%010d\\n\", a);\n        float b = 0;\n        scanf(\"%f\", &b);\n        printf(\"%.4f\\n\", b);\n        printf(\"%12.4f\\n\", b);\n    }\n    return 0;\n}",
            "from random import randint\nprint(2)\nfor i in range(2):\n\tprint(randint(1,2000), randint(1,3000000)/1000)",
            1604592000,
            1605790800
        ],
        [
            "2020-midterm-2",
            "<div _ngcontent-cpa-c285=\"\" class=\"assignment-info-header\" style=\"height: 24px; display: flex; flex-direction: row; align-items: flex-end; justify-content: flex-start; margin-bottom: 1rem; margin-top: 1rem; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><span _ngcontent-cpa-c285=\"\" class=\"assignment-title\" style=\"font-size: 16px; color: rgb(0, 0, 0); white-space: nowrap;\">[2020 C Midterm] The number of cow 母牛的个数&nbsp;<nz-tag _ngcontent-cpa-c285=\"\" class=\"assignment-judge-type ng-tns-c204-208 ng-trigger ng-trigger-fadeMotion ant-tag\" style=\"color: rgb(0, 153, 153); font-variant-numeric: tabular-nums; font-variant-east-asian: normal; list-style: none; font-feature-settings: &quot;tnum&quot;; display: inline-block; height: auto; margin: 0px 8px 0px 0px; padding: 0px 7px; font-size: 12px; line-height: 20px; background: rgb(230, 249, 246); border: 1px solid rgb(0, 153, 153); border-radius: 4px; cursor: default; opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86) 0s;\">实时评测</nz-tag></span></div><div _ngcontent-cpa-c285=\"\" class=\"assignment-info-extra\" style=\"font-size: 12px; line-height: 24px; display: flex; justify-content: flex-start; flex-wrap: wrap; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\"><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"截止时间\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary ng-star-inserted\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:calendar-deadline\" class=\"anticon anticon-matrix-icons:calendar-deadline\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:calendar-deadline\" aria-hidden=\"true\"><path fill=\"#bfbfbf\" d=\"M14.1 11.915a.209.209 0 0 0-.216.2v.4a.217.217 0 0 0 .432 0v-.4a.208.208 0 0 0-.216-.2zm.021 1.2a.214.214 0 0 0-.251.162.847.847 0 0 1-.851.657H11.3a.2.2 0 1 0 0 .4h1.719a1.273 1.273 0 0 0 1.277-.986.2.2 0 0 0-.172-.231zm-.718-11.908h-1.3V.4a.433.433 0 0 0-.864 0v.81H4.751V.4a.433.433 0 0 0-.864 0v.81h-1.3a2.505 2.505 0 0 0-2.595 2.4v9.99A2.505 2.505 0 0 0 2.587 16h10.811a2.505 2.505 0 0 0 2.595-2.4V3.606a2.5 2.5 0 0 0-2.588-2.397zm-10.811.8h1.3V2.4a.433.433 0 0 0 .864 0v-.391h6.486V2.4a.433.433 0 0 0 .864 0v-.391h1.3a1.671 1.671 0 0 1 1.73 1.6V5.17H.866V3.606a1.669 1.669 0 0 1 1.728-1.6zM13.405 15.2H2.595a1.671 1.671 0 0 1-1.73-1.6V5.57h14.27v8.03a1.667 1.667 0 0 1-1.728 1.6zm-5.843-2.987V7.358A.277.277 0 0 1 7.7 7.11a.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v1.589h1.987a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H8.494v2.406h2.346a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H4.851a.292.292 0 0 1-.269-.133.548.548 0 0 1-.09-.313.474.474 0 0 1 .084-.288.317.317 0 0 1 .276-.128h.781V8.762a.277.277 0 0 1 .138-.248.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v3.452h1zm0 0\"></path></svg></span>&nbsp;2020-11-04 16:30</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"时间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:clock\" class=\"anticon anticon-matrix-icons:clock\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:clock\" aria-hidden=\"true\"><path data-name=\"186\" d=\"M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm0 15.273A7.273 7.273 0 1 1 15.273 8 7.273 7.273 0 0 1 8 15.275zM12 8H8.364V3.275a.364.364 0 0 0-.727 0v5.091a.364.364 0 0 0 .364.364h4a.364.364 0 1 0 0-.727z\" fill=\"#bfbfbf\"></path></svg></span>&nbsp;1000 ms</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"空间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 0px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:cubic\" class=\"anticon anticon-matrix-icons:cubic\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:cubic\" aria-hidden=\"true\"><g transform=\"translate(-68.457)\" fill=\"#bfbfbf\"><path d=\"M500.857 245.632a.233.233 0 0 0-.173.05l-7.652 3.838a.293.293 0 0 0-.173.3v7.676a.313.313 0 0 0 .345.3.233.233 0 0 0 .173-.05l7.652-3.838a.293.293 0 0 0 .173-.3v-7.676a.168.168 0 0 0-.057-.15.326.326 0 0 0-.288-.15zM493.55 256.9v-6.928l6.9-3.439v6.928z\" transform=\"translate(-416.749 -241.794)\"></path><path d=\"M68.931 245.632a.31.31 0 0 0-.345.3v7.676a.412.412 0 0 0 .173.3l7.652 3.838a.233.233 0 0 0 .173.05.31.31 0 0 0 .345-.3v-7.726a.412.412 0 0 0-.173-.3l-7.656-3.838zm7.307 11.268l-6.9-3.439v-6.928l6.9 3.439z\" transform=\"translate(-.127 -241.794)\"></path><path d=\"M76.457 0a.233.233 0 0 0-.173.05l-7.652 3.838c-.058.05-.115.05-.115.1a.3.3 0 0 0 .115.449l7.652 3.838a.324.324 0 0 0 .345 0l7.652-3.838c.058-.05.115-.05.115-.1a.3.3 0 0 0-.115-.449L76.629.05a.233.233 0 0 0-.172-.05zm0 7.626l-6.9-3.439 6.9-3.439 6.9 3.439z\"></path></g></svg></span>&nbsp;32 MB</span></div><div _ngcontent-cpa-c271=\"\" class=\"assignment-info\" style=\"color: rgb(144, 147, 153); font-size: 12px; line-height: 1.8; display: flex; justify-content: space-between;\"><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div></div><p><one-assignment-info _ngcontent-cpa-c285=\"\" _nghost-cpa-c271=\"\" style=\"color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><matrix-md _ngcontent-cpa-c271=\"\" _nghost-cpa-c238=\"\" class=\"ng-star-inserted\" style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; color: rgb(51, 51, 51); text-size-adjust: 100%; line-height: 1.5; overflow-wrap: break-word;\"></matrix-md></one-assignment-info></p><div _ngcontent-cpa-c238=\"\" class=\"markdown-body new-markdown-style\" markdownid=\"1\" style=\"box-sizing: border-box; margin-top: 0px !important; margin-bottom: 0px !important; font-size: 14px; line-height: 22px; font-weight: 400; color: rgb(89, 89, 89);\"><h2 id=\"1-0-Description题目描述\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Description 题目描述</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">假设农场中的母牛每年会产生一头小母牛，并且永远不会死。第一年农场中只有一头成熟的母牛，第二年开始，母牛开始生小母牛，每只小母牛在第三岁的时候成熟并可以生小母牛，给定整数N，求N年后母牛的数量。</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Assume a cow will give a birth to a baby cow and will never die. There is only one cow in the form in the first. When the second year begin, the cow will give a birth to a baby cow, every baby cow will become mature and can give a birth to a bady cow when it is 3 years old. Given an integer N, please output the number of cow(including baby cows) N year later</p><h2 id=\"1-1-Input输入\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Input 输入</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Input an interger which represents N-th year</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">输入为整型，表示第N年</p><h2 id=\"1-2-Output输出\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Output 输出</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Output an interger which represents the number of cows after N year including baby cows</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">输出为整型，表示N年后母牛的数量（包括小母牛）</p><h2 id=\"1-3-SampleInput样例输入\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Input 样例输入</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span>\n</code></pre><h2 id=\"1-4-SampleOutput样例输出\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Output 样例输出</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">6</span>\n</code></pre><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\"><strong style=\"box-sizing: border-box; font-weight: 600;\">hint</strong>：</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">There is only one cow in the first year, this cow gives birth to a baby cow in the second which means 2 cows in total, and the third year the cow also give birth to a baby cow which means 3 cows in total. The fourth year there are 4 cows in total. In the fifth year, the baby cow born in the second year becomes mature and starts to give birth to a baby cows, so there are 2 cows born which means 6 cows in total. Comfirm how many cows can give birth to a baby cow in the key to solution this question</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">第1年只有1只母牛，第2年生了1只小牛共2只牛，第3年生了1只小牛共3只牛，第4年生了1只小牛共4只牛，第5年的时候第2年出生的小牛也可以生小牛，所以新出生2只牛共有6只牛……找到哪些牛可以生小牛是问题的关键！</p></div>",
            "#include \"source.c\"",
            "#include<stdio.h>\n\nint main (){\n    int cows = 0, res = 3, pre = 2, prepre = 1; // 母牛数量\n    int N = 0;\n    scanf(\"%d\", &N);\n    if(1<=N && N <= 3){\n        printf(\"%d\\n\", N);\n    }\n    else{\n        for(int i = 4; i <= N; ++i){\n            int temp = res; \n            res = res + prepre;\n            prepre = pre;\n            pre = temp;\n        }\n        printf(\"%d\\n\", res);\n    }\n    return 0;\n}",
            "from random import randint\nprint(randint(4,30))",
            1604592000,
            1605790800
        ],
        [
            "2020-midterm-3",
            "<div _ngcontent-cpa-c285=\"\" class=\"assignment-info-header\" style=\"height: 24px; display: flex; flex-direction: row; align-items: flex-end; justify-content: flex-start; margin-bottom: 1rem; margin-top: 1rem; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><span _ngcontent-cpa-c285=\"\" class=\"assignment-title\" style=\"font-size: 16px; color: rgb(0, 0, 0); white-space: nowrap;\">[2020 C Midterm] Print the pattern 打印图形&nbsp;<nz-tag _ngcontent-cpa-c285=\"\" class=\"assignment-judge-type ng-tns-c204-221 ng-trigger ng-trigger-fadeMotion ant-tag\" style=\"color: rgb(0, 153, 153); font-variant-numeric: tabular-nums; font-variant-east-asian: normal; list-style: none; font-feature-settings: &quot;tnum&quot;; display: inline-block; height: auto; margin: 0px 8px 0px 0px; padding: 0px 7px; font-size: 12px; line-height: 20px; background: rgb(230, 249, 246); border: 1px solid rgb(0, 153, 153); border-radius: 4px; cursor: default; opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86) 0s;\">实时评测</nz-tag></span></div><div _ngcontent-cpa-c285=\"\" class=\"assignment-info-extra\" style=\"font-size: 12px; line-height: 24px; display: flex; justify-content: flex-start; flex-wrap: wrap; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\"><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"截止时间\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary ng-star-inserted\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:calendar-deadline\" class=\"anticon anticon-matrix-icons:calendar-deadline\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:calendar-deadline\" aria-hidden=\"true\"><path fill=\"#bfbfbf\" d=\"M14.1 11.915a.209.209 0 0 0-.216.2v.4a.217.217 0 0 0 .432 0v-.4a.208.208 0 0 0-.216-.2zm.021 1.2a.214.214 0 0 0-.251.162.847.847 0 0 1-.851.657H11.3a.2.2 0 1 0 0 .4h1.719a1.273 1.273 0 0 0 1.277-.986.2.2 0 0 0-.172-.231zm-.718-11.908h-1.3V.4a.433.433 0 0 0-.864 0v.81H4.751V.4a.433.433 0 0 0-.864 0v.81h-1.3a2.505 2.505 0 0 0-2.595 2.4v9.99A2.505 2.505 0 0 0 2.587 16h10.811a2.505 2.505 0 0 0 2.595-2.4V3.606a2.5 2.5 0 0 0-2.588-2.397zm-10.811.8h1.3V2.4a.433.433 0 0 0 .864 0v-.391h6.486V2.4a.433.433 0 0 0 .864 0v-.391h1.3a1.671 1.671 0 0 1 1.73 1.6V5.17H.866V3.606a1.669 1.669 0 0 1 1.728-1.6zM13.405 15.2H2.595a1.671 1.671 0 0 1-1.73-1.6V5.57h14.27v8.03a1.667 1.667 0 0 1-1.728 1.6zm-5.843-2.987V7.358A.277.277 0 0 1 7.7 7.11a.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v1.589h1.987a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H8.494v2.406h2.346a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H4.851a.292.292 0 0 1-.269-.133.548.548 0 0 1-.09-.313.474.474 0 0 1 .084-.288.317.317 0 0 1 .276-.128h.781V8.762a.277.277 0 0 1 .138-.248.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v3.452h1zm0 0\"></path></svg></span>&nbsp;2020-11-04 16:30</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"时间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:clock\" class=\"anticon anticon-matrix-icons:clock\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:clock\" aria-hidden=\"true\"><path data-name=\"186\" d=\"M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm0 15.273A7.273 7.273 0 1 1 15.273 8 7.273 7.273 0 0 1 8 15.275zM12 8H8.364V3.275a.364.364 0 0 0-.727 0v5.091a.364.364 0 0 0 .364.364h4a.364.364 0 1 0 0-.727z\" fill=\"#bfbfbf\"></path></svg></span>&nbsp;1000 ms</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"空间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 0px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:cubic\" class=\"anticon anticon-matrix-icons:cubic\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:cubic\" aria-hidden=\"true\"><g transform=\"translate(-68.457)\" fill=\"#bfbfbf\"><path d=\"M500.857 245.632a.233.233 0 0 0-.173.05l-7.652 3.838a.293.293 0 0 0-.173.3v7.676a.313.313 0 0 0 .345.3.233.233 0 0 0 .173-.05l7.652-3.838a.293.293 0 0 0 .173-.3v-7.676a.168.168 0 0 0-.057-.15.326.326 0 0 0-.288-.15zM493.55 256.9v-6.928l6.9-3.439v6.928z\" transform=\"translate(-416.749 -241.794)\"></path><path d=\"M68.931 245.632a.31.31 0 0 0-.345.3v7.676a.412.412 0 0 0 .173.3l7.652 3.838a.233.233 0 0 0 .173.05.31.31 0 0 0 .345-.3v-7.726a.412.412 0 0 0-.173-.3l-7.656-3.838zm7.307 11.268l-6.9-3.439v-6.928l6.9 3.439z\" transform=\"translate(-.127 -241.794)\"></path><path d=\"M76.457 0a.233.233 0 0 0-.173.05l-7.652 3.838c-.058.05-.115.05-.115.1a.3.3 0 0 0 .115.449l7.652 3.838a.324.324 0 0 0 .345 0l7.652-3.838c.058-.05.115-.05.115-.1a.3.3 0 0 0-.115-.449L76.629.05a.233.233 0 0 0-.172-.05zm0 7.626l-6.9-3.439 6.9-3.439 6.9 3.439z\"></path></g></svg></span>&nbsp;32 MB</span></div><div _ngcontent-cpa-c271=\"\" class=\"assignment-info\" style=\"color: rgb(144, 147, 153); font-size: 12px; line-height: 1.8; display: flex; justify-content: space-between;\"><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div></div><p><one-assignment-info _ngcontent-cpa-c285=\"\" _nghost-cpa-c271=\"\" style=\"color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><matrix-md _ngcontent-cpa-c271=\"\" _nghost-cpa-c238=\"\" class=\"ng-star-inserted\" style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; color: rgb(51, 51, 51); text-size-adjust: 100%; line-height: 1.5; overflow-wrap: break-word;\"></matrix-md></one-assignment-info></p><div _ngcontent-cpa-c238=\"\" class=\"markdown-body new-markdown-style\" markdownid=\"1\" style=\"box-sizing: border-box; margin-top: 0px !important; margin-bottom: 0px !important; font-size: 14px; line-height: 22px; font-weight: 400; color: rgb(89, 89, 89);\"><h2 id=\"1-0-Description题目描述\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Description 题目描述</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Read an even height<span>&nbsp;</span><i style=\"box-sizing: border-box;\">h</i><span>&nbsp;</span>from the console, and print the following pattern.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">从控制台中读入<i style=\"box-sizing: border-box;\">h</i>，打印图形</p><h2 id=\"1-1-SampleInput样例输入\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Input 样例输入</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">12</span>\n</code></pre><h2 id=\"1-2-SampleOutput样例输出\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Output 样例输出</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\">------||||||<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>\n------||||||/<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>/\n------||||||//<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>//\n------||||||///<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>///\n------||||||////<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>////\n------||||||/////<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>/////\n||||||------//////<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>////\n||||||------/////<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>///\n||||||------////<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>//\n||||||------///<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>/\n||||||------//<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">/</span></span>\n||||||------/<span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\<span class=\"hljs-name\" style=\"box-sizing: border-box; font-weight: 700;\">\\</span></span><span class=\"hljs-tag\" style=\"box-sizing: border-box;\">\\</span></code></pre></div>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nvoid print_line1(int r, int h) {\n\tif (r < h / 2) {\n\t\tfor (int i = 0; i < h; ++ i) {\n\t\t\tif (i < h / 2) putchar('-');\n\t\t\telse putchar('|');\n\t\t}\n\t}\n\telse {\n\t\tfor (int i = 0; i < h; ++ i) {\n\t\t\tif (i < h / 2) putchar('|');\n\t\t\telse putchar('-');\n\t\t}\n\t}\n}\n\nvoid print_line2(int r, int h) {\n\tif (r < h / 2) {\n\t\tfor (int i = 0; i < h; ++ i) {\n\t\t\tif (i < r || i >= h-r-1) putchar('/');\n\t\t\telse putchar('\\\\');\n\t\t}\n\t}\n\telse {\n\t\tfor (int i = 0; i < h; ++ i) {\n\t\t\tif (i < h-r || i > r) putchar('/');\n\t\t\telse putchar('\\\\');\n\t\t}\n\t}\n}\n\nvoid print_line(int r, int h) {\n\tprint_line1(r, h);\n\tprint_line2(r, h);\n\tputchar('\\n');\n}\n\nint main() {\n\tint h;\n\tscanf(\"%d\", &h);\n\tfor (int i = 0; i < h; ++ i) {\n\t\tprint_line(i, h);\n\t}\n}",
            "\nfrom random import randint\nprint(2*randint(4, 10))",
            1604592000,
            1605790800
        ],
        [
            "2020-midterm-4",
            "<div _ngcontent-cpa-c285=\"\" class=\"assignment-info-header\" style=\"height: 24px; display: flex; flex-direction: row; align-items: flex-end; justify-content: flex-start; margin-bottom: 1rem; margin-top: 1rem; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><span _ngcontent-cpa-c285=\"\" class=\"assignment-title\" style=\"font-size: 16px; color: rgb(0, 0, 0); white-space: nowrap;\">[2020 C Midterm] Print the characters 打印字符&nbsp;<nz-tag _ngcontent-cpa-c285=\"\" class=\"assignment-judge-type ng-tns-c204-330 ng-trigger ng-trigger-fadeMotion ant-tag\" style=\"color: rgb(0, 153, 153); font-variant-numeric: tabular-nums; font-variant-east-asian: normal; list-style: none; font-feature-settings: &quot;tnum&quot;; display: inline-block; height: auto; margin: 0px 8px 0px 0px; padding: 0px 7px; font-size: 12px; line-height: 20px; background: rgb(230, 249, 246); border: 1px solid rgb(0, 153, 153); border-radius: 4px; cursor: default; opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86) 0s;\">实时评测</nz-tag></span></div><div _ngcontent-cpa-c285=\"\" class=\"assignment-info-extra\" style=\"font-size: 12px; line-height: 24px; display: flex; justify-content: flex-start; flex-wrap: wrap; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\"><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"截止时间\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary ng-star-inserted\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:calendar-deadline\" class=\"anticon anticon-matrix-icons:calendar-deadline\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:calendar-deadline\" aria-hidden=\"true\"><path fill=\"#bfbfbf\" d=\"M14.1 11.915a.209.209 0 0 0-.216.2v.4a.217.217 0 0 0 .432 0v-.4a.208.208 0 0 0-.216-.2zm.021 1.2a.214.214 0 0 0-.251.162.847.847 0 0 1-.851.657H11.3a.2.2 0 1 0 0 .4h1.719a1.273 1.273 0 0 0 1.277-.986.2.2 0 0 0-.172-.231zm-.718-11.908h-1.3V.4a.433.433 0 0 0-.864 0v.81H4.751V.4a.433.433 0 0 0-.864 0v.81h-1.3a2.505 2.505 0 0 0-2.595 2.4v9.99A2.505 2.505 0 0 0 2.587 16h10.811a2.505 2.505 0 0 0 2.595-2.4V3.606a2.5 2.5 0 0 0-2.588-2.397zm-10.811.8h1.3V2.4a.433.433 0 0 0 .864 0v-.391h6.486V2.4a.433.433 0 0 0 .864 0v-.391h1.3a1.671 1.671 0 0 1 1.73 1.6V5.17H.866V3.606a1.669 1.669 0 0 1 1.728-1.6zM13.405 15.2H2.595a1.671 1.671 0 0 1-1.73-1.6V5.57h14.27v8.03a1.667 1.667 0 0 1-1.728 1.6zm-5.843-2.987V7.358A.277.277 0 0 1 7.7 7.11a.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v1.589h1.987a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H8.494v2.406h2.346a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H4.851a.292.292 0 0 1-.269-.133.548.548 0 0 1-.09-.313.474.474 0 0 1 .084-.288.317.317 0 0 1 .276-.128h.781V8.762a.277.277 0 0 1 .138-.248.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v3.452h1zm0 0\"></path></svg></span>&nbsp;2020-11-04 16:30</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"时间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:clock\" class=\"anticon anticon-matrix-icons:clock\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:clock\" aria-hidden=\"true\"><path data-name=\"186\" d=\"M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm0 15.273A7.273 7.273 0 1 1 15.273 8 7.273 7.273 0 0 1 8 15.275zM12 8H8.364V3.275a.364.364 0 0 0-.727 0v5.091a.364.364 0 0 0 .364.364h4a.364.364 0 1 0 0-.727z\" fill=\"#bfbfbf\"></path></svg></span>&nbsp;1000 ms</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"空间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 0px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:cubic\" class=\"anticon anticon-matrix-icons:cubic\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:cubic\" aria-hidden=\"true\"><g transform=\"translate(-68.457)\" fill=\"#bfbfbf\"><path d=\"M500.857 245.632a.233.233 0 0 0-.173.05l-7.652 3.838a.293.293 0 0 0-.173.3v7.676a.313.313 0 0 0 .345.3.233.233 0 0 0 .173-.05l7.652-3.838a.293.293 0 0 0 .173-.3v-7.676a.168.168 0 0 0-.057-.15.326.326 0 0 0-.288-.15zM493.55 256.9v-6.928l6.9-3.439v6.928z\" transform=\"translate(-416.749 -241.794)\"></path><path d=\"M68.931 245.632a.31.31 0 0 0-.345.3v7.676a.412.412 0 0 0 .173.3l7.652 3.838a.233.233 0 0 0 .173.05.31.31 0 0 0 .345-.3v-7.726a.412.412 0 0 0-.173-.3l-7.656-3.838zm7.307 11.268l-6.9-3.439v-6.928l6.9 3.439z\" transform=\"translate(-.127 -241.794)\"></path><path d=\"M76.457 0a.233.233 0 0 0-.173.05l-7.652 3.838c-.058.05-.115.05-.115.1a.3.3 0 0 0 .115.449l7.652 3.838a.324.324 0 0 0 .345 0l7.652-3.838c.058-.05.115-.05.115-.1a.3.3 0 0 0-.115-.449L76.629.05a.233.233 0 0 0-.172-.05zm0 7.626l-6.9-3.439 6.9-3.439 6.9 3.439z\"></path></g></svg></span>&nbsp;32 MB</span></div><div _ngcontent-cpa-c271=\"\" class=\"assignment-info\" style=\"color: rgb(144, 147, 153); font-size: 12px; line-height: 1.8; display: flex; justify-content: space-between;\"><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div></div><p><one-assignment-info _ngcontent-cpa-c285=\"\" _nghost-cpa-c271=\"\" style=\"color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><matrix-md _ngcontent-cpa-c271=\"\" _nghost-cpa-c238=\"\" class=\"ng-star-inserted\" style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; color: rgb(51, 51, 51); text-size-adjust: 100%; line-height: 1.5; overflow-wrap: break-word;\"></matrix-md></one-assignment-info></p><div _ngcontent-cpa-c238=\"\" class=\"markdown-body new-markdown-style\" markdownid=\"1\" style=\"box-sizing: border-box; margin-top: 0px !important; margin-bottom: 0px !important; font-size: 14px; line-height: 22px; font-weight: 400; color: rgb(89, 89, 89);\"><h2 id=\"1-0-Description题目描述\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Description 题目描述</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Get two character,<span>&nbsp;</span><i style=\"box-sizing: border-box;\">c<sub style=\"box-sizing: border-box; position: relative; font-size: 10.5px; line-height: 0; vertical-align: initial; bottom: -0.25em;\">1</sub></i><span>&nbsp;</span>and<span>&nbsp;</span><i style=\"box-sizing: border-box;\">c<sub style=\"box-sizing: border-box; position: relative; font-size: 10.5px; line-height: 0; vertical-align: initial; bottom: -0.25em;\">2</sub></i>, from the console, and print the ASCII table from<span>&nbsp;</span><i style=\"box-sizing: border-box;\">c<sub style=\"box-sizing: border-box; position: relative; font-size: 10.5px; line-height: 0; vertical-align: initial; bottom: -0.25em;\">1</sub></i><span>&nbsp;</span>to<span>&nbsp;</span><i style=\"box-sizing: border-box;\">c<sub style=\"box-sizing: border-box; position: relative; font-size: 10.5px; line-height: 0; vertical-align: initial; bottom: -0.25em;\">2</sub></i><span>&nbsp;</span>in three columns as follows(split with \\t).</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">给定两个字符，<i style=\"box-sizing: border-box;\">c<sub style=\"box-sizing: border-box; position: relative; font-size: 10.5px; line-height: 0; vertical-align: initial; bottom: -0.25em;\">1</sub></i><span>&nbsp;</span>和<span>&nbsp;</span><i style=\"box-sizing: border-box;\">c<sub style=\"box-sizing: border-box; position: relative; font-size: 10.5px; line-height: 0; vertical-align: initial; bottom: -0.25em;\">2</sub></i>，仿照样例输出的格式打印一个从<i style=\"box-sizing: border-box;\">c<sub style=\"box-sizing: border-box; position: relative; font-size: 10.5px; line-height: 0; vertical-align: initial; bottom: -0.25em;\">1</sub></i><span>&nbsp;</span>到<span>&nbsp;</span><i style=\"box-sizing: border-box;\">c<sub style=\"box-sizing: border-box; position: relative; font-size: 10.5px; line-height: 0; vertical-align: initial; bottom: -0.25em;\">2</sub></i>的表</p><h2 id=\"1-1-SampleInput样例输入\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Input 样例输入</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-addition\" style=\"box-sizing: border-box; color: rgb(57, 115, 0);\">! ~</span>\n</code></pre><h2 id=\"1-2-SampleOutput样例输出\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Output 样例输出</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\">33    !   34  \"   35  #   \n36    $  37  %   38  &amp;   \n39    '   40  (   41  )   \n42    *   43  +   44  ,   \n45    -   46  .   47  /   \n48    0   49  1   50  2   \n51    3   52  4   53  5   \n54    6   55  7   56  8   \n57    9   58  :   59  ;   \n60    &lt;    61  =   62  &gt;    \n63    ?   64  @   65  A   \n66    B   67  C   68  D   \n69    E   70  F   71  G   \n72    H   73  I   74  J   \n75    K   76  L   77  M   \n78    N   79  O   80  P   \n81    Q   82  R   83  S   \n84    T   85  U   86  V   \n87    W   88  X   89  Y   \n90    Z   91  [   92  \\   \n93    ]   94  ^   95  _   \n96    `   97  a   98  b   \n99    c   100 d   101 e   \n102    f   103 g   104 h   \n105    i   106 j   107 k   \n108    l   109 m   110 n   \n111    o   112 p   113 q   \n114    r   115 s   116 t   \n117    u   118 v   119 w   \n120    x   121 y   122 z   \n123    {   124 |   125 }   \n126    ~   </pre></div>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tchar c1, c2;\n\tscanf(\"%c %c\", &c1, &c2);\n\tfor (int i = c1; i <= c2; i += 3) {\n\t\tfor (int j = 0; j < 3 && i + j <= c2; ++ j) \n\t\t\tprintf(\"%d\\t%c\\t\", i+j, i+j);\n\t\tputchar('\\n');\n\t}\n   return 0;\n}\n",
            "from random import randint\nc1 = chr(ord('!')+randint(0,9))\nc2 = chr(ord('~')-randint(0,9))\nprint(c1,c2)",
            1604592000,
            1605790800
        ],
        [
            "2020-midterm-5",
            "<div _ngcontent-cpa-c285=\"\" class=\"assignment-info-header\" style=\"height: 24px; display: flex; flex-direction: row; align-items: flex-end; justify-content: flex-start; margin-bottom: 1rem; margin-top: 1rem; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><span _ngcontent-cpa-c285=\"\" class=\"assignment-title\" style=\"font-size: 16px; color: rgb(0, 0, 0); white-space: nowrap;\">[2020 C Midterm] The repetitive number in a sequence 序列中的重复数字&nbsp;<nz-tag _ngcontent-cpa-c285=\"\" class=\"assignment-judge-type ng-tns-c204-260 ng-trigger ng-trigger-fadeMotion ant-tag\" style=\"color: rgb(0, 153, 153); font-variant-numeric: tabular-nums; font-variant-east-asian: normal; list-style: none; font-feature-settings: &quot;tnum&quot;; display: inline-block; height: auto; margin: 0px 8px 0px 0px; padding: 0px 7px; font-size: 12px; line-height: 20px; background: rgb(230, 249, 246); border: 1px solid rgb(0, 153, 153); border-radius: 4px; cursor: default; opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86) 0s;\">实时评测</nz-tag></span></div><div _ngcontent-cpa-c285=\"\" class=\"assignment-info-extra\" style=\"font-size: 12px; line-height: 24px; display: flex; justify-content: flex-start; flex-wrap: wrap; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\"><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"截止时间\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary ng-star-inserted\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:calendar-deadline\" class=\"anticon anticon-matrix-icons:calendar-deadline\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:calendar-deadline\" aria-hidden=\"true\"><path fill=\"#bfbfbf\" d=\"M14.1 11.915a.209.209 0 0 0-.216.2v.4a.217.217 0 0 0 .432 0v-.4a.208.208 0 0 0-.216-.2zm.021 1.2a.214.214 0 0 0-.251.162.847.847 0 0 1-.851.657H11.3a.2.2 0 1 0 0 .4h1.719a1.273 1.273 0 0 0 1.277-.986.2.2 0 0 0-.172-.231zm-.718-11.908h-1.3V.4a.433.433 0 0 0-.864 0v.81H4.751V.4a.433.433 0 0 0-.864 0v.81h-1.3a2.505 2.505 0 0 0-2.595 2.4v9.99A2.505 2.505 0 0 0 2.587 16h10.811a2.505 2.505 0 0 0 2.595-2.4V3.606a2.5 2.5 0 0 0-2.588-2.397zm-10.811.8h1.3V2.4a.433.433 0 0 0 .864 0v-.391h6.486V2.4a.433.433 0 0 0 .864 0v-.391h1.3a1.671 1.671 0 0 1 1.73 1.6V5.17H.866V3.606a1.669 1.669 0 0 1 1.728-1.6zM13.405 15.2H2.595a1.671 1.671 0 0 1-1.73-1.6V5.57h14.27v8.03a1.667 1.667 0 0 1-1.728 1.6zm-5.843-2.987V7.358A.277.277 0 0 1 7.7 7.11a.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v1.589h1.987a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H8.494v2.406h2.346a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H4.851a.292.292 0 0 1-.269-.133.548.548 0 0 1-.09-.313.474.474 0 0 1 .084-.288.317.317 0 0 1 .276-.128h.781V8.762a.277.277 0 0 1 .138-.248.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v3.452h1zm0 0\"></path></svg></span>&nbsp;2020-11-04 16:30</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"时间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:clock\" class=\"anticon anticon-matrix-icons:clock\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:clock\" aria-hidden=\"true\"><path data-name=\"186\" d=\"M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm0 15.273A7.273 7.273 0 1 1 15.273 8 7.273 7.273 0 0 1 8 15.275zM12 8H8.364V3.275a.364.364 0 0 0-.727 0v5.091a.364.364 0 0 0 .364.364h4a.364.364 0 1 0 0-.727z\" fill=\"#bfbfbf\"></path></svg></span>&nbsp;1000 ms</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"空间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 0px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:cubic\" class=\"anticon anticon-matrix-icons:cubic\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:cubic\" aria-hidden=\"true\"><g transform=\"translate(-68.457)\" fill=\"#bfbfbf\"><path d=\"M500.857 245.632a.233.233 0 0 0-.173.05l-7.652 3.838a.293.293 0 0 0-.173.3v7.676a.313.313 0 0 0 .345.3.233.233 0 0 0 .173-.05l7.652-3.838a.293.293 0 0 0 .173-.3v-7.676a.168.168 0 0 0-.057-.15.326.326 0 0 0-.288-.15zM493.55 256.9v-6.928l6.9-3.439v6.928z\" transform=\"translate(-416.749 -241.794)\"></path><path d=\"M68.931 245.632a.31.31 0 0 0-.345.3v7.676a.412.412 0 0 0 .173.3l7.652 3.838a.233.233 0 0 0 .173.05.31.31 0 0 0 .345-.3v-7.726a.412.412 0 0 0-.173-.3l-7.656-3.838zm7.307 11.268l-6.9-3.439v-6.928l6.9 3.439z\" transform=\"translate(-.127 -241.794)\"></path><path d=\"M76.457 0a.233.233 0 0 0-.173.05l-7.652 3.838c-.058.05-.115.05-.115.1a.3.3 0 0 0 .115.449l7.652 3.838a.324.324 0 0 0 .345 0l7.652-3.838c.058-.05.115-.05.115-.1a.3.3 0 0 0-.115-.449L76.629.05a.233.233 0 0 0-.172-.05zm0 7.626l-6.9-3.439 6.9-3.439 6.9 3.439z\"></path></g></svg></span>&nbsp;32 MB</span></div><div _ngcontent-cpa-c271=\"\" class=\"assignment-info\" style=\"color: rgb(144, 147, 153); font-size: 12px; line-height: 1.8; display: flex; justify-content: space-between;\"><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div></div><p><one-assignment-info _ngcontent-cpa-c285=\"\" _nghost-cpa-c271=\"\" style=\"color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><matrix-md _ngcontent-cpa-c271=\"\" _nghost-cpa-c238=\"\" class=\"ng-star-inserted\" style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; color: rgb(51, 51, 51); text-size-adjust: 100%; line-height: 1.5; overflow-wrap: break-word;\"></matrix-md></one-assignment-info></p><div _ngcontent-cpa-c238=\"\" class=\"markdown-body new-markdown-style\" markdownid=\"1\" style=\"box-sizing: border-box; margin-top: 0px !important; margin-bottom: 0px !important; font-size: 14px; line-height: 22px; font-weight: 400; color: rgb(89, 89, 89);\"><h2 id=\"1-0-Discription题目描述\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Discription 题目描述</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Given an integer sequence, which sorted from smallest to largest, Please assess how many different number are there in a sequence, which numbers repeat, and the largest number with the most repetition? (every number in the sequence is larger than 0)</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">有一个整型序列，按照从小到大的顺序排序，请判断其中有几个不同的数字，几个数字出现了重复，出现次数最多的最大的数字是几？(序列中的数大于0)</p><h2 id=\"1-1-输入\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">输入</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">The number N in first line represents the number of example, there are N lines behind. the first number n in each line represents the size of the sequence, and there is an integer sequence behind.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">第一行的数字N表示测试样例的个数，此后共有N行，每行的第一个数n表示序列中共有几个数字，后面接n个数字表示整型序列</p><h2 id=\"1-2-输出\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">输出</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Output N lines, the first number<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"0\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D434 TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>A</mi></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>in each line represents<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"1\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D434 TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>A</mi></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>different numbers, the second number<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"2\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D435 TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>B</mi></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>represents<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"3\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D435 TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>B</mi></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>different numbers occur, the third number<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"4\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D436 TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>C</mi></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>represents the largest number with the most repetition.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">共输出N行，每行第一个数表示有几个不同的数字，第二个数表示有几个出现重复的数字，第三个数表示出现次数最多的最大数字</p><h2 id=\"1-3-样例输入\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">样例输入</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">7</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">1</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">4</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">10</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">1</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">4</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">6</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">15</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">1</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">1</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">4</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">6</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">6</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">7</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">7</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">23</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">1</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">4</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">6</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">7</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">9</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">10</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">10</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">11</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">11</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">11</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">12</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">13</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">14</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">15</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">17</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">1</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span>\n</code></pre><h2 id=\"1-4-样例输出\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">样例输出</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-symbol\" style=\"box-sizing: border-box; color: rgb(188, 96, 96);\">4 </span><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span>\n<span class=\"hljs-symbol\" style=\"box-sizing: border-box; color: rgb(188, 96, 96);\">6 </span><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span>\n<span class=\"hljs-symbol\" style=\"box-sizing: border-box; color: rgb(188, 96, 96);\">8 </span><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">5</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span>\n<span class=\"hljs-symbol\" style=\"box-sizing: border-box; color: rgb(188, 96, 96);\">15 </span><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">4</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">8</span>\n<span class=\"hljs-symbol\" style=\"box-sizing: border-box; color: rgb(188, 96, 96);\">3 </span><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">0</span> <span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span></code></pre></div>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nvoid test() {\n\tint nums;\n\tscanf(\"%d\", &nums);\n\tint diff_nums = 0;\n\tint rep_nums = 0;\n\tint prev_num = -1;\n\tint cur_rep = 0;\n\tint max_rep = 0;\n\tint max_rep_num = -1;\n\tfor (int i = 0; i < nums; ++ i) {\n\t\tint cur_num;\n\t\tscanf(\"%d\", &cur_num);\n\t\tif (cur_num != prev_num) {\n\t\t\t++ diff_nums;\n\t\t\tcur_rep = 1;\n\t\t}\n\t\telse {\n\t\t\t++ cur_rep;\n\t\t\tif (cur_rep == 2) ++ rep_nums;\n\t\t\tif (cur_rep > max_rep) {\n\t\t\t\tmax_rep = cur_rep;\n\t\t\t\tmax_rep_num = cur_num;\n\t\t\t}\n\t\t}\n\t\tprev_num = cur_num;\n\t}\n\tprintf(\"%d %d %d\\n\", diff_nums, rep_nums, max_rep_num);\n}\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n; ++ i) \n\t\ttest();\n}",
            "from random import randint\nT = randint(3, 7)\nprint(T)\nN = 9\nfor i in range(T):\n\tn = randint(3,N)\n\tnums = list(range(1,N+1))\n\twhile len(nums) > n:\n\t\tk = randint(1,N)\n\t\tif k in nums: nums.remove(k)\n\tnums2 = []\n\ttimes = [0]\n\tfor n in nums:\n\t\tk = randint(1,3)\n\t\twhile k == max(times):\n\t\t\tk += 1\n\t\ttimes.append(k)\n\t\tfor i in range(k):\n\t\t\tnums2.append(n)\n\tprint(len(nums2), ' '.join(str(n) for n in nums2))",
            1604592000,
            1605790800
        ],
        [
            "2020-midterm-6",
            "<div _ngcontent-cpa-c285=\"\" class=\"assignment-info-header\" style=\"height: 24px; display: flex; flex-direction: row; align-items: flex-end; justify-content: flex-start; margin-bottom: 1rem; margin-top: 1rem; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><span _ngcontent-cpa-c285=\"\" class=\"assignment-title\" style=\"font-size: 16px; color: rgb(0, 0, 0); white-space: nowrap;\">[2020 C Midterm] Output 输出&nbsp;<nz-tag _ngcontent-cpa-c285=\"\" class=\"assignment-judge-type ng-tns-c204-273 ng-trigger ng-trigger-fadeMotion ant-tag\" style=\"color: rgb(0, 153, 153); font-variant-numeric: tabular-nums; font-variant-east-asian: normal; list-style: none; font-feature-settings: &quot;tnum&quot;; display: inline-block; height: auto; margin: 0px 8px 0px 0px; padding: 0px 7px; font-size: 12px; line-height: 20px; background: rgb(230, 249, 246); border: 1px solid rgb(0, 153, 153); border-radius: 4px; cursor: default; opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86) 0s;\">实时评测</nz-tag></span></div><div _ngcontent-cpa-c285=\"\" class=\"assignment-info-extra\" style=\"font-size: 12px; line-height: 24px; display: flex; justify-content: flex-start; flex-wrap: wrap; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\"><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"截止时间\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary ng-star-inserted\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:calendar-deadline\" class=\"anticon anticon-matrix-icons:calendar-deadline\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:calendar-deadline\" aria-hidden=\"true\"><path fill=\"#bfbfbf\" d=\"M14.1 11.915a.209.209 0 0 0-.216.2v.4a.217.217 0 0 0 .432 0v-.4a.208.208 0 0 0-.216-.2zm.021 1.2a.214.214 0 0 0-.251.162.847.847 0 0 1-.851.657H11.3a.2.2 0 1 0 0 .4h1.719a1.273 1.273 0 0 0 1.277-.986.2.2 0 0 0-.172-.231zm-.718-11.908h-1.3V.4a.433.433 0 0 0-.864 0v.81H4.751V.4a.433.433 0 0 0-.864 0v.81h-1.3a2.505 2.505 0 0 0-2.595 2.4v9.99A2.505 2.505 0 0 0 2.587 16h10.811a2.505 2.505 0 0 0 2.595-2.4V3.606a2.5 2.5 0 0 0-2.588-2.397zm-10.811.8h1.3V2.4a.433.433 0 0 0 .864 0v-.391h6.486V2.4a.433.433 0 0 0 .864 0v-.391h1.3a1.671 1.671 0 0 1 1.73 1.6V5.17H.866V3.606a1.669 1.669 0 0 1 1.728-1.6zM13.405 15.2H2.595a1.671 1.671 0 0 1-1.73-1.6V5.57h14.27v8.03a1.667 1.667 0 0 1-1.728 1.6zm-5.843-2.987V7.358A.277.277 0 0 1 7.7 7.11a.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v1.589h1.987a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H8.494v2.406h2.346a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H4.851a.292.292 0 0 1-.269-.133.548.548 0 0 1-.09-.313.474.474 0 0 1 .084-.288.317.317 0 0 1 .276-.128h.781V8.762a.277.277 0 0 1 .138-.248.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v3.452h1zm0 0\"></path></svg></span>&nbsp;2020-11-04 16:30</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"时间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:clock\" class=\"anticon anticon-matrix-icons:clock\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:clock\" aria-hidden=\"true\"><path data-name=\"186\" d=\"M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm0 15.273A7.273 7.273 0 1 1 15.273 8 7.273 7.273 0 0 1 8 15.275zM12 8H8.364V3.275a.364.364 0 0 0-.727 0v5.091a.364.364 0 0 0 .364.364h4a.364.364 0 1 0 0-.727z\" fill=\"#bfbfbf\"></path></svg></span>&nbsp;1000 ms</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"空间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 0px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:cubic\" class=\"anticon anticon-matrix-icons:cubic\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:cubic\" aria-hidden=\"true\"><g transform=\"translate(-68.457)\" fill=\"#bfbfbf\"><path d=\"M500.857 245.632a.233.233 0 0 0-.173.05l-7.652 3.838a.293.293 0 0 0-.173.3v7.676a.313.313 0 0 0 .345.3.233.233 0 0 0 .173-.05l7.652-3.838a.293.293 0 0 0 .173-.3v-7.676a.168.168 0 0 0-.057-.15.326.326 0 0 0-.288-.15zM493.55 256.9v-6.928l6.9-3.439v6.928z\" transform=\"translate(-416.749 -241.794)\"></path><path d=\"M68.931 245.632a.31.31 0 0 0-.345.3v7.676a.412.412 0 0 0 .173.3l7.652 3.838a.233.233 0 0 0 .173.05.31.31 0 0 0 .345-.3v-7.726a.412.412 0 0 0-.173-.3l-7.656-3.838zm7.307 11.268l-6.9-3.439v-6.928l6.9 3.439z\" transform=\"translate(-.127 -241.794)\"></path><path d=\"M76.457 0a.233.233 0 0 0-.173.05l-7.652 3.838c-.058.05-.115.05-.115.1a.3.3 0 0 0 .115.449l7.652 3.838a.324.324 0 0 0 .345 0l7.652-3.838c.058-.05.115-.05.115-.1a.3.3 0 0 0-.115-.449L76.629.05a.233.233 0 0 0-.172-.05zm0 7.626l-6.9-3.439 6.9-3.439 6.9 3.439z\"></path></g></svg></span>&nbsp;32 MB</span></div><div _ngcontent-cpa-c271=\"\" class=\"assignment-info\" style=\"color: rgb(144, 147, 153); font-size: 12px; line-height: 1.8; display: flex; justify-content: space-between;\"><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div></div><p><one-assignment-info _ngcontent-cpa-c285=\"\" _nghost-cpa-c271=\"\" style=\"color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><matrix-md _ngcontent-cpa-c271=\"\" _nghost-cpa-c238=\"\" class=\"ng-star-inserted\" style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; color: rgb(51, 51, 51); text-size-adjust: 100%; line-height: 1.5; overflow-wrap: break-word;\"></matrix-md></one-assignment-info></p><div _ngcontent-cpa-c238=\"\" class=\"markdown-body new-markdown-style\" markdownid=\"1\" style=\"box-sizing: border-box; margin-top: 0px !important; margin-bottom: 0px !important; font-size: 14px; line-height: 22px; font-weight: 400; color: rgb(89, 89, 89);\"><h2 id=\"1-0-Description题目描述\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Description 题目描述</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Write a program to output the following text</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">编写一个程序输出下面的文本</p><h2 id=\"1-1-Input输入\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Input 输入</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">None</p><h2 id=\"1-2-Output输出\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Output 输出</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\">\\<span class=\"hljs-string\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">\"%'</span></code></pre></div>",
            "#include \"source.c\"\n",
            "#include <stdio.h>\n\nint main(){\n\tputs(\"\\\\\\\"%'\");\t\n    return 0;\n}",
            "",
            1604592000,
            1605790800
        ],
        [
            "2020-midterm-7",
            "<div _ngcontent-cpa-c285=\"\" class=\"assignment-info-header\" style=\"height: 24px; display: flex; flex-direction: row; align-items: flex-end; justify-content: flex-start; margin-bottom: 1rem; margin-top: 1rem; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><span _ngcontent-cpa-c285=\"\" class=\"assignment-title\" style=\"font-size: 16px; color: rgb(0, 0, 0); white-space: nowrap;\">[2020 C Midterm] Decimal To Other 进制转换&nbsp;<nz-tag _ngcontent-cpa-c285=\"\" class=\"assignment-judge-type ng-tns-c204-286 ng-trigger ng-trigger-fadeMotion ant-tag\" style=\"color: rgb(0, 153, 153); font-variant-numeric: tabular-nums; font-variant-east-asian: normal; list-style: none; font-feature-settings: &quot;tnum&quot;; display: inline-block; height: auto; margin: 0px 8px 0px 0px; padding: 0px 7px; font-size: 12px; line-height: 20px; background: rgb(230, 249, 246); border: 1px solid rgb(0, 153, 153); border-radius: 4px; cursor: default; opacity: 1; transition: all 0.3s cubic-bezier(0.78, 0.14, 0.15, 0.86) 0s;\">实时评测</nz-tag></span></div><div _ngcontent-cpa-c285=\"\" class=\"assignment-info-extra\" style=\"font-size: 12px; line-height: 24px; display: flex; justify-content: flex-start; flex-wrap: wrap; color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif;\"><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"截止时间\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary ng-star-inserted\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:calendar-deadline\" class=\"anticon anticon-matrix-icons:calendar-deadline\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:calendar-deadline\" aria-hidden=\"true\"><path fill=\"#bfbfbf\" d=\"M14.1 11.915a.209.209 0 0 0-.216.2v.4a.217.217 0 0 0 .432 0v-.4a.208.208 0 0 0-.216-.2zm.021 1.2a.214.214 0 0 0-.251.162.847.847 0 0 1-.851.657H11.3a.2.2 0 1 0 0 .4h1.719a1.273 1.273 0 0 0 1.277-.986.2.2 0 0 0-.172-.231zm-.718-11.908h-1.3V.4a.433.433 0 0 0-.864 0v.81H4.751V.4a.433.433 0 0 0-.864 0v.81h-1.3a2.505 2.505 0 0 0-2.595 2.4v9.99A2.505 2.505 0 0 0 2.587 16h10.811a2.505 2.505 0 0 0 2.595-2.4V3.606a2.5 2.5 0 0 0-2.588-2.397zm-10.811.8h1.3V2.4a.433.433 0 0 0 .864 0v-.391h6.486V2.4a.433.433 0 0 0 .864 0v-.391h1.3a1.671 1.671 0 0 1 1.73 1.6V5.17H.866V3.606a1.669 1.669 0 0 1 1.728-1.6zM13.405 15.2H2.595a1.671 1.671 0 0 1-1.73-1.6V5.57h14.27v8.03a1.667 1.667 0 0 1-1.728 1.6zm-5.843-2.987V7.358A.277.277 0 0 1 7.7 7.11a.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v1.589h1.987a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H8.494v2.406h2.346a.311.311 0 0 1 .263.128.548.548 0 0 1 .09.313.474.474 0 0 1-.084.288.31.31 0 0 1-.269.133H4.851a.292.292 0 0 1-.269-.133.548.548 0 0 1-.09-.313.474.474 0 0 1 .084-.288.317.317 0 0 1 .276-.128h.781V8.762a.277.277 0 0 1 .138-.248.669.669 0 0 1 .339-.083.577.577 0 0 1 .311.077.273.273 0 0 1 .144.256v3.452h1zm0 0\"></path></svg></span>&nbsp;2020-11-04 16:30</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"时间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 24px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:clock\" class=\"anticon anticon-matrix-icons:clock\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:clock\" aria-hidden=\"true\"><path data-name=\"186\" d=\"M8 0a8 8 0 1 0 8 8 8 8 0 0 0-8-8zm0 15.273A7.273 7.273 0 1 1 15.273 8 7.273 7.273 0 0 1 8 15.275zM12 8H8.364V3.275a.364.364 0 0 0-.727 0v5.091a.364.364 0 0 0 .364.364h4a.364.364 0 1 0 0-.727z\" fill=\"#bfbfbf\"></path></svg></span>&nbsp;1000 ms</span><span _ngcontent-cpa-c285=\"\" nz-tooltip=\"\" nztooltiptitle=\"空间限制\" nztooltipplacement=\"bottom\" class=\"assignment-info-col primary\" style=\"margin-right: 0px; color: rgb(0, 153, 153);\"><span _ngcontent-cpa-c285=\"\" nz-icon=\"\" nztype=\"matrix-icons:cubic\" class=\"anticon anticon-matrix-icons:cubic\" style=\"display: inline-block; color: inherit; line-height: 0; text-align: center; vertical-align: text-top; text-rendering: optimizelegibility; -webkit-font-smoothing: antialiased; font-size: 16px; margin-right: 4px;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" data-icon=\"matrix-icons:cubic\" aria-hidden=\"true\"><g transform=\"translate(-68.457)\" fill=\"#bfbfbf\"><path d=\"M500.857 245.632a.233.233 0 0 0-.173.05l-7.652 3.838a.293.293 0 0 0-.173.3v7.676a.313.313 0 0 0 .345.3.233.233 0 0 0 .173-.05l7.652-3.838a.293.293 0 0 0 .173-.3v-7.676a.168.168 0 0 0-.057-.15.326.326 0 0 0-.288-.15zM493.55 256.9v-6.928l6.9-3.439v6.928z\" transform=\"translate(-416.749 -241.794)\"></path><path d=\"M68.931 245.632a.31.31 0 0 0-.345.3v7.676a.412.412 0 0 0 .173.3l7.652 3.838a.233.233 0 0 0 .173.05.31.31 0 0 0 .345-.3v-7.726a.412.412 0 0 0-.173-.3l-7.656-3.838zm7.307 11.268l-6.9-3.439v-6.928l6.9 3.439z\" transform=\"translate(-.127 -241.794)\"></path><path d=\"M76.457 0a.233.233 0 0 0-.173.05l-7.652 3.838c-.058.05-.115.05-.115.1a.3.3 0 0 0 .115.449l7.652 3.838a.324.324 0 0 0 .345 0l7.652-3.838c.058-.05.115-.05.115-.1a.3.3 0 0 0-.115-.449L76.629.05a.233.233 0 0 0-.172-.05zm0 7.626l-6.9-3.439 6.9-3.439 6.9 3.439z\"></path></g></svg></span>&nbsp;32 MB</span></div><div _ngcontent-cpa-c271=\"\" class=\"assignment-info\" style=\"color: rgb(144, 147, 153); font-size: 12px; line-height: 1.8; display: flex; justify-content: space-between;\"><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div><div _ngcontent-cpa-c271=\"\" class=\"key-value-column ng-star-inserted\" style=\"display: flex;\"><div _ngcontent-cpa-c271=\"\" class=\"key-col\" style=\"text-align: right;\"></div><div _ngcontent-cpa-c271=\"\" class=\"colon-col\"></div><div _ngcontent-cpa-c271=\"\" class=\"value-col\"></div></div></div><p><one-assignment-info _ngcontent-cpa-c285=\"\" _nghost-cpa-c271=\"\" style=\"color: rgba(0, 0, 0, 0.65); font-family: &quot;Helvetica Neue For Number&quot;, -apple-system, system-ui, &quot;Segoe UI&quot;, Roboto, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 12px;\"><matrix-md _ngcontent-cpa-c271=\"\" _nghost-cpa-c238=\"\" class=\"ng-star-inserted\" style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; color: rgb(51, 51, 51); text-size-adjust: 100%; line-height: 1.5; overflow-wrap: break-word;\"></matrix-md></one-assignment-info></p><div _ngcontent-cpa-c238=\"\" class=\"markdown-body new-markdown-style\" markdownid=\"1\" style=\"box-sizing: border-box; margin-top: 0px !important; margin-bottom: 0px !important; font-size: 14px; line-height: 22px; font-weight: 400; color: rgb(89, 89, 89);\"><h2 id=\"1-0-Problem\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Problem</h2><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Given a number<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"5\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D45B TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"6\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mo class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c28\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c32\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn><mjx-mo class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c3C\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c3D\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mi class=\"mjx-i\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c1D45B TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c3C\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c3D\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c31\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c30\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn><mjx-mo class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c29\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mo stretchy=\"false\">(</mo><mn>2</mn><mo>&lt;=</mo><mi>n</mi><mo>&lt;=</mo><mn>10</mn><mo stretchy=\"false\">)</mo></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>representing the<span>&nbsp;</span><strong style=\"box-sizing: border-box; font-weight: 600;\">number system</strong>.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">For example,<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"7\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c32\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>2</mn></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>represents the<span>&nbsp;</span><strong style=\"box-sizing: border-box; font-weight: 600;\">binary system</strong>,<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"8\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c38\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>8</mn></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>represents the<span>&nbsp;</span><strong style=\"box-sizing: border-box; font-weight: 600;\">octal system</strong>.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">Given a decimal number<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"9\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D45A TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>m</mi></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"10\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mo class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c28\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c30\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn><mjx-mo class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c3C\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c3D\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mi class=\"mjx-i\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c1D45A TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c3C\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c3D\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-msup space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c31\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c30\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn><mjx-script style=\"box-sizing: border-box; vertical-align: 0.393em;\"><mjx-mn class=\"mjx-n\" size=\"s\" style=\"box-sizing: border-box; display: inline-block; text-align: left; font-size: 9.898px;\"><mjx-c class=\"mjx-c39\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn></mjx-script></mjx-msup><mjx-mo class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c29\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mo stretchy=\"false\">(</mo><mn>0</mn><mo>&lt;=</mo><mi>m</mi><mo>&lt;=</mo><msup><mn>10</mn><mn>9</mn></msup><mo stretchy=\"false\">)</mo></math></mjx-assistive-mml></mjx-container>, output it in that number system in<span>&nbsp;</span><strong style=\"box-sizing: border-box; font-weight: 600;\">inverse order</strong>.</p><p style=\"box-sizing: border-box; margin-top: 8px; margin-bottom: 8px;\">给定一个数字<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"11\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D45B TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi><mjx-mo class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c28\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c32\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn><mjx-mo class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c3C\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c3D\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mi class=\"mjx-i\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c1D45B TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c3C\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c3D\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mn class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c31\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c30\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn><mjx-mo class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c29\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>n</mi><mo stretchy=\"false\">(</mo><mn>2</mn><mo>&lt;=</mo><mi>n</mi><mo>&lt;=</mo><mn>10</mn><mo stretchy=\"false\">)</mo></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>代表进制。 例如，<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"12\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c32\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>2</mn></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>代表二进制<span>&nbsp;</span><mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"13\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c38\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mn>8</mn></math></mjx-assistive-mml></mjx-container><span>&nbsp;</span>代表八进制 给定十进制的数字<mjx-container class=\"MathJax CtxtMenu_Attached_0\" jax=\"CHTML\" role=\"presentation\" tabindex=\"0\" ctxtmenu_counter=\"14\" style=\"box-sizing: border-box; line-height: 0; position: relative;\"><mjx-math class=\"MJX-TEX\" aria-hidden=\"true\" style=\"box-sizing: border-box; display: inline-block; text-align: left; line-height: 0; text-indent: 0px; font-style: normal; font-weight: normal; font-size: 14px; letter-spacing: normal; overflow-wrap: normal; word-spacing: normal; white-space: nowrap; direction: ltr; padding: 1px 0px; font-family: MJXZERO, MJXTEX;\"><mjx-mi class=\"mjx-i\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c1D45A TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi><mjx-mo class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c28\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c30\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn><mjx-mo class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c3C\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c3D\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-mi class=\"mjx-i\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c1D45A TEX-I\" style=\"box-sizing: border-box; display: inline-block; font-family: MJXZERO, MJXTEX-I;\"></mjx-c></mjx-mi><mjx-mo class=\"mjx-n\" space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-c class=\"mjx-c3C\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c3D\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo><mjx-msup space=\"4\" style=\"box-sizing: border-box; display: inline-block; text-align: left; margin-left: 0.278em;\"><mjx-mn class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c31\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c><mjx-c class=\"mjx-c30\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn><mjx-script style=\"box-sizing: border-box; vertical-align: 0.393em;\"><mjx-mn class=\"mjx-n\" size=\"s\" style=\"box-sizing: border-box; display: inline-block; text-align: left; font-size: 9.898px;\"><mjx-c class=\"mjx-c39\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mn></mjx-script></mjx-msup><mjx-mo class=\"mjx-n\" style=\"box-sizing: border-box; display: inline-block; text-align: left;\"><mjx-c class=\"mjx-c29\" style=\"box-sizing: border-box; display: inline-block;\"></mjx-c></mjx-mo></mjx-math><mjx-assistive-mml role=\"presentation\" unselectable=\"on\" display=\"inline\" style=\"box-sizing: border-box; top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); user-select: none; position: absolute !important; padding: 1px 0px 0px !important; border: 0px !important; display: block !important; width: auto !important; overflow: hidden !important;\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>m</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo>&lt;=</mo><mi>m</mi><mo>&lt;=</mo><msup><mn>10</mn><mn>9</mn></msup><mo stretchy=\"false\">)</mo></math></mjx-assistive-mml></mjx-container>，转换进制并逆序输出。</p><h2 id=\"1-1-SampleInput1\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Input 1</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">2</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">16</span>\n</code></pre><h2 id=\"1-2-SampleOutput1\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Output 1</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">00001</span>\n</code></pre><h2 id=\"1-3-SampleInput2\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Input 2</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">3</span>\n<span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">26</span>\n</code></pre><h2 id=\"1-4-SampleOutput2\" style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 8px; color: rgb(38, 38, 38); font-weight: 400; padding-bottom: 0.3em; font-size: 18px; border-bottom: 1px solid rgb(238, 238, 238); line-height: 26px;\">Sample Output 2</h2><pre style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; margin-top: 0px; margin-bottom: 16px; overflow: auto; overflow-wrap: normal; border: 0px; padding: 16px; line-height: 1.45; background-color: rgb(247, 247, 247); border-radius: 3px;\"><code class=\"hljs\" style=\"box-sizing: border-box; font-size: 11.9px; font-family: Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; display: inline; overflow: visible; padding: 0px; background: initial; color: inherit; margin: 0px; border-radius: 3px; word-break: normal; white-space: pre; border: 0px; line-height: inherit; overflow-wrap: normal;\"><span class=\"hljs-number\" style=\"box-sizing: border-box; color: rgb(136, 0, 0);\">222</span></code></pre></div>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint radix;\n\tscanf(\"%d\", &radix);\n\tint number;\n\tscanf(\"%d\", &number);\n\tdo {\n\t\tprintf(\"%d\", number % radix);\n\t\tnumber /= radix;\n\t} while (number > 0);\n}\n",
            "from random import randint\nprint(randint(2,16))\nprint(randint(10,1000))",
            1604592000,
            1605790800
        ],
        [
            "5.11",
            "<p>EXMAPLE INPUT</p><p>8<br></p><p>EXAMPLE OUTPUT</p>\n<pre>\\++++++/\n*\\++++/*\n**\\++/**\n***\\/***\n***/\\***\n**/++\\**\n*/++++\\*\n/++++++\\\n</pre>",
            "#include \"source.c\"",
            "#include <stdio.h>\n\nint main() {\n\tint n;\n\tscanf(\"%d\", &n);\n\tfor (int i = 0; i < n / 2; ++ i) {\n\t\tfor (int j = 0; j < i; ++ j) {\n\t\t\tputchar('*');\n\t\t}\n\t\tputchar('\\\\');\n\t\tfor (int j = 0; j < n - 1 - i * 2 - 1; ++ j) {\n\t\t\tputchar('+');\n\t\t}\n\t\tputchar('/');\n\t\tfor (int j = 0; j < i; ++ j) {\n\t\t\tputchar('*');\n\t\t}\n\t\tputchar('\\n');\n\t}\n\tfor (int i = 0; i < n / 2; ++ i) {\n\t\tfor (int j = 0; j < n / 2 - i - 1; ++ j) {\n\t\t\tputchar('*');\n\t\t}\n\t\tputchar('/');\n\t\tfor (int j = 0; j < i * 2; ++ j) {\n\t\t\tputchar('+');\n\t\t}\n\t\tputchar('\\\\');\n\t\tfor (int j = 0; j < n / 2 - i - 1; ++ j) {\n\t\t\tputchar('*');\n\t\t}\n\t\tputchar('\\n');\n\t}\n}",
            "from random import randint\nprint(2*randint(4, 10))",
            1605248400,
            1605254400
        ],
        [
            "7.22 Sort pointers",
            "读入一行单词，按字典顺序排序输出。<br>\n本题要求写一个程序以排序一个指针的数组，请阅读主程序以理解题目。<br>\n本题要求自己理解题目，请勿询问题意。<br>\n<br>\n<b>EAMPLE INPUT</b>\n<pre>txnwvt kzokrb rhsc roiytgr mkucb anmrw hlu mwv \nyqaxlfx bopjwcd kiflbl stgn zvfbldb ikr ytskacd yestk movw \nhlpnjl gmqqwtu txh grjk fif znwsu mesjri \ndpnop kvm qtz uinrs rip hnzw nflhk ybc \nnklmhv rhjoj ffkkg amewb iqqxwc pkazcw sdy \njlbmeev bpv pspl njodkl npqip ijwq ykikbdf jmtyclr \njsxp mgqe clcpto yjvrvmv xbbygoc ggr rkogpoi ctar aliqzqz \noehiuv zxraoay stevin rtz xdammz hlxe sfvn ozfpyjk qribzbs \nkwwa cqms cusm jdjaq xou saaele mfmhqg zyhfiu sfne \nkca dtnqhs vapfnz ydfoann gxexhl ipfw dflif ylte \n</pre>\n\n<b>EAMPLE OUTPUT</b>\n<pre>anmrw hlu kzokrb mkucb mwv rhsc roiytgr txnwvt\nbopjwcd ikr kiflbl movw stgn yestk yqaxlfx ytskacd zvfbldb\nfif gmqqwtu grjk hlpnjl mesjri txh znwsu\ndpnop hnzw kvm nflhk qtz rip uinrs ybc\namewb ffkkg iqqxwc nklmhv pkazcw rhjoj sdy\nbpv ijwq jlbmeev jmtyclr njodkl npqip pspl ykikbdf\naliqzqz clcpto ctar ggr jsxp mgqe rkogpoi xbbygoc yjvrvmv\nhlxe oehiuv ozfpyjk qribzbs rtz sfvn stevin xdammz zxraoay\ncqms cusm jdjaq kwwa mfmhqg saaele sfne xou zyhfiu\ndflif dtnqhs gxexhl ipfw kca vapfnz ydfoann ylte\n</pre>",
            "#include <stdio.h>\n#include \"source.c\"\n\nint get_line(char buf[], int max) {\n\tint i = 0;\n\tfor (i = 0; i < max - 1; ++ i) {\n\t\tint c = getchar();\n\t\tif (c == -1 || c == '\\n' || c == '\\r') break;\n\t\tbuf[i] = c;\n\t}\n\tbuf[i] = 0;\n\treturn i;\n}\n\n/*\nEach `words[i]' will point to the first character of the i-th word\n`count' will be the total number of words in `line' \n*/\nint set_pointers_to_words(char line[], char * words[], int max) {\n\tint count = 0;\n\tfor (int i = 0; line[i] != 0 && count < max; ++ i) {\n\t\tif (line[i] != ' ' && (i == 0 || line[i - 1] == ' '))\n\t\t\twords[count ++] = line + i;\n\t}\n\treturn count;\n}\n\n/*\nPrint a number of `num_words' words\nEach `words[i]' points to the first charater of the i-th word\n*/\nvoid print_words(char * words[], int num_words) {\n\tfor (int i = 0; i < num_words; ++ i) {\n\t\tif (i > 0) putchar(' ');\n\t\tchar * w = words[i];\n\t\twhile (*w != 0 && *w != ' ') putchar(*w++);\n\t}\n\tputchar('\\n');\n}\n\nvoid test() {\n\tchar line[100];\n\tget_line(line, 100);\n\tchar * words[10];\n\tint num_words = set_pointers_to_words(line, words, 10);\n\tsort_words(words, num_words);\n\tprint_words(words, num_words);\n}\n\nint main() {\n\tfor (int i = 0; i < 10; ++ i) \n\t\ttest();\n}",
            "int compare(char * s1, char * s2) {\n\tfor (int i = 0; ; ++ i) {\n\t\tchar c1 = s1[i];\n\t\tchar c2 = s2[i];\n\t\tif (c1 == ' ') c1 = 0;\n\t\tif (c2 == ' ') c2 = 0;\n\t\tif (c1 > c2) return 1;\n\t\tif (c1 < c2) return -1;\n\t\tif (c1 == 0) return 0;\n\t}\n}\n\nvoid sort_words(char * words[], int num_words) {\n\tfor (int i = 0; i < num_words - 1; ++ i) {\n\t\tfor (int j = 0; j < num_words-1-i; ++ j) {\n\t\t\tif (compare(words[j], words[j+1]) > 0) {\n\t\t\t\tchar * temp = words[j];\n\t\t\t\twords[j] = words[j+1];\n\t\t\t\twords[j+1] = temp;\n\t\t\t}\n\t\t}\n\t}\n}",
            "from random import randint\n\ndef rand_str():\n\ts = 'abcdefghijklmnopqrstuvwxyz'\n\tk = randint(3,7)\n\treturn ''.join(s[randint(0,3)] for i in range(k))\n\ndef print1():\n\tn = randint(7,9)\n\tfor i in range(n):\n\t\tprint(rand_str(), end=' ')\n\tprint()\n\t\t\nfor i in range(10):\n\tprint1()",
            1607049600,
            1607605200
        ],
        [
            "7.23 Matrix",
            "课件中最后一个程序例子，定义了一些矩阵的操作(print2d,fill2d)。<br>\n能否把这个程序改得更好？我们可以把跟一个矩阵相关的3个数据(height,width,array2)定义为一个复合数据类型。<br>\n在本题中，请根据主函数把课件中的这个例子进行修改。<br>\n<br>\n注意：这个例子实际上展示了面向对象程序设计: \n<ul>\n<li>把矩阵定义为一个类型(Matrix)\n</li><li>并定义操作这个类型的一系列函数(make2d,print2d,fill2d,free2d)</li>\n</ul>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>888.00 888.00 888.00 888.00 888.00 \n888.00 888.00 888.00 888.00 888.00 \n888.00 888.00 888.00 888.00 888.00 \n888.00 888.00 888.00 888.00 888.00\n</pre>",
            "#include <stdio.h>\n#include <stdlib.h>\n\ntypedef struct {\n\tdouble ** array2;\n\tint height;\n\tint width;\n} Matrix;\n\nMatrix make2d(int height, int width) {\n\tMatrix m;\n\tm.height = height;\n\tm.width = width;\n\tm.array2 = (double **)malloc(height * sizeof(double*));\n\tfor (int i = 0; i < height; ++ i)\n\t\tm.array2[i] = (double *)malloc(width * sizeof(double));\n\treturn m;\n}\n\nvoid free2d(Matrix m) {\n\tfor (int i = 0; i < m.height; ++ i) free(m.array2[i]);\n\tfree(m.array2);\n\tm.array2 = 0;\n}\n\n// 请编写 fill2d 和 print2d\n#include \"source.c\" \n\nint main()\n{\n\tMatrix m = make2d(4, 5);\n\tfill2d(m, 888);\n\tprint2d(m);\n\tfree2d(m);\n}",
            "void fill2d(Matrix m, double val) {\n\tfor (int i = 0; i < m.height; ++ i) {\n\t\tfor (int j = 0; j < m.width; ++ j)\n\t\t\tm.array2[i][j] = val;\n\t}\n}\n\nvoid print2d(Matrix m) {\n\tfor (int i = 0; i < m.height; ++ i) {\n\t\tfor (int j = 0; j < m.width; ++ j)\n\t\t\tprintf(\"%.2lf \", m.array2[i][j]);\n\t\tputchar('\\n');\n\t}\n}",
            "",
            1607481600,
            1607605200
        ]
    ],
    "table_name": "题目"
}