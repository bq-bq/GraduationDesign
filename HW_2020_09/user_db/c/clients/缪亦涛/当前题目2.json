{
    "__update_time__": 1608089972.864663,
    "field_names": [
        "题目名",
        "问题",
        "主程序",
        "答案",
        "评语",
        "开始时间",
        "截止时间",
        "分数",
        "提交时间"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "text",
        "text",
        "time",
        "time",
        "number",
        "time"
    ],
    "rows": [
        [
            "9.2 Subsequence",
            "<h3>Longest common subsequence problem (最长公共字串)</h3>\n\n如果字符串一的所有字符按其在字符串中的顺序出现在另外一个字符串二中，则字符串一称之为字符串二的子串。注意，并不要求子串（字符串一）的字符必须连续出现在字符串二中。请编写一个函数，输入两个字符串，求它们的最长公共子序列，并打印出最长公共子序列。<br><br>\n\n例如：输入两个字符串BDCABA和ABCBDAB，字符串BCBA和BDAB都是是它们的最长公共子序列，则输出它们的长度4。<br><br>\n\n当然这里，我们也是要先找递归的。假设我的两个sequence，一个是X，长度为n；另一个是Y，长度为m。\n现在假设我有两个point，一个是i，指在X的最后一个元素上，另一个是j，指在Y的最后一个元素上。我们的递归应该是分三种情况的。\n<ol>\n<li>如果X[i] == Y[j] 那么LCS(X[0:i],Y[0:j]) = LCS(X[0:i-1],Y[0:j-1]) + 1<br>\n这个很明显，因为发现了一组公共元素，就看剩下的有多少公共元素。</li>\n\n<li>如果X[i] != Y[j] 那么 LCS(X[0:i],Y[0:j]) = max( LCS(X[0:i-1], Y[0:j]), LCS(X[0:i], Y[0:j-1]) )<br>\n这个其实也很容易相同，就是如果发现不同的，就去掉X或Y的最后一个，然后和另一个完整的比较，这样去掉X还是Y的最后一个，就有两种可能，所以就是要找中间max的一个。</li>\n\n<li>如果 i=0 或者 j=0，就return 0<br>\n因为有一个sequence已经完了。</li>\n\n</ol>\n\n<b><u>EXAMPLE INPUT</u></b>\n<pre>\nBDCABA\nABCBDAB\n</pre>\n\n<b><u>EXAMPLE OUTPUT</u></b>\n<pre>\n4\n</pre>",
            "#include \"source.c\"\n\n#include <stdio.h>\n\nint main() {\n\tchar text1[100];\n\tchar text2[100];\n\tscanf(\"%s\", text1);\n\tscanf(\"%s\", text2);\n\t\n\tprintf(\"%d\", LCS(text1, text2));\n}",
            "#include<string.h>\nint LCS(char text1[],char text2[])\n{\n\tint x=strlen(text1),y=strlen(text2),n=0;\n\twhile(x>0&&y>0)\n\t{\n\t\tif(text1[x-1]==text2[y-1])n++,x--,y--;\n\t\telse\n\t\t{\n\t\t\tchar text3[x],text4[y];\n\t\t\tstrcpy(text3,text1);\n\t\t\tstrcpy(text4,text2);\n\t\t\ttext3[x-1]=0,text4[y-1]=0;\n\t\t\tif(LCS(text3,text2)>LCS(text1,text4))\n\t\t\t{\n\t\t\t\tn=LCS(text3,text2);\n\t\t\t\tx--;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tn=LCS(text1,text4);\n\t\t\t\ty--;\n\t\t\t}\n\t\t}\n\t}\n\treturn n;\n}",
            "# 答案不正确\n\n# 随机输入:\nROZSXK\nROTZESFXC\n\n\n# 参考答案:\n5\n\n# 我的答案:\n1",
            1607654400,
            1608210000,
            100,
            1608089915.1161213
        ]
    ]
}