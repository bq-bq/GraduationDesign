{
    "__update_time__": 1588913433.0369613,
    "field_names": [
        "题目名",
        "用户名",
        "答案",
        "提交时间",
        "分数",
        "评语"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "time",
        "number",
        "text"
    ],
    "foreign_keys": {},
    "primary_keys": [],
    "rows": [
        [
            "1.1 (C++)",
            "test",
            "#include <iostream>\nusing namespace std;\n\nint main() { \n\tcout << ENDL;\n}",
            1588254346.952519,
            0,
            "In file included from main.cpp:1:\n./source.cpp:5:10: error: use of undeclared identifier 'ENDL'\n        cout << ENDL;\n                ^\nmain.cpp:5:12: error: unknown type name 'Matrix5x5'\nvoid print(Matrix5x5 & matrix) {\n           ^\nmain.cpp:14:5: error: redefinition of 'main'\nint main() {\n    ^\n./source.cpp:4:5: note: previous definition is here\nint main() { \n    ^\nmain.cpp:15:2: error: unknown type name 'Matrix5x5'\n        Matrix5x5 m1, m2, m3;\n        ^\nmain.cpp:22:2: error: use of undeclared identifier 'm2'\n        m2.set(0, 0, value);\n        ^\nmain.cpp:24:2: error: use of undeclared identifier 'm2'\n        m2.set(3, 3, value);\n        ^\nmain.cpp:25:2: error: use of undeclared identifier 'm3'\n        m3 = m1 + m2;\n        ^\nmain.cpp:25:12: error: use of undeclared identifier 'm2'\n        m3 = m1 + m2;\n                  ^\nmain.cpp:26:8: error: use of undeclared identifier 'm3'\n        print(m3);\n              ^\n9 errors generated.\n"
        ],
        [
            "测试1",
            "麦子丰",
            "#include <iostream>\nusing namespace std;\n#define MAX 100\n\nint main(){\n    char str[3][MAX];\n    for(int i = 0; i < 3; ++i)\n        cin>>str[i];\n    cout<<str[2]<<' ';\n    cout<<str[0]<<' '<<str[0]<<' '<<endl;\n    cout<<endl;\n    return 0;\n}",
            1587512413.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "test",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tcout << \"Today is 🥶\";\t\n}",
            1587602624.8600738,
            50,
            "# 答案不正确\n\n# 随机输入:\nCPOQU DDDOR IFAVN\n\n# 参考答案:\nIFAVN DDDOR CPOQU\n\n# 我的答案:\nToday is 🥶"
        ],
        [
            "测试1",
            "韦媛馨",
            "#include<iostream>\nusing namespace std;\nint main(){\n\tstring s1,s2,s3;\n\tcin>>s1>>s2>>s3;\n\tcout<<s3<<\" \"<<s2<<\" \"<<s1;\n}",
            1587515210.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "施天予",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main() {\n    string a,b,c;\n    cin>>a>>b>>c;\n    cout<<c<<\" \"<<b<<\" \"<<a;\n}",
            1587517248.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "马超",
            "#include <iostream>\nusing namespace std;\nint main() {\n\tchar * s1[100];\n\tchar * s2[100];\n\tchar * s3[100];\n\tcin >> s1 >> s2 >> s3;\n\tcout << s3 << s2 << s1;\n}",
            1587516227.0,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In function ‘int main()’:\nsource.cpp:7:6: error: no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [100]’)\n  cin >> s1 >> s2 >> s3;\n      ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:168:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(bool& __n)\n       ^\n/usr/include/c++/5/istream:168:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid initialization of non-const reference of type ‘bool&’ from an rvalue of type ‘bool’\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:172:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>] <near match>\n       operator>>(short& __n);\n       ^\n/usr/include/c++/5/istream:172:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid conversion from ‘char**’ to ‘short int’ [-fpermissive]\n  cin >> s1 >> s2 >> s3;\n         ^\nsource.cpp:7:9: error: cannot bind rvalue ‘(short int)((long int)(& s1))’ to ‘short int&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:175:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned short& __n)\n       ^\n/usr/include/c++/5/istream:175:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid conversion from ‘char**’ to ‘short unsigned int’ [-fpermissive]\n  cin >> s1 >> s2 >> s3;\n         ^\nsource.cpp:7:9: error: cannot bind rvalue ‘(short unsigned int)((long int)(& s1))’ to ‘short unsigned int&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:179:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>] <near match>\n       operator>>(int& __n);\n       ^\n/usr/include/c++/5/istream:179:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid conversion from ‘char**’ to ‘int’ [-fpermissive]\n  cin >> s1 >> s2 >> s3;\n         ^\nsource.cpp:7:9: error: cannot bind rvalue ‘(int)((long int)(& s1))’ to ‘int&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:182:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned int& __n)\n       ^\n/usr/include/c++/5/istream:182:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid conversion from ‘char**’ to ‘unsigned int’ [-fpermissive]\n  cin >> s1 >> s2 >> s3;\n         ^\nsource.cpp:7:9: error: cannot bind rvalue ‘(unsigned int)((long int)(& s1))’ to ‘unsigned int&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:186:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(long& __n)\n       ^\n/usr/include/c++/5/istream:186:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid conversion from ‘char**’ to ‘long int’ [-fpermissive]\n  cin >> s1 >> s2 >> s3;\n         ^\nsource.cpp:7:9: error: cannot bind rvalue ‘(long int)(& s1)’ to ‘long int&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:190:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned long& __n)\n       ^\n/usr/include/c++/5/istream:190:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid conversion from ‘char**’ to ‘long unsigned int’ [-fpermissive]\n  cin >> s1 >> s2 >> s3;\n         ^\nsource.cpp:7:9: error: cannot bind rvalue ‘(long unsigned int)(& s1)’ to ‘long unsigned int&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:195:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(long long& __n)\n       ^\n/usr/include/c++/5/istream:195:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid conversion from ‘char**’ to ‘long long int’ [-fpermissive]\n  cin >> s1 >> s2 >> s3;\n         ^\nsource.cpp:7:9: error: cannot bind rvalue ‘(long long int)(& s1)’ to ‘long long int&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:199:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned long long& __n)\n       ^\n/usr/include/c++/5/istream:199:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid conversion from ‘char**’ to ‘long long unsigned int’ [-fpermissive]\n  cin >> s1 >> s2 >> s3;\n         ^\nsource.cpp:7:9: error: cannot bind rvalue ‘(long long unsigned int)(& s1)’ to ‘long long unsigned int&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:235:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(void*& __p)\n       ^\n/usr/include/c++/5/istream:235:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: invalid initialization of non-const reference of type ‘void*&’ from an rvalue of type ‘void*’\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:120:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(__istream_type& (*__pf)(__istream_type&))\n       ^\n/usr/include/c++/5/istream:120:7: note:   no known conversion for argument 1 from ‘char* [100]’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’\n/usr/include/c++/5/istream:124:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]\n       operator>>(__ios_type& (*__pf)(__ios_type&))\n       ^\n/usr/include/c++/5/istream:124:7: note:   no known conversion for argument 1 from ‘char* [100]’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’\n/usr/include/c++/5/istream:131:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(ios_base& (*__pf)(ios_base&))\n       ^\n/usr/include/c++/5/istream:131:7: note:   no known conversion for argument 1 from ‘char* [100]’ to ‘std::ios_base& (*)(std::ios_base&)’\n/usr/include/c++/5/istream:214:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(float& __f)\n       ^\n/usr/include/c++/5/istream:214:7: note:   no known conversion for argument 1 from ‘char* [100]’ to ‘float&’\n/usr/include/c++/5/istream:218:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(double& __f)\n       ^\n/usr/include/c++/5/istream:218:7: note:   no known conversion for argument 1 from ‘char* [100]’ to ‘double&’\n/usr/include/c++/5/istream:222:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(long double& __f)\n       ^\n/usr/include/c++/5/istream:222:7: note:   no known conversion for argument 1 from ‘char* [100]’ to ‘long double&’\n/usr/include/c++/5/istream:259:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]\n       operator>>(__streambuf_type* __sb);\n       ^\n/usr/include/c++/5/istream:259:7: note:   no known conversion for argument 1 from ‘char* [100]’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1441:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator>>(basic_istream<_CharT, _Traits>& __in,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1441:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: note:   mismatched types ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘char* [100]’\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/istream:934:0,\n                 from /usr/include/c++/5/iostream:40,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/istream.tcc:955:5: note: candidate: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)\n     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)\n     ^\n/usr/include/c++/5/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: note:   deduced conflicting types for parameter ‘_CharT2’ (‘char’ and ‘char*’)\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/istream:934:0,\n                 from /usr/include/c++/5/iostream:40,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/istream.tcc:923:5: note: candidate: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)\n     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)\n     ^\n/usr/include/c++/5/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘char* [100]’)\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:756:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)\n     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)\n     ^\n/usr/include/c++/5/istream:756:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: note:   cannot convert ‘s1’ (type ‘char* [100]’) to type ‘unsigned char&’\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:761:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)\n     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)\n     ^\n/usr/include/c++/5/istream:761:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: note:   cannot convert ‘s1’ (type ‘char* [100]’) to type ‘signed char&’\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:803:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)\n     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)\n     ^\n/usr/include/c++/5/istream:803:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: note:   cannot convert ‘s1’ (type ‘char* [100]’) to type ‘unsigned char*’\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:808:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)\n     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)\n     ^\n/usr/include/c++/5/istream:808:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: note:   cannot convert ‘s1’ (type ‘char* [100]’) to type ‘signed char*’\n  cin >> s1 >> s2 >> s3;\n         ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:924:5: note: candidate: std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&&, _Tp&) [with _CharT = char; _Traits = std::char_traits<char>; _Tp = char* [100]] <near match>\n     operator>>(basic_istream<_CharT, _Traits>&& __is, _Tp& __x)\n     ^\n/usr/include/c++/5/istream:924:5: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:1:0:\nsource.cpp:7:9: error: cannot bind ‘std::istream {aka std::basic_istream<char>}’ lvalue to ‘std::basic_istream<char>&&’\n  cin >> s1 >> s2 >> s3;\n         ^\n"
        ],
        [
            "测试1",
            "王筝",
            "#include <iostream>\n\n#include <string>\n#include <cstring>\nusing namespace std;\n\nint main(){\n    string s[3];\n    cin >> s[0] >> s[1] >> s[2];\n    cout << s[2] <<\" \"<<s[1]<<\" \"<<s[0]<< endl;\n    return 0;\n}",
            1587519610.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "马浩宇",
            "#include <iostream>\nusing namespace std;\n\nint main () {\n    string a, b, c;\n    cin >> a >> b >> c;\n    cout << c << ' ' << b << ' ' << a << endl;\n}",
            1587516671.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王彬",
            "#include<iostream>\nusing namespace std;\n\nint main()\n{\n\tstring str1, str2, str3;\n\tcin >> str1 >> str2 >> str3;\n\tcout << str3 << \" \" << str2 << \" \" << str1 << endl;\n\treturn 0;\n}",
            1587516707.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "容浩民",
            "#include <iostream>\n#include <string>\n#include <sstream>\nusing namespace std;\ntypedef long long ll;\nconst int N = 2e5 + 5;\n#define INF 0x3f3f3f3f\n\n\nstring s;\nint main(){\n    getline(cin, s);\n    stringstream ss(s) ;\n    string a[5];\n    for(int i = 1;i <= 3;i++){\n        ss >> a[i];\n    }\n    for(int i = 3;i >= 1;i--){\n        cout << a[i] << ' ';\n    }\n    cout << endl;\n}\n\n    \n    ",
            1587517009.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王芯芸",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n    string str1, str2, str3;\n    cin >> str1 >> str2 >> str3;\n    cout << str3 << \" \" << str2 << \" \" << str1;\n    return 0;\n}",
            1587517243.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "廖雨轩",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n    string input[3];\n    for (int i = 0; i < 3; ++i)\n        cin >> input[i];\n    string tmp = input[0];\n    input[0] = input[2];\n    input[2] = tmp;\n    for (int i = 0; i < 3; ++i)\n    {\n        cout << input[i];\n        if(i != 2)\n            cout << \" \";\n    }\n\n    return 0;\n}\n\n",
            1587517894.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "许遵楠",
            "#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n\tstring w1, w2, w3;\n\tcin >> w1 >> w2 >> w3;\n\tcout << w3 << ' ' << w2 << ' ' << w1;\n\treturn 0;\n}",
            1587517955.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "孙奥远",
            "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n\tstring s1,s2,s3;\n\tcin >> s1 >> s2 >> s3;\n\tcout << s3 << \" \" << s2 << \" \" << s1 << endl;\n\treturn 0;\n}",
            1587519205.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "周琨曜",
            "#include<iostream>\n#include<string>\n#include<sstream>\n#include<list>\nusing std::string;\nusing std::cout;\nusing std::cin;\nusing std::endl;\nusing std::list;\nusing std::flush;\nusing std::istringstream;\n int main()\n {\n\t string line,word;\n\t list<string> s1;\n\t getline(cin,line);\n\t istringstream stream(line);\n\t while(stream>>word)\n\t\t {\n\t\t\t s1.push_front(word);\n\t\t }\n\t cout<<endl;\n\t for(list<string>::iterator it=s1.begin();it!=s1.end();++it)\n\t {   \t\t \n\t\t     cout<<*it<<\" \"<<flush;\t \n\t }\n\t return 0;\n }",
            1587519318.0,
            0,
            "Invalid include: <list>"
        ],
        [
            "测试1",
            "潘小健",
            "#include <iostream>\n#include<string>\nusing namespace std;\nint main() {\n\tstring a[3];\n\tfor (int i = 0; i < 3; ++ i)\n\t\tcin >> a[i];\n\tfor (int i = 2; i >=0 ; --i)\n\t\tcout << a[i] <<' ';\n}",
            1587519618.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "青悦",
            "#include <iostream>\n#define MAXSIZE 20\nusing namespace std;\nint main() {\n\tchar words[3][MAXSIZE];\n\tfor(int i = 0; i < 3; i++){\n\t\tcin >> words[i];\n\t}\n\tfor (int i = 2; i >= 0 ; i--){\n\t\tcout << words[i] << ' ';\n\t} \n}",
            1587519847.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王志文",
            "#include <iostream>\nusing namespace std;\nint main() {\n\tchar a[20] = {0};\n\tchar b[20] = {0};\n\tchar c[20] = {0};\n\tcin >> a >> b >> c;\n\tcout << c << ' ' << b << ' ' << a;\n}\n",
            1587551544.9701614,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王冠权",
            "#include<iostream> #include<string> using namespace std; int main(){ string c1,c2,c3; cin >> c1 >> c2 >> c3; cout<< c3 <<\" \"<< c2 <<\" \"<< c1 << endl; return 0; }",
            1587520171.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "吴渝峰",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tstring a1, a2, a3;\n\tcin >> a1 >> a2 >> a3;\n\tcout << a3 << \" \" << a2 << \" \" << a1 << endl;\n\treturn 0;\n}",
            1587520504.0,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "杨宗恺",
            "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    char s1[100];\n    char s2[100];\n    char s3[100];\n    cin >> s1 >> s2 >> s3;\n    cout << s3 << \" \" << s2 << \" \" << s1 << endl;\n}\n",
            1587522164.6624973,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "欧阳蓓",
            "#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n\tstring s1;\n\tstring s2;\n\tstring s3;\n\tcin >> s3;\n\tcin >> s2;\n\tcin >> s1;\n\tcout << s1 << \" \" << s2 << \" \" << s3;\n}",
            1587522673.9416633,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "谭鸿鑫",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tstring s1, s2, s3;\n\tcin >> s1 >> s2 >> s3;\n\tcout << s3 << ' ' << s2 << ' ' << s1;\n}",
            1587523022.5621154,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "唐浩",
            "#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n    string str ,f,g;\n    cin>>str;\n    cin>>f;\n    cin>>g;\n    cout<<g<<' '<<f<<' '<<str<<endl;\n}",
            1587609741.9477587,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "潘思晗",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n\tstring s1,s2,s3;\n\tcin >> s1 >> s2 >> s3;\n\tcout << s3 << ' ' << s2 << ' ' << s1;\n}",
            1587523724.0988255,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "唐晨轩",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main(){\n\tchar a[10] = {0}, b[10] = {0}, c[10] = {0};\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tcout << c << ' ';\n\tcout << b << ' ';\n\tcout << a;\n} ",
            1587609088.301908,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "莫振威",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n    string s1, s2, s3;\n    cin >> s1 >> s2 >> s3;\n    cout << s3 << \" \" << s2 << \" \" << s1 << endl;\n}",
            1587524276.9769046,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nint main()  {\n\tstring s1,s2,s3;\n\tcin >> s1 >> s2 >> s3 ;\n\tcout << s3 << ' ' << s2 << ' ' << s1 << endl;\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}",
            1587529023.1648157,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王振恺",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\tstring str1,str2,str3;\n\tcin >> str1 >> str2 >> str3;\n\tcout << str3 <<\" \"<<str2<<\" \"<<str1<<endl; \n}",
            1587529838.7404997,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王硕",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\nclass source\n{\n    public:\n        source(){};\n        ~source(){};\n        void set_string();\n    private:\n        char a[10],b[10],c[10];\n};\nvoid source::set_string()\n{\n    cin >> a >> b >> c;\n    cout << c << \" \" << b << \" \" << a << endl;\n}\nint main(){\n\tsource acs;\n\tacs.set_string();\n\treturn 0;\n}",
            1587534605.7275736,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "肖浩慧",
            "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n\tstring ans[3];\n\tcin>>ans[0]>>ans[1]>>ans[2];\n\tcout<<ans[2]<<\" \"<<ans[1]<<\" \"<<ans[0];\n\treturn 0;\n}",
            1587538155.0019848,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "谢浩林",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\tstring a[3] ;\n\tfor(int i = 0 ; i < 3 ; i ++) {\n\t\tcin >> a[i] ;\n\t}\n\tfor(int i = 0 ; i < 3 ; i ++) {\n\t\tcout << a[2-i] << \" \" ;\n\t}\n}",
            1587547538.881466,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "欧培华",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tchar c1[100],c2[100],c3[100];\n\tcin >> c1 >> c2 >> c3;\n\tcout << c3 << ' ' << c2 << ' ' << c1 << endl;\n\treturn 0;\n}",
            1587552910.8483179,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王子豪",
            "#include <iostream>\nusing namespace std;\nint main(){\n\tchar a[10];\n\tchar b[10];\n\tchar c[10];\n\tcin>>a;\n\tcin>>b;\n\tcin>>c;\n\tprintf(\"%s %s %s\",c,b,a);\n}",
            1587555154.8808093,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "谢扬",
            "#include <iostream>\n#include <string>\n\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::string;\n//using std::array;\nconst int ArSize=3;\nint main()\n{\n\tstring str[ArSize];\n\t//array<string,ArSize>str;\n\tint i;\n\tfor ( i=0; i<ArSize; ++i)\n\t\tcin>>str[i];\n\tfor (i=ArSize-1;i>=0;--i)\n\t\tcout<<str[i]<<\" \";\n\tcout<<endl;\n\treturn 0;\n}",
            1587563151.3082948,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "谢小卉",
            "#include<iostream>\nusing namespace std;\n\nint main(){\n    string word1,word2,word3;\n    cin >> word1 >> word2 >> word3;\n    cout << word3 << \" \" << word2 << \" \" << word1;\n    return 0;\n}",
            1587570287.7072966,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王锡铭",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n\tstring a,b,c;\n\tcin >> a >> b >> c;\n\t\n\tcout << c << ' ' << b << ' ' << a << endl;\n}",
            1587605524.2264829,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王昌远",
            "#include <iostream>\nusing namespace std;\nint main(){\n\tchar a[100]={0},b[100]={0},c[100]={0};\n    cin>>a;\n\tcin>>b;\n\tcin>>c;\n\tcout<<c<<' '<<b<<' '<<a;\n}",
            1587607385.2769012,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "魏星月",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\tstring a, b, c;\n\tcin >> a >> b >> c;\n\tcout << c << \" \" << b << \" \" << a << endl;\n}",
            1587606943.0805955,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "夏丕浪",
            "#include <iostream> \nusing namespace std;\n\nint main() {\n \tchar a[10];\n\tchar b[10];\n\tchar c[10];\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tcout << c << ' ';\n\tcout << b << ' '; \n\tcout << a << ' '; \n}",
            1587608393.7396774,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王晶",
            "#include <iostream>\n#include<cstring>\nusing namespace std;\nint main() {\n    string x,y,z;\n\tcin >> x >> y >> z;\n\tcout<<z<<\" \"<<y<<\" \"<<x<<endl;\n}",
            1587607366.5398593,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "马淙升",
            "#include <iostream>\nusing namespace std;\nint main() {\n\tstring a,b,c;\n\tcin >> a >> b >> c;\n\tcout << c << ' '<< b << ' '<< a;\n}",
            1587607440.1623769,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "韦媛馨",
            "#include<iostream>\n#include<vector>\n#include<string>\nusing namespace std;\nint main(){\n\tstring *v=new string[10];\n\tfor(int i=0;i<10;++i)cin>>v[i];\n\tfor(int i=0;i<9;++i){\n\t\tfor(int j=i;j<10;++j){\n\t\t\tif(v[i]>v[j]){\n\t\t\t\tstring temp=v[i];\n\t\t\t\tv[i]=v[j];\n\t\t\t\tv[j]=temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i=0;i<10;++i) cout<<v[i]<<\" \";\n\tdelete[]v;\n}",
            1587608590.631322,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王昌远",
            "#include <iostream>\nusing namespace std;\nint f(char *a,char *b){\n     for(int i=0;;i++){\n           if(a[i]<b[i])return 0;\n\t\t   if(a[i]>b[i])return 1;\n\t }\n}\nvoid g(char *a,char *b){\n\tfor(int i=0;b[i];i++){\n        a[i]=b[i];  \n\t}\n}\nvoid swap(char *a,char *b){\n\tchar c[100]={0};\n    for(int i=0;a[i];i++){\n        c[i]=a[i];  \n\t}\n\tfor(int i=0;b[i];i++){\n\t\ta[i]=b[i];\n\t}\n\tfor(int i=0;c[i];i++){\n\t\tb[i]=c[i];\n\t}\n\n}\nint main(){\n\tchar a[10][100]={0};\n    for(int i=0;i<10;i++){\n\t\tcin>>a[i];\n\t}\n    for(int i=0;i<9;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tif(f(a[j],a[j+1])){\n\t            swap(a[j],a[j+1]);\n\t\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<10;i++){\n\t\tcout<<a[i]<<' ';\n\t}\n}",
            1587609416.9372644,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "廖雨轩",
            "#include <iostream>\n#include <string>\nusing namespace std;\nvoid solve()\n{\n    string str[15];\n    for(int i = 0; i < 10; i++)\n        cin >> str[i];\n    for(int i = 0; i < 9; i++)\n        for (int j = i + 1; j < 10; j++)\n        {\n            if(str[i] > str[j])\n            {\n                string tmp = str[i];\n                str[i] = str[j];\n                str[j] = tmp;\n            }\n        }\n    for(int i = 0; i < 10; i++)\n    {\n        cout << str[i];\n        if(i < 9) cout << \" \";\n    }\n}\nint main()\n{\n    solve();\n    return 0;\n}\n",
            1587609031.5236404,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "许遵楠",
            "#include <iostream>\n#include <string>\nusing namespace std;\nvoid sort(string *s) {\n    string tmp;\n    for (int i = 0; i < 10; ++i)\n        for (int j = 0; j < 9 - i; ++j)\n            if (s[j] > s[j + 1]) {\n                tmp = s[j];\n                s[j] = s[j + 1];\n                s[j + 1] = tmp;\n            }\n}\nint main() {\n    string s[10];\n    for (int i = 0; i < 10; ++i)\n        cin >> s[i];\n    sort(s);\n    for (int i = 0; i < 10; ++i)\n        cout << s[i] << ' ';\n    return 0;\n}",
            1587608595.032594,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "肖澧寅",
            "#include <iostream>\nusing namespace std;\n\nint main()\n{\n    string a,b,c;\n    cin >> a >> b >> c;\n    cout << c << \" \" << b << \" \" << a;\n}\n\n",
            1587607535.079056,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "麦子丰",
            "#include <cstring>\n#include <iostream>\nusing namespace std;\n#define MAX 100\n\nint main(){\n\t char str[10][MAX];\n    for(int i = 0; i < 10; i++)\n        cin>>str[i];\n    for(int i = 0; i < 9; i++){\n        for(int j = i; j < 10; j++){\n            if(strcmp(str[i], str[j]) > 0){\n                char tmp[MAX];\n                strcpy(tmp, str[i]);\n                strcpy(str[i], str[j]);\n                strcpy(str[j], tmp);\n            }\n        }\n    }\n    for(int i = 0; i < 10; i++)\n        cout<<str[i]<<' ';\n    cout<<endl;\n    return 0;\n}",
            1587608570.2763164,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "马淙升",
            "#include <iostream>\nusing namespace std;\nint main() {\n\tstring s[10];\n\tfor(int i = 0;i < 10;++ i) cin >> s[i];\n\tfor(int i = 0;i < 10;++ i) {\n\t\tfor(int j = i;j < 10;++ j) {\n\t\t\tif(s[i] > s[j]) {\n\t\t\t\tstring temp = s[i];\n\t\t\t\ts[i] = s[j];\n\t\t\t\ts[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0;i < 10;++ i) cout << s[i] << ' ';\n}",
            1587608530.2511983,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "马浩宇",
            "#include <iostream>\nusing namespace std;\n\nint main () {\n   string a[10];\n   for(int i = 0 ; i < 10 ; i ++) cin >> a[i];\n   for(int i = 0 ; i < 10 ; i ++) {\n      for(int j = i + 1 ; j < 10 ; j ++) {\n          if(a[i] > a[j]) {\n             string temp = a[i];\n             a[i] = a[j];\n             a[j] = temp;\n          }\n      }\n   }\n   for(int i = 0 ; i < 10 ; i ++) \n        cout << a[i] << ' ';\n   cout << endl;\n}",
            1587608627.0591698,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王著",
            "#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n\tchar s1[100];\n\tchar s2[100];\n\tchar s3[100];\n\tcin>>s1>>s2>>s3;\n\tcout<<s3<<' '<<s2<<' '<<s1;\n\t\n}",
            1587607759.2551508,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "谢浩林",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\tstring a[10] ;\n\tfor(int i = 0 ; i < 10 ; i ++) {\n\t\tcin >> a[i] ;\n\t}\n\tfor(int i = 0 ; i < 10 ; i ++) {\n\t\tfor(int k = 0 ; k < 9 ; k ++) {\n\t\t\tif(a[k]>a[k+1]) {\n\t\t\t\tstring tmp = a[k] ;\n\t\t\t\ta[k] = a[k+1] ;\n\t\t\t\ta[k+1] = tmp ;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0 ; i < 10 ; i ++) {\n\t\tcout << a[i] << \" \" ;\n\t}\n}\n",
            1587608694.0344384,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "青悦",
            "#include <iostream>\n#include<cstring>\n#define MAXSIZE 20\nusing namespace std;\nint main() {\n\tchar words[10][20];\n\tfor(int i = 0; i < 10; i++){\n\t\tcin >> words[i];\n\t}\n\tchar tmp[20];\n\tfor (int i = 0; i < 10 ; i++){\n\t\tfor(int j = i+1; j < 10; j++){\n\t\t\tif(strcmp(words[i],words[j]) > 0){\n\t\t\t\tmemset(tmp,0,sizeof(tmp));\n\t\t\t\tstrcpy(tmp,words[i]);\n\t\t\t\tstrcpy(words[i],words[j]);\n\t\t\t\tstrcpy(words[j],tmp);\n\t\t\t}\n\t\t}\n\t} \n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcout << words[i] << ' ';\n\t}\n}",
            1587608531.121139,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "向鼎",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tchar a[20],b[20],c[20];\n\tcin >> a>>b>>c;\n    cout<< c<<' '<<b<<' '<<a<<endl;\n\treturn 0;\n}",
            1587607827.5034425,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "肖澧寅",
            "#include <iostream>\nusing namespace std;\n\n\nint main()\n{\n    string a[10];\n    for(int i = 0;i < 10;i++){\n        cin >> a[i];\n    }\n    for(int i = 0;i < 9;i++){\n        for(int j = i + 1;j < 10;j++){\n            if(a[i] > a[j]){\n                string tmp;\n                tmp = a[i];\n                a[i] = a[j];\n                a[j] = tmp;\n            }\n        }\n    }\n    for(int i = 0;i < 10;i++){\n        cout << a[i] << \" \";\n    }\n}\n\n",
            1587608745.2390437,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "欧培华",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main()\n{\n    string c[10];\n    for (int i = 0; i < 10; ++i)\n        cin >> c[i];\n    for (int i = 0; i < 10; ++i)\n    {\n        for (int j = 0; j < 10; ++j)\n        {\n            if(c[i] < c[j])\n            {\n                string temp = c[i];\n                c[i] = c[j];\n                c[j] = temp;\n            }\n        }\n    }\n    for (int i = 0; i < 10; ++i)\n        cout << c[i] << ' ';\n}",
            1587610866.091401,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "伍嘉俊",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tchar a,b,c,d,e,f,g,h,i,j,k,l,m,n,o;\n\tcin >> a >> b >> c >> d >> e >> f >> g >> h >> i >> j >> k >> l >> m >> n >> o;\n\tcout << k << l << m << n << o << ' ' << f << g << h << i << j << ' ' << a << b << c << d << e;\n}",
            1587608125.979091,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王子豪",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\nint main(){\n\tchar (*a)[20]=new char[10][20];\n\tfor(int i=0;i<10;i++){\n\t\tscanf(\"%s\",a[i]);\n\t}\n\tfor(int i=0;i<10;i++){\n\t\tchar *t=new char[20];\n\t\tfor(int j=i;j<10;j++){\n\t\t\tif(strcmp(a[j],a[i])<0){\n\t\t\t\t\n\t\t\t\tstrcpy(t,a[j]);\n\t\t\t\tstrcpy(a[j],a[i]);\n\t\t\t\tstrcpy(a[i],t);\n\t\t\t}\n\t\t}\n\t\tdelete [] t;\n\t}\n\tfor(int i=0;i<10;i++){\n\t\tprintf(\"%s \",a[i]);\n\t}\n\t\tdelete [] a;\n\t\n} ",
            1587608686.4358294,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "吴婷婷",
            "#include<iostream>\nusing namespace std;\nint main()\n{\nstring s1,s2,s3;\ncin>>s1>>s2>>s3;\ncout<<s3<<\" \"<<s2<<\" \"<<s1;\n}",
            1587608106.0876603,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "吴浩岚",
            "#include<iostream>\nusing namespace std;\nint main(){\n\tstring a,b,c;\n\tcin>>a>>b>>c;\n\tcout<<c<<' '<<b<<' '<<a;\n}",
            1587608058.3323424,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "汪艺凡",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n\tstring a,b,c;\n\tcin>>a>>b>>c;\n\tcout<<c<<' '<<b<<' '<<a;\n}",
            1587608413.9955125,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "施天予",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main() {\n    string s[20],t;\n    for (int i = 0; i < 10; ++i) {\n        cin>>s[i];\n    }\n    for (int i = 0; i < 9; ++i) {\n        for (int j = i+1; j < 10; ++j) {\n            if (s[j]<s[i]) {\n                t = s[i];\n                s[i] = s[j];\n                s[j] = t;\n            }\n        }\n    }\n    for (int i = 0; i < 10; ++i) {\n        cout<<s[i]<<\" \";\n    }\n}",
            1587608581.2681348,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "莫振威",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n    string s[10];\n    for(int i = 0 ; i < 10; i++){\n        cin >> s[i];\n    }\n    for(int i = 0; i < 10; i++){\n        for(int j = i+1; j < 10; j++){\n            if(s[i] > s[j]){\n                string temp = s[i];\n                s[i] = s[j];\n                s[j] = temp;\n            }\n        }\n    }\n    for(int i = 0; i < 10; i++){\n        cout << s[i] << ' ';\n    }\n    cout << endl;\n}",
            1587608566.726575,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "容浩民",
            "#include <iostream>\n#include <string>\n#include <sstream>\nusing namespace std;\ntypedef long long ll;\nconst int N = 2e5 + 5;\n#define INF 0x3f3f3f3f\n\n\nbool cmp(string a, string b){\n    int len = a.length();\n    for(int i = 0;i < len;i++){\n        if(a[i] < b[i]) return true;\n        else if(a[i] == b[i]) continue;\n        else return false;\n    }\n    return true;\n}\n\nvoid my_sort(string a[]){\n    for(int i = 1;i <= 10;i++){\n        for(int j = 1;j < 10;j++){\n            if(!cmp(a[j], a[j + 1])){\n                string temp = a[j];\n                a[j] = a[j + 1];\n                a[j + 1] = temp;\n            }\n        }\n    }\n}\n\nstring s;\nint main(){\n    getline(cin, s);\n    stringstream ss(s) ;\n    string a[15];\n    for(int i = 1;i <= 10;i++){\n        ss >> a[i];\n    }\n    my_sort(a);\n    for(int i = 1;i <= 10;i++){\n        cout << a[i] << ' ';\n    }\n    cout << endl;\n}\n\n    \n    ",
            1587608605.4223464,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "吴绪芃",
            "#include <iostream>\nusing namespace std;\nint main() {\n\tchar arr[3][100];\n\tfor (int i = 0; i < 3; ++ i){\n\t\tcin >> arr[i];\n\t} \n\tfor (int i = 0; i < 3; ++ i){\n\t\tcout << arr[2-i] ;\n\t\tcout <<\" \";\n\t}\n\treturn 0;\t\n}",
            1587608260.6033404,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "杨宗恺",
            "#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nint main()\n{\n    char s[10][6];\n    for (int i = 0; i < 10; ++i)\n    {\n        cin >> s[i];\n    }\n    for (int i = 0; i < 10; ++i)\n    {\n        for (int j = 0; j < 10 - i - 1; ++j)\n        {\n            if (strcmp(s[j], s[j + 1]) > 0)\n            {\n                char temp[6];\n                strcpy(temp, s[j]);\n                strcpy(s[j], s[j + 1]);\n                strcpy(s[j + 1], temp);\n            }\n        }\n    }\n    for (int i = 0; i < 10; ++i)\n    {\n        cout << s[i] << \" \";\n    }\n}\n\n",
            1587608572.1902907,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王正学",
            "#include <iostream>\nusing namespace std;\nstruct Word{\n\tchar a[50];\n};\nint main(){\n\tstruct Word word[100];\n\tstruct Word mid;\n    int i=0,j=0;\n    char c;\n\twhile((c = getchar()) != '\\n'){\n\t\tif(c == ' '){\n\t\t\tword[i].a[j] = 0;\n\t\t\t++i;\n\t\t\tj = 0;\n\t\t} \n\t\tword[i].a[j] = c;\n\t\t++j;\n\n\t}\n\tword[i].a[j] = 0;\n\n\tfor(int k=0;k<i-1;++k){\n\t\tfor(int l = k+1;l<i;++l){\n\t\t\tif(word[k].a[0] > word[l].a[0]){\n\t\t\t\tmid = word[k];\n\t\t\t\tword[k] = word[l];\n\t\t\t\tword[l] = mid;\n\t\t\t}\n\n\t\t\tif(word[k].a[0] == word[l].a[0]){\n\t\t\t\tif(word[k].a[1] > word[l].a[1]){\n\t\t\t\t\tmid = word[k];\n\t\t\t\t    word[k] = word[l];\n\t\t\t\t    word[l] = mid;\n\t\t\t\t}\n\n\t\t\t\tif(word[k].a[1] == word[l].a[1]){\n\t\t\t\t\tif(word[k].a[2] > word[l].a[2]){\n\t\t\t\t\t\tmid = word[k];\n\t\t\t\t        word[k] = word[l];\n\t\t\t\t        word[l] = mid;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(word[k].a[2] == word[l].a[2]){\n\t\t\t\t\t\tif(word[k].a[3] > word[l].a[3]){\n\t\t\t\t\t\t\tmid = word[k];\n\t\t\t\t            word[k] = word[l];\n\t\t\t\t            word[l] = mid;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(word[k].a[3] == word[l].a[3]){\n\t\t\t\t\t\t\tif(word[k].a[4] > word[l].a[4]){\n\t\t\t\t\t\t\t\tmid = word[k];\n\t\t\t\t                word[k] = word[l];\n\t\t\t\t                word[l] = mid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int p=0;p<i+1;++p){\n\t\tprintf(\"%s \",word[p].a);\n\t}\n\tprintf(\"\\n\");\n\n\n\n\n\n}",
            1587609673.3621228,
            50,
            "Segmentation fault (core dumped)\n"
        ],
        [
            "测试2",
            "test",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nvoid sort(string words[], int size) {\n\t\n}\n\nint main() {\n\tstring words[10];\n\tfor (int i = 0; i < 10; ++ i) cin >> words[i];\n\tsort(words, 10);\n\tfor (int i = 0; i < 10; ++ i) cout << words[i] << ' ';\t\n}",
            1587608748.9947886,
            50,
            "# 答案不正确\n\n# 随机输入:\nHSAFI JTQUV XAAMF ZBRVX PLIDA ZTLUN ALFSG BTWEQ BTPBS YTRJM \n\n# 参考答案:\nALFSG BTPBS BTWEQ HSAFI JTQUV PLIDA XAAMF YTRJM ZBRVX ZTLUN \n\n# 我的答案:\nHSAFI JTQUV XAAMF ZBRVX PLIDA ZTLUN ALFSG BTWEQ BTPBS YTRJM "
        ],
        [
            "测试1",
            "施昊成",
            "#include <iostream>\n\nusing namespace std;\nint  main() {\n\tchar a[20],b[20],c[20];\n\tcin >> a>>b>>c;\n\tcout << c<<\" \"<<b<<\" \"<<a<<endl;\n}",
            1587609528.266007,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "欧阳蓓",
            "#include <iostream>\n#include <string>\n#include<vector>\nusing namespace std;\nint main()\n{\n\tvector<string> v;\n\tstring s;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcin >> s;\n\t\tv.push_back(s);\n\t}\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tfor (int j = 0; j < 9; j++)\n\t\t {\n\t\t if (v[j] > v[j + 1])\n\t\t {\n\t\t\t swap(v[j], v[j + 1]);\n\t\t }\n\t\t }\n\t}\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcout << v[i] << \" \";\n\n\t}\n}",
            1587608849.3329375,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王浩歌",
            "# include <iostream>\nusing namespace std;\nint main(){\n\tstring a[10];\n\tfor(int i=0;i<10;i++){\n\t\tcin>>a[i];\n\t}\n\tfor(int i=0;i<9;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tif(a[j]>a[j+1]){\n\t\t\t\tstring temp;\n\t\t\t\ttemp=a[j];\n\t\t\t\ta[j]=a[j+1];\n\t\t\t\ta[j+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=0;i<10;i++){\n\t\tcout<<a[i]<<' ';\n\t}\n} ",
            1587608630.104345,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "吴渝峰",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main() {\n\tchar words[10][20];\n\tfor (int i = 0; i < 10; ++ i)\n\t\tcin >> words[i];\n    for(int i = 0; i < 10; ++ i) {\n        for(int j = 0; j < 9; ++ j) {\n            if(strcmp(words[j],words[j + 1]) > 0) {\n                swap(words[j],words[j + 1]);\n            }\n        }\n    }\n\tfor (int i = 0; i < 10; ++ i) \n\t\tcout << words[i] << \" \";\n\treturn 0;\n}",
            1587609166.9007704,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王著",
            "#include <iostream>\n#include <cstring>\n\nusing namespace std;\nint main() {\n\n\tchar **s=new char*[10];\n\tint i;\n\tfor(i=0;i<10;i++){\n\t\ts[i]=new char[100];\n\t}\n\tfor(i=0;i<10;i++) {\n\t\tcin>>s[i];\n\t}\n\tchar *temp=new char[100];\n\tint j;\n\tfor(i=9;i>=1;i--){\n\t\tfor(j=0;j<i;j++){\n\t\t\tif(strcmp(s[j],s[j+1])>0) {\n\t\t\t\tstrcpy(temp,s[j]);\n\t\t\t\tstrcpy(s[j],s[j+1]);\n\t\t\t\tstrcpy(s[j+1],temp);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<10;i++){\n\t\tcout<<s[i];\n\t\tif(i!=9) cout<<' ';\n\t}\n\tdelete temp;\n\tfor(i=0;i<10;i++) delete s[i];\n\tdelete s;\n\t\n}",
            1587608702.2474525,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "谭鸿鑫",
            "#include <iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n\tstring word[10];\n\tfor(int i = 0;i < 10;i ++){\n\t\tcin >> word[i];\n\t}\n\tfor(int i = 0;i < 10;i ++){\n\t\tfor(int j = 0;j < 9 - i;j ++){\n\t\t\tif(word[j] > word[j+1]){\n\t\t\t\tstring tem = word[j + 1];\n\t\t\t\tword[j + 1] = word[j];\n\t\t\t\tword[j] = tem;\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i = 0;i < 10;i ++){\n\t\tcout << word[i] << ' ';\n\t}\n}",
            1587608629.1439698,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tchar *a;\n\tchar *b;\n\tchar *c;\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tcout << c << ' ';\n\tcout << b << ' ';\n\tcout << a << endl;\n}",
            1587608916.4823196,
            0,
            "Segmentation fault (core dumped)\n"
        ],
        [
            "测试1",
            "潘文轩",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main() {\n\tchar word[10], words[10][10];\n\tint n = 0;\n\twhile(cin >> word) {\n\t\tmemcpy(words[n], word, sizeof(word));\n\t\tn ++;\n\t}\n\tfor(int i = n - 1; i >= 0; i --) {\n\t\tcout << words[i];\n\t\tif(i != 0) cout << ' ';\n\t}\n\treturn 0;\n}",
            1587609462.8875504,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "魏星月",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\tstring a[10];\n\t\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcin >> a[i];\n\t} \n\t\n\tfor (int i = 0; i < 9; i ++) {\n\t\tfor (int j = 0; j < 9 - i; j ++) {\n\t\t\tif (a[j] > a[j + 1]) {\n\t\t\t\tstring temp = a[j];\n\t\t\t\ta[j] = a[j + 1];\n\t\t\t\ta[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcout << a[i] << \" \";\n\t}\n\t\n\tcout << endl;\n}",
            1587608657.1994605,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "向鼎",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main() {\n    char words[10][20];\n    for(int i = 0; i < 10; ++i) {\n        cin>>words[i];\n    }\n    for (int j = 0; j < 10; ++j) {\n        for (int i = j; i < 10; ++i) {\n            if(strcmp(words[j],words[i]) >= 1){\n                char temp[20];\n                strcpy(temp,words[j]);\n                strcpy(words[j],words[i]);\n                strcpy(words[i],temp);\n\n            }\n        }\n    }\n    for (int k = 0; k < 10; ++k) {\n        cout<<words[k]<<' ';\n    }cout<<endl;\n    return 0;\n}",
            1587608602.753219,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "吴浩岚",
            "#include<iostream>\n#include<cstring> \nusing namespace std;\n\nint main(){\n   char a[10][10];\n   for(int i=0;i<10;i++)\n   cin>>a[i];\n   \tfor(int i = 0; i < 9; i++){\n\t\tfor(int j = i+1; j < 10; j++){\n\t\t\tif(strcmp(a[i],a[j])>0){\n\t\t\t\tchar temp[10];\n\t\t\t\tstrcpy(temp,a[i]);\n\t\t\t\tstrcpy(a[i],a[j]);\n\t\t\t\tstrcpy(a[j],temp);\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n   for(int i=0;i<10;i++)\n   cout<<a[i]<<' ';\n}",
            1587610309.9312785,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王浩歌",
            "# include <iostream>\nusing namespace std;\nint main(){\n\tstring a[3];\n\tfor(int i=0;i<3;i++){\n\t\tcin>>a[i];\n\t}\n\tfor(int i=2;i>-1;i--){\n\t\tcout<<a[i]<<' ';\n\t}\n} ",
            1587608620.2567945,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "吴婷婷",
            "#include <iostream>\nusing namespace std;\nint main()\n{\n\tstring s[10];\n\t\n\tfor(int i=0;i<10;++i) cin>>s[i];\n\t\n\tfor(int i=0;i<10;++i)\n\t for(int j=i+1;j<10;++j)\n\t {\n\t \tif(s[i]>s[j])\n\t \t{\n\t \t   string t;\n\t\t   t=s[i];\n\t\t   s[i]=s[j];\n\t\t   s[j]=t;\t\n\t\t}\n\t }\n\t\n\tfor(int i=0;i<10;++i) cout<<s[i]<<\" \";\n } ",
            1587608668.8673904,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王锡铭",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n\tstring a[10];\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tfor (int j = i; j < 10; ++ j) {\n\t\t\tif(a[i] > a[j]){\n\t\t\t\tstring t;\n\t\t\t\tt = a[i];\n\t\t\t\ta[i] = a[j];\n\t\t\t\ta[j] = t;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < 10; ++ i){\n\t\tcout << a[i] << ' ';\n\t} \n\tcout << endl;\n}",
            1587608815.383431,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "謝敏華",
            "#include<iostream>\nusing namespace std;\nint main()\n{\n\tchar s[3][255];\n\tfor(int i=0; i<3; i++) cin>>s[i];\n\tfor(int i=2; i>=0; i--) cout<<s[i]<<\" \";\n}\n",
            1587608819.1664925,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "覃浩南",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n    string a, b, c;\n    cin >> a >> b >> c;\n    cout << c << \" \" << b << \" \" << a << endl;\n}",
            1587608829.707118,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王志文",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main() {\n\tchar arr[10][10] = {0};\n\tfor (int i = 0; i < 10; ++ i){\n\t\tcin >> arr[i];\n\t}\n\tfor(int i = 0; i < 10; ++i){\n\t\tfor(int j = i + 1; j < 10; ++j){\n\t\t\tif(strcmp(arr[i],arr[j])> 0){\n\t\t\t\tchar ex[10] = {0};\n\t\t\t\tint len1 = 0;\n\t\t\t\tint len2 = 0;\n\t\t\t\twhile(arr[i][len1]){\n\t\t\t\t\tex[len1] = arr[i][len1];\n\t\t\t\t\t++len1;\n\t\t\t\t}\n\t\t\t\twhile(arr[j][len2]){\n\t\t\t\t\tarr[i][len2] = arr[j][len2];\n\t\t\t\t\tarr[j][len2] = ex[len2];\n\t\t\t\t\t++len2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < 10; ++ i){\n\t\tcout << arr[i] << ' ';\n\t} \n}",
            1587609105.6473918,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "南麟星",
            "#include <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;\nvoid swap(char* p1,char* p2)\n{\n\tchar temp[10];\n\tstrcpy(temp,p1);\n\tstrcpy(p1,p2);\n\tstrcpy(p2,temp);\n}\nint main() {\n\tchar ch[10][10],*ch1[10];\n\tfor (int i = 0; i < 10; ++ i) \n\t\tcin >> *(ch + i);\n\tfor (int i = 0; i < 10; ++ i) \n\t\tch1[i] = *(ch + i);\n\tfor (int i = 0; i < 10; ++ i) \n\t{\n\t\tfor(int j = i + 1;j<10;j++)\n\t\t{\n\t\t\tif(strcmp (ch1[i],ch1[j]) > 0)\n\t\t\t{\n\t\t\t\tswap(ch1[i],ch1[j]);\n\t\t\t}\n\t\t}\n\t}\n\tfor(int f = 0;f < 10;f++)\n\t\tcout << ch1[f] << ' ';\n}",
            1587612082.4633703,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "谢扬",
            "#include <iostream>\n#include <string>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nusing std::string;\nconst int ArSize=10;\nint main()\n{\nstring str[ArSize];\nstring temp;\nint i;\nfor (i=0; i<ArSize;++i)\n{\ncin>>str[i];\n}\nfor (i=1;i<ArSize;++i)\n{\nfor(int j=i;j>0;--j)\n{\nif(str[j]<str[j-1]){temp=str[j-1];str[j-1]=str[j];str[j]=temp;}\n}\n}\nfor (i=0; i<ArSize;++i)\n{\ncout<<str[i]<<\" \";\n}\ncout<<endl;\nreturn 0;\n}",
            1587608915.0034142,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王振恺",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main()\n{\n\tstring s[10];\n\tstring temp;\n\tfor (int i = 0; i < 10; ++ i)\n\t\tcin >> s[i];\n\tfor (int i = 0; i < 10; ++ i)\n\t\tfor (int j = i+1; j < 10; ++ j)\n\t\t\tif(s[i]>s[j]){\n\t\t\t\ttemp = s[i];\n\t\t\t\ts[i] = s[j];\n\t\t\t\ts[j] = temp;\n\t\t\t}\n\tfor (int i = 0; i < 10; ++ i)\n\t\tcout << s[i] << \" \";\n\tcout<< endl;\n}",
            1587608992.4914076,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王芯芸",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n    string str[10];\n    string mid;\n    for(int i = 0; i < 10; i++)cin >> str[i];\n    for(int i = 0; i < 9; i++)for(int j = i + 1; j < 10; j++){\n        if(str[i] > str[j]){\n            mid = str[i];\n            str[i] = str[j];\n            str[j] = mid;\n        }\n    }\n    for(int i = 0; i < 10; i++)cout << str[i] << \" \";\n    return 0;\n}",
            1587609458.308631,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "苏比努尔·玉山江",
            "#include <iostream>\n#include <string>\n#include<vector>\nusing namespace std;\nint main()\n{\n\tvector<string> v;\n\tstring s;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcin >> s;\n\t\tv.push_back(s);\n\t}\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tfor (int j = 0; j < 9; j++)\n\t\t {\n\t\t if (v[j] > v[j + 1])\n\t\t {\n\t\t\t swap(v[j], v[j + 1]);\n\t\t }\n\t\t }\n\t}\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcout << v[i] << \" \";\n\n\t}\n}",
            1587611242.0907917,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王子佳",
            "#include <iostream>\nusing namespace std;\nint main() {\n\tchar a[10],b[10],c[10];\n\tcin >> a>>b>>c;\n\tcout << c<<' '<<b<<' '<<a;\n}",
            1587609021.5033407,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "周琨曜",
            "#include <iostream>\nusing namespace std;\n\nchar strr[100][20];\nvoid strcpy(char *str1,char *str2)\n{\n    while((*str1++=*str2++)!='\\0');\n}\nvoid reserve(char str[100][20],int n)\n{\n    char *s;\n    for(int i=0;i<n;i++)\n    {\n        s=&strr[i][0];\n        while(*s!='\\0')\n        {\n            if(*s>='A'&&*s<='Z')\n                *s+=32;\n            *s++;\n        }\n    }\n}\nint strcmp(char *str1,char *str2)\n{\n    while(*str1!='\\0' && *str2!='\\0' && *str1==*str2)\n    {\n        *str1++;*str2++;\n    }\n    if(*str1>*str2)\n        return 1;\n    else if(*str1<*str2)\n        return -1;\n    else\n        return 0;\n}\nvoid arrange(char str[100][20],char strr[100][20],int n)\n{\n    for(int i=0;i<n-1;i++)\n    {\n        int j=i;\n        for(int k=i+1;k<n;k++)\n        {\n            if(strcmp(strr[j],strr[k])==1)\n            {\n                char s[20];\n                strcpy(s,str[j]);\n                strcpy(str[j],str[k]);\n                strcpy(str[k],s);\n\n                strcpy(s,strr[j]);\n                strcpy(strr[j],strr[k]);\n                strcpy(strr[k],s);\n            }\n        }\n    }\n}\nint main()\n{\n    char str[100][20];\n    int n=10;\n    for(int i=0;i<n;i++)\n         cin>>str[i];\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<20;j++)\n        {\n            strr[i][j]=str[i][j];\n        }\n    }\n    reserve(str,n);\n    arrange(str,strr,n);\n    for(int i=0;i<n;i++)\n        cout<<str[i]<<\" \";\n    return 0;\n}",
            1587609052.6981642,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "谢小卉",
            "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n    string word[10];\n    for(int i=0;i<10;++i) cin >> word[i];\n    for(int i=0;i<10;++i){\n        for(int j=i+1;j<10;++j){\n            if(word[i] > word[j]){\n                string temp = word[i];\n                word[i] = word[j];\n                word[j] = temp;\n            }\n        }\n    }\n    for(int i=0;i<10;++i) cout << word[i] << \" \";\n    return 0;\n}",
            1587609095.5033963,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "肖浩慧",
            "#include<iostream>\n#include<string>\nusing namespace std;\nint main(){\n\tstring ans[10];\n\tfor(int i = 0;i < 10;i++){\n\t\tcin>>ans[i];\n\t}\n\tfor(int i = 0;i < 9;i++){\n\t\tint  swap = i;\n\t\tfor(int j = i + 1; j < 10;j++){\n\t\t\tif(ans[j] < ans[swap]){\n\t\t\t\tswap = j;\n\t\t\t}\n\t\t}\n\t\tstring temp = ans[i];\n\t\tans[i] = ans[swap];\n\t\tans[swap] = temp;\n\t}\n\tfor(int i = 0;i < 10;i++){\n\t\tcout<<ans[i]<<\" \";\n\t}\n}",
            1587609139.950936,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "肖翎予",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n\tint judge = 0, n = 0;\n\tchar str[1000], s[40][25] = {0},c;\n\tint i,j;\n\tcin.get(str,1000);\n\tfor(i = 0; (c = str[i]) != '\\0'; i++) {\n\t\tif(c == ' ') judge = 0;\n\t\telse {\n\t\t\t if(judge == 0) {\n\t\t\t\tj = 0;\n\t\t\t\tn++;\n\t\t\t\tjudge = 1;\n\t\t\t }\n\t\t\t s[n][j] = c;\n\t\t\t j++;\n\t\t}\n\t}\n\tfor(i = n; i > 0; i--) {\n\t\tcout << s[i] << \" \";\n\t}\n}\n",
            1587609240.2627769,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王郅成",
            "#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nint main(){\n    char a[11][50],temp[50];\n    for (int i = 0; i < 10; i++)\n    {\n        cin >> a[i];\n    }\n    for (int i = 0; i < 9; i++)\n    {\n        for (int j = i+1; j < 10; j++)\n        {\n            if(strcmp(a[i],a[j])>0){\n                strcpy(temp, a[i]); \n                strcpy(a[i], a[j]);\n                strcpy(a[j], temp);\n            }\n        }\n        \n    }\n    for (int i = 0; i < 10; i++)\n    {\n        cout << a[i]<<' ';\n    }\n}",
            1587609371.8513777,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "涂涵",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n    char c[3][5];\n\tfor(int i=0;i<3;i++){\n\t\tfor(int k=0;k<5;k++) cin >> c[i][k];\n\t}\n\tfor(int i=2;i>=0;i--){\n        for(int k=0;k<5;k++) cout << c[i][k];\n\t\tcout << \" \";\n\t}\n}",
            1587611320.8594503,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "覃浩南",
            "#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main(){\n    vector<string> v(10);\n    for(auto &s: v){\n        cin >> s;\n    }\n\n    for(int i = 0; i != v.size() - 1; ++i){\n        int m = i;\n        for(int j = i + 1; j != v.size(); ++j){\n            if(v[j] < v[m]){\n                m = j;\n            }\n        }\n        if(m != i){\n            auto tmp = v[i];\n            v[i] = v[m];\n            v[m] = tmp;\n        }\n    }\n\n    for(auto t : v){\n        cout << t << \" \";\n    }\n\n    cout << endl;\n}",
            1587609475.3074,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王郅成",
            "#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nint main(){\n    char a[11][50],temp[50];\n    for (int i = 0; i < 3; i++)\n    {\n        cin >> a[i];\n    }\n    // for (int i = 0; i < 9; i++)\n    // {\n    //     for (int j = i+1; j < 10; j++)\n    //     {\n    //         if(strcmp(a[i],a[j])>0){\n    //             strcpy(temp, a[i]); \n    //             strcpy(a[i], a[j]);\n    //             strcpy(a[j], temp);\n    //         }\n    //     }\n        \n    // }\n    cout << a[2]<<' '<<a[1]<<' '<<a[0];\n\n}",
            1587609468.0803082,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王彬",
            "#include<iostream>\nusing namespace std;\n\nint main()\n{\n\tstring str[10];\n\tfor (int i = 0; i < 10; i ++) cin >> str[i];\n\tfor (int i = 0; i < 10; i ++)\n\t{\n\t\tfor (int j = 0; j < 9; j ++)\n\t\t{\n\t\t\tif (str[j].compare(str[j + 1]) > 0)\n\t\t\t{\n\t\t\t\tstring t;\n\t\t\t\tt = str[j];\n\t\t\t\tstr[j] = str[j +1];\n\t\t\t\tstr[j + 1] = t;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < 10; i ++) cout << str[i] << \" \";\n\tcout << endl;\n\treturn 0;\n}",
            1587609473.553484,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王晶",
            "#include<iostream>\n#include <cstring>\nusing namespace std;\nint main() {\n\tchar arr[10][10];\n\tint i=0,j=0;\n\tfor(i;i<10;++i) cin >> arr[i];\n\tfor(i=0;i<9;i++){\n\t\tfor(j=0;j<9-i;++j){\n\t\t\tif(arr[j][0]>arr[j+1][0]){\n\t\t\t\tchar temp[10];\n\t\t\t\tstrcpy(temp,arr[j]);\n\t\t\t\tstrcpy(arr[j],arr[j+1]);\n\t\t\t\tstrcpy(arr[j+1],temp);\n\t\t\t}\n\t\t\telse if(arr[j][0]==arr[j+1][0]){\n\t\t\t\tfor (int k = 1; k < 10; ++ k){\n\t\t\t\t\tif(arr[j][k]!=arr[j+1][k]){\n\t\t\t\t\t\tif(arr[j][k]>arr[j+1][k]){\n\t\t\t\t\t\t\tchar temp[10];\n\t\t\t\t    strcpy(temp,arr[j]);\n\t\t\t\t    strcpy(arr[j],arr[j+1]);\n\t\t\t\t    strcpy(arr[j+1],temp);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<10;++i) cout<<arr[i]<<\" \";\n}",
            1587611063.1739833,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "吴浩冬",
            "#include <iostream> \n#include <cstring>\nusing namespace std;\nint main() {\nchar a[20],b[20],c[20];\ncin >> a >> b >> c;\ncout <<c<<\" \"<<b<<\" \"<<a;\n}",
            1587609486.9108646,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "謝敏華",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\nint main()\n{\n\tchar s[10][255];\n\tfor(int i=0; i<10; i++) cin>>s[i];\n\tfor(int i=0; i<9; i++) \n\t\tfor(int j=i+1; j<10; j++){\n\t\t\tif(strcmp(s[i],s[j])>0){\n\t\t\t\tchar t[255];\n\t\t\t\tstrcpy(t,s[i]);\n\t\t\t\tstrcpy(s[i],s[j]);\n\t\t\t\tstrcpy(s[j],t);\n\t\t\t}\n\t\t}\n\tfor(int i=0; i<10; i++) cout<<s[i]<<\" \";\n}\n",
            1587609580.7506351,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "谢程凯",
            "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n\tstring ans[10];\n\tfor(int i = 0;i < 10;i++){\n \t\tcin>>ans[i];\n \t}\n \tfor(int i = 0;i < 9;i++){\n  \t\tint swap = i;\n  \t\tfor(int j = i + 1; j < 10;j++){\n   \t\t\tif(ans[j] < ans[swap]){\n    \t\t\tswap = j;\n   \t\t\t}\n  \t\t}\n  \t\tstring temp = ans[i];\n  \t\tans[i] = ans[swap];\n  \t\tans[swap] = temp;\n\t}\n \tfor(int i = 0;i < 10;i++){\n  \t\t\tcout<<ans[i]<<\" \";\n \t}\n}",
            1587609595.567237,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "万金诚",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\nvoid sort(char **a){\n\tfor(int i=0;i<10;i++){\n\t\tfor(int j=0;j<9;j++){\n\t\t\tif(strcmp(a[j],a[j+1])>0){\n\t\t\t\tchar temp[20];\n\t\t\t\tstrcpy(temp,a[j]);\n\t\t\t\tstrcpy(a[j],a[j+1]);\n\t\t\t\tstrcpy(a[j+1],temp);\n\t\t\t}\n\t\t}\n\t}\n}\nint main(){\n\tchar **a=new char* [10];\n\tfor(int i=0;i<10;i++){\n\t\ta[i]=new char[20];\n\t\tcin>>a[i];\n\t}\n\tsort(a);\n\tfor(int i=0;i<10;i++){\n\t\tcout<<a[i]<<\" \";\n\t}\n\tfor(int i=10;i>=0;i--){\n\t\tdelete a[i];\n\t}\n\tdelete a;\n}",
            1587609704.5514095,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王筝",
            "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <cstring>\nusing namespace std;\n\n\nint compare(char a[],char b[]){\n    int i = 0;\n    while(a[i]!=0||b[i]!=0){\n        if(a[i]<b[i])\n            return 0;\n        else if(a[i]>b[i])\n            return 1;\n        i++;\n    }\n    return 1;\n}\n\nint main(){\n    char vo[10][20],temp[20];\n    for (int i = 0; i < 10;i++)\n        cin >> vo[i];\n    for (int i = 0; i < 10;i++)\n        for (int j = 8; j >= i;j--){\n            if(compare(vo[j],vo[j+1])==1){\n                strcpy(temp, vo[j]);\n                strcpy(vo[j], vo[j + 1]);\n                strcpy(vo[j + 1], temp);\n            }\n        }\n    for (int i = 0; i < 10;i++)\n        cout << vo[i] << \" \";\n        return 0;\n}",
            1587609632.6955,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "孙奥远",
            "#include <iostream>\nusing namespace std;\n#include <cstring>\n\nint main()\n{\n    char str[10][6], temp[6];\n    char c;\n    for (int i = 0; i < 10; i++)\n    {\n        scanf(\"%s\", str[i]);\n        c = getchar();\n    }\n    for (int i = 0; i < 9; i++)\n    {\n        for (int j = 0; j < 9; j++)\n        {\n            if (strcmp(str[j], str[j + 1]) > 0)\n            {\n                strncpy(temp, str[j], 5);\n                strncpy(str[j], str[j + 1], 5);\n                strncpy(str[j + 1], temp, 5);\n            }\n        }\n    }\n    for (int i = 0; i < 10; i++)\n    {\n        cout << str[i];\n        if (i < 9)\n            cout << \" \";\n        else\n            cout << endl;\n    }\n    return 0;\n}",
            1587609667.0754385,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "伍海珊",
            "#include<iostream>\nusing namespace std;\n\nvoid Reverse_line(char* pBegin,char* pEnd){\n    if(pBegin==nullptr || pEnd==nullptr)\n        return;\n\n    while(pBegin<pEnd){\n        char t=*pBegin;\n        *pBegin=*pEnd;\n        *pEnd=t;\n\n        pBegin++;\n        pEnd--;\n    }\n\n}\n\nchar* Reverse(char* s){\n    if(s==nullptr) return nullptr;\n\n    char* pBegin=s;\n    char* pEnd=s;\n    while(*pEnd!=0) pEnd++;\n    pEnd--;\n\n    Reverse_line(pBegin,pEnd);\n\n    pBegin=pEnd=s;\n\n    while(*pBegin!=0){\n        if(*pBegin==' '){\n            pBegin++;\n            pEnd++;\n        }\n        else if(*pEnd==' '||*pEnd==0){\n            Reverse_line(pBegin,--pEnd);\n            pBegin=++pEnd;\n        }\n        else pEnd++;\n    }\n    return s;\n}\n\nint main(){\n\tchar s[100];\n\tcin.get(s,100);\n\n\tchar* p=Reverse(s);\n\n\twhile(*p!=0)\n        cout << *p++;\n}",
            1587609701.5191684,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "裴江博",
            "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n    string str[10];\n    for(int i=0;i < 10;++i){\n      cin >> str[i]; \n    }\n    for(int i=0;i<9;++i){\n        for(int j=0;j<9-i;++j){\n            if(str[j] > str[j+1]){\n                string temp = str[j];\n                str[j] = str[j+1];\n                str[j+1] = temp;\n            }\n        }\n    }\n    for(int i=0;i < 10;++i){\n      cout << str[i] << \" \";\n      if(i == 9) cout << endl; \n    }\n}",
            1587609730.9074318,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tstring s[10];\n\tfor(int i=0;i<10;i++)\n\t\tcin >> s[i];\n   for(int i=0;i<9;i++) {\n\t   for(int j=0;j<9-i;j++) {\n\t\t   if(s[j] > s[j+1]) {\n\t\t\t   string tmp=s[j+1];\n\t\t\t   s[j+1]=s[j];\n\t\t\t   s[j]=tmp;\n\t\t   }\n\t   }\n   }\n\t\n\tfor(int i=0;i<10;i++)\n\t\tcout << s[i] << ' ';\n}\n\n\n\n\n\n\n\n\n\n",
            1587609766.0914214,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "邵震东",
            "#include <iostream>\n#include <string>\n\nint main()\n{\n\tstd::string str1, str2, str3;\n\tstd::cin >> str1;\n\tstd::cin >> str2;\n\tstd::cin >> str3;\n\tstd::cout << str3 << ' ' << str2 << ' ' << str1 << std::endl;\n\treturn 0;\n}",
            1587609980.2833812,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王子佳",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\nvoid swap_char( char **s1,  char **s2)\n{\n\tchar *s = NULL;\n\ts = *s2;\n\t*s2 = *s1;\n        *s1 = s;\n}\nint main() {\n\tchar **s = new char*[10];\n\tfor (int i = 0; i < 10; ++ i){\n\t\ts[i] = new char[5];\n\t} \n\tfor (int i = 0; i < 10; ++ i) cin >> s[i]; \n\tfor (int x = 0; x < 9; ++ x){\n\t\tfor(int y = 0; y < 9 - x; ++ y){\n\t\t\tfor(int z = 0;z < 5;z ++){\n\t\t\t\tif(s[y][z] > s[y+1][z]){\n\t\t\t\t\tswap_char((char**)s[y],(char**)s[y+1]);\n\t\t\t\t\tbreak;\n\t\t\t\t}else if(s[y][z] < s[y+1][z]){\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < 10; ++ i) cout << s[i] << ' ';\n}",
            1587611693.7473946,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "伍嘉俊",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tchar a[10],b[10],c[10],d[10],e[10];\n\tchar n;\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcin >> a[i] >> b[i] >> c[i] >> d[i] >> e[i];\n\t} \n\tfor (int i = 0; i < 10; ++ i) {\n\t\tfor (int j = 0; j < 10; ++ j) {\n\t\t\tif (a[i] < a[j]) {\n\t\t\t\tn = a[i];\n\t\t\t\ta[i] = a[j];\n\t\t\t\ta[j] = n;\n\t\t\t\tn = b[i];\n\t\t\t\tb[i] = b[j];\n\t\t\t\tb[j] = n;\n\t\t\t\tn = c[i];\n\t\t\t\tc[i] = c[j];\n\t\t\t\tc[j] = n;\n\t\t\t\tn = d[i];\n\t\t\t\td[i] = d[j];\n\t\t\t\td[j] = n;\n\t\t\t\tn = e[i];\n\t\t\t\te[i] = e[j];\n\t\t\t\te[j] = n;\n\t\t\t}\n\t\t} \n\t}\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcout << a[i] << b[i] << c[i] << d[i] << e[i] << ' ';\n\t}\n}",
            1587610072.8466177,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "肖翎予",
            "#include <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nint main() {\n\tint judge = 0, n = 0;\n\tchar str[1000], s[40][25] = {0},temp[25],c;\n\tint i,j;\n\tcin.get(str,1000);\n\tfor(i = 0; (c = str[i]) != '\\0'; i++) {\n\t\tif(c == ' ') judge = 0;\n\t\telse {\n\t\t\t if(judge == 0) {\n\t\t\t\tj = 0;\n\t\t\t\tn++;\n\t\t\t\tjudge = 1;\n\t\t\t }\n\t\t\t s[n][j] = c;\n\t\t\t j++;\n\t\t}\n\t}\n\tfor(i = 1; i < n + 1; i++) {\n\t    for(j = 2; j < n - i + 1; j++) {\n\t\t\tif(strcmp(s[j],s[j - 1]) < 1) {\n\t\t\t   strcpy(temp, s[j - 1]);\n\t\t\t   strcpy(s[j - 1], s[j]);\n\t\t\t   strcpy(s[j], temp);\n\t\t\t}\n\t\t}\n\t}\n\tfor(i = 1; i < n + 1; i++) {\n\t\tcout << s[i] << \" \";\n\t}\n}",
            1587612447.5154932,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "施昊成",
            "#include <iostream>\n#include<cstring>\nusing namespace std;\n\n\nint main() {\nstring a[10];\nfor (int i = 0; i <10 ; ++ i) {\n\tcin>>a[i];\n}\n for (int i = 0; i < 10; ++ i){\n\t for (int j=i+1 ; j<10 ; ++ j)  {\n\t\t if(a[i][0]-a[j][0]>0){\n\t\tstring temp;\n\t\ttemp=a[i];\n\t\ta[i]=a[j];\n\t\ta[j]=temp;\n\t\t }\n\t\t else if(a[i][0]-a[j][0]==0){\n\t\t\t if(a[i][1]-a[j][1]>0){\n\t\t\tstring temp;\n\t\ttemp=a[i];\n\t\ta[i]=a[j];\n\t\ta[j]=temp;\n\t\t }\n\t }\n }\n\t  \n}for (int i = 0; i <10 ; ++ i) {\n\t\t  cout << a[i]<<\" \";\n\t  }\n\tcout<<endl;}",
            1587611485.1715665,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "万金诚",
            "#include <iostream>\nusing namespace std;\nint main(){\n\tchar **a=new char* [3];\n\tfor(int i=0;i<3;i++){\n\t\ta[i]=new char[50];\n\t\tcin>>a[i];\n\t}\n\tfor(int i=2;i>=0;i--){\n\t\tcout<<a[i]<<' ';\n\t\tdelete a[i];\n\t}\n\tdelete a;\n}",
            1587609915.0994031,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "熊英杰",
            "#include<string>\n#include<iostream> \n\nusing namespace std;\n\nint main()\n{\n  string s1,s2,s3;\n  cin>>s1>>s2>>s3;\n  cout<<s3<<\" \"<<s2<<\" \"<<s1<<endl;\n  return 0;\n}",
            1587610017.9354239,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "孙晨景",
            "#include<iostream>\nusing namespace std;\n\tint main(){\n\t\tchar a[3][20]={0};\n\t\tfor(int i=0;i<3;i++){\n\t\t\tscanf(\"%s\",a[i]);\n\t\t}\n\t\tfor(int j=2;j>=0;j--){\n\t\t\tprintf(\"%s \",a[j]);\n\t\t}\n\t}",
            1587609955.7689934,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "汪艺凡",
            "#include <iostream>\nusing namespace std;\n\nint main()\n{\nconst int N = 10;\nchar ch[N][80];\nint k;\nint index;\nchar t[80];\nint i;\n\nfor( i = 0; i < N; i++)\n{\ncin >> ch[i];\n}\n\n\nfor ( k = 0; k < N-1; k++)\n{\nindex = k;\nfor (i = k+1; i < N; i++)\nif(strcmp( ch[i],ch[index]) < 0)\nindex = i;\nstrcpy(t, ch[index]);\nstrcpy(ch[index], ch[k]);\nstrcpy(ch[k], t);\n}\n\n\nfor (i = 0; i < N; i++)\ncout << ch[i]<< ' ';\n}\n",
            1587610559.0194688,
            100,
            "In file included from main.cpp:1:0:\nsource.cpp: In function ‘int main()’:\nsource.cpp:23:27: error: ‘strcmp’ was not declared in this scope\n if(strcmp( ch[i],ch[index]) < 0)\n                           ^\nsource.cpp:25:20: error: ‘strcpy’ was not declared in this scope\n strcpy(t, ch[index]);\n                    ^\n"
        ],
        [
            "测试2",
            "涂涵",
            "#include <iostream>\nusing namespace std;\n\nint main(){\n    char c[10][5];\n\tfor(int i=0;i<10;i++){\n        for(int k=0;k<5;k++){\n            cin >> c[i][k];\n\t\t}\n\t}\n\tfor(int i=0;i<10;i++){\n\t\tfor(int k=0;k<9;k++){\n             for(int l=0;l<5;l++){\n                 if(c[k][l]>c[k+1][l]){\n                     char s[5];\n\t\t\t\t\t for(int o=0;o<5;o++) s[o]=c[k][o];\n\t\t\t\t\t for(int o=0;o<5;o++) c[k][o]=c[k+1][o];\n\t\t\t\t\t for(int o=0;o<5;o++) c[k+1][o]=s[o];\n\t\t\t\t\t break;\n\t\t\t\t }\n\t\t\t\t if(c[k][l]<c[k+1][l]) break;\n\t\t\t }\n\t\t}\n\t}\n\tfor(int i=0;i<10;i++){\n        for(int k=0;k<5;k++){\n            cout <<  c[i][k];\n\t\t}\n\t\tcout <<\" \";\n\t}\n}",
            1587610551.1191,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "马超",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint sort(char * a,char * b){\n\tint i;\n\tint la = strlen(a);\n\tint lb = strlen(b);\n\tint minlen;\n\tif(la >= lb) minlen = lb;\n\telse minlen = la;\n\tfor(i = 0;i < minlen;i ++){\n\t\t\n\t\tif(a[i] < b[i] || a[i] == ' '){\n\t\t\treturn 0;\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i] > b[i] || b[i] == ' '){\n\t\t\treturn 1;\n\t\t\tbreak;\n\t\t}\n\t\tif(a[i] == b[i]) continue;\n\t}\n}\n\nvoid swap(char *&a,char* &b) {\n\tchar *temp;\n\ttemp=a;\n\ta=b;\n\tb=temp;\n}\n\nint main() {\n\tchar s[10][50];\n\tint j = 0,i = 0;\n\tint n = 10;\n\twhile (n --){\n\t\tcin >> s[n];\t\n\t}\n\tfor (i = 0; i < 10; ++ i) {\n\t\tfor (j = i+1; j < 10; ++ j){\n\t\t\tif(sort(s[i],s[j]) == 1){\n\t\t\t\tswap(s[i],s[j]);\n\t\t\t}\n\t\t} \n\t}\n\tfor (i = 0; i < 10; ++ i) {\n\t\tcout << s[i] << ' ';\t\n\t}\n}",
            1587610534.655459,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "唐杰",
            "#include <iostream>\n#include <string.h>\nusing namespace std;\n//读入10个单词，并排序输出\nint main(){\n\tchar arr[10][20];\n\tfor (int i = 0;i < 10; ++ i){\n\t\tfor (int j = 0;; ++ j){\n\t\t\tchar c;\n\t\t\tcin >> c;\n\t\t\tif(c == '0' || c == ' '|| c == EOF){\n\t\t\t\tarr[i][j] = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse arr[i][j] = c;\n\t\t} \n\t} \n\tfor (int i = 0; i < 9; ++ i){\n\t\tfor (int j = i + 1; j < 10; ++ j){\n\t\t\tif(strcmp(arr[i], arr[j]) > 0){\n\t\t\t\tchar brr[20];\n\t\t\t\tstrcpy(brr, arr[i]);\n\t\t\t\tstrcpy(arr[i], arr[j]);\n\t\t\t\tstrcpy(arr[j], brr);\n\t\t\t}\n\t\t} \n\t} \n\tfor (int i = 0; i < 10; ++ i){\n\t\tcout << arr[i] << ' ';\n\t} \n}",
            1587610989.0906131,
            0,
            "Invalid include: <string.h>"
        ],
        [
            "测试2",
            "夏丕浪",
            "#include <iostream> \nusing namespace std;\n#include <cstring>\n\nint main() {\n \tchar a[10][10];\n\tchar b[10];\n\tfor(int i = 0; i < 10; ++ i){\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 9; i > 0; -- i) {\n\t\tfor (int j = 0; j < i; ++ j)  {\n\t\t\tint c = strcmp(a[j], a[j + 1]);\n\t\t\tif(c > 0) {\n\t\t\t\tstrcpy(b , a[j]);\n\t\t\t\tstrcpy(a[j], a[j + 1]);\n\t\t\t\tstrcpy(a[j+ 1], b);\n\t\t\t}\n\t\t}\n\t} \n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcout << a[i] << ' ';\n\t} \n}",
            1587611629.4411721,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "熊英杰",
            "#include<string>\n#include<iostream> \nusing namespace std;\nstring s[12];\n\nint main()\n{\n   for(int i=1;i<=10;i++)\n       cin>>s[i];\n   for(int i=1;i<10;i++)\n   {\n     for(int j=i+1;j<=10;j++)\n     {\n       if(s[j]<s[i])\n       {\n        string tmp=s[i];\n        s[i]=s[j];\n        s[j]=tmp;\n       }\n    }\n }\n   for(int i=1;i<=9;i++)\n       cout<<s[i]<<\" \";\n   cout<<s[10]<<endl;\n return 0;\n}",
            1587610942.0914688,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "湯仙兒",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct comp{\n\tchar str[6] = {0};\n};\n\nint main() {\n\tstruct comp word[10];\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcin >> word[i].str;\n\t}\n\tchar n[6];\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tfor (int j = 0; j < 9; ++ j) {\n\t\t\tif(*(word[j]).str > *(word[j + 1]).str) {\n\t\t\t\tn[6] = *(word[j]).str;\n\t\t\t\t*(word[j]).str = *(word[j + 1]).str;\n\t\t\t\t*(word[j + 1]).str = n[6];\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcout << word[i].str << ' ';\n\t}\n}",
            1587613166.1474707,
            50,
            "# 答案不正确\n\n# 随机输入:\nEEKRK DHQBW VICRF BUXLM VHIWP GCLLX WLXZB JBCUI OZWEP FRNID \n\n# 参考答案:\nBUXLM DHQBW EEKRK FRNID GCLLX JBCUI OZWEP VHIWP VICRF WLXZB \n\n# 我的答案:\nBEKRK DHQBW EICRF FUXLM GHIWP JCLLX OLXZB VBCUI VZWEP WRNID "
        ],
        [
            "测试2",
            "王冠权",
            "#include<iostream>\nusing namespace std;\n#include<string>\n//\nint main() {\n\tstring word[10];\n\tfor (int i = 0;i < 10;i++) {\n\t\tcin >> word[i];\n\t}\n\tfor (int i = 0;i < 10;i++) {\n\t\tfor (int j = i;j < 10;j++) {\n\t\t\tif (word[i] > word[j]) {\n\t\t\t\tstring temp = word[i];\n\t\t\t\tword[i] = word[j];\n\t\t\t\tword[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0;i < 10;i++) {\n\t\tcout << word[i] << \" \";\n\t}\n\tcout << endl;\n\treturn 0;\n}",
            1587610230.8194675,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "伍海珊",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\n\nint main(){\n\tchar words[10][10];\n\n\tfor(int i=0; i<10; ++i)\n        scanf(\"%s\",words[i]);\n\n    for(int i=0; i<10; ++i){\n        for(int j=i+1; j<10; ++j){\n            if(strcmp(words[i],words[j])>0){\n                char t[10];\n                strcpy(t,words[j]);\n                strcpy(words[j],words[i]);\n                strcpy(words[i],t);\n            }\n        }\n    }\n\n    for(int i=0; i<10; ++i)\n        cout << words[i] << ' ';\n}",
            1587610261.8394616,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "唐晨轩",
            "#include<iostream>\n#include<cstring>\n#include<cmath>\n#include <string>\nusing namespace std;\nint main()\n{\n    string word[100];\n    for(int i = 0; i < 10; i++){\n        cin >> word[i];\n\t}\n    \n\tfor(int i = 0; i < 10; i++){\n\t\tfor(int j = i+1; j < 10; j++){\n\t\t\tif(word[i] > word[j]){\n\t\t\t\tstring mid = word[i];\n\t\t\t\tword[i] = word[j];\n\t\t\t\tword[j] = mid;\n\t\t\t}\n\t\t}\n\t}\n\t\n    for(int i = 0; i < 9; i++){\n        cout << word[i] << \" \";\n\t}\n    cout << word[9]<<endl;\n    return 0;\n}",
            1587611135.9071186,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "邵震东",
            "#include <iostream>\n#include <string>\n\nint main()\n{\n    const int ArSize = 10;\n    std::string words[ArSize];\n    for (int i = 0; i < ArSize; i++) {\n        std::cin >> words[i];\n    }\n    for (int i = 0; i < ArSize; i++) {\n        for (int j = 0; j < ArSize - 1; j++) {\n            if (words[j] > words[j + 1]) {\n                std::string temp = words[j];\n                words[j] = words[j + 1];\n                words[j + 1] = temp;\n            }\n        }\n    }\n    for (int i = 0; i < ArSize; i++) {\n        std::cout << words[i] << ' ';\n    }\n}",
            1587611754.415408,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "潘小健",
            "#include <iostream>\n#include <vector>\n#include <iomanip>\n#include <string>\nusing namespace std;\n\nint main(){\n\tstring words[10];\n\tfor (int i = 0; i < 10; ++i)\n\t{\n\t\tcin >> words[i];\n\t}\n\t// sort(words[0],words[10],cmp);\n\n\tfor (int i = 0; i < 10; ++i)\n\t{\n\t\tfor (int j = 0; j < 9-i; ++j)\n\t\t{\n\t\t\tif(words[j]>words[j+1]){\n\t\t\t\tstring tmp=words[j];\n\t\t\t\twords[j]=words[j+1];\n\t\t\t\twords[j+1]=tmp;\n\t\t\t}\n\n\t\t}\n\t}\n\tfor (int i = 0; i < 10; ++i)\n\t{\n\t\tcout <<words[i]<<' ';\n\t}\n\n}\n",
            1587610496.923453,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "彭瑞洲",
            "#include <iostream>\nusing namespace std;\n#define Max 1001\nint main() {\n\tchar word1[Max] = {0};\n\tchar word2[Max] = {0};\n\tchar word3[Max] = {0};\n\tcin >> word1 >> word2 >> word3;\n\tcout << word3<<' '<< word2<<' '<< word1<<' '<< endl;\n}",
            1587610589.0466092,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "潘思晗",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main(){\n\tint n=10;\n\tstring word[10];\n\tfor(int i=0;i<n;i++) cin >> word[i];\n\t\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=1;j<n-i;j++){\n\t\t\tif(word[j] < word[j-1]){\n\t\t\t\tstring temp = word[j-1];\n\t\t\t\tword[j-1] = word[j];\n\t\t\t\tword[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfor(int i=0;i<n;i++) cout<<word[i]<<' ';\n\t\n\treturn 0;\n}",
            1587611299.4485102,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "孙晨景",
            "#include<iostream>\nusing namespace std;\nint strcmp(char *src,char *dst){\n    int ret=0;\n    while(!(ret = *(unsigned char *)src - *(unsigned char *)dst) && *dst)\n        ++src,++dst;\n    if(ret<0)\n        ret=-1;\n    else if(ret>0)\n        ret=1;\n    return(ret);\n}\n\tint main(){\n\t\tchar a[10][20]={0};\n\t\tfor(int i=0;i<10;i++){\n\t\t\tscanf(\"%s\",a[i]);\n\t}\n\t\t\tchar *temb;\n\t\t\tfor(int k=0;k<10;k++){\n\t\t\t\tfor(int l=0;l<10-k-1;l++){\n\t\t\t\t\tif(strcmp(a[l]，a[l+1])>0){\n\t\t\t\t\t\ta[l]=temb;\n\t\t\t\t\t\ta[l]=a[l+1];\n\t\t\t\t\t\ta[l+1]=temb;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<10;i++){\n\t\t\t\tprintf(\"%s \",a[i]);\n\t\t\t}\n\t\t}\n",
            1587610710.2053826,
            50,
            "In file included from main.cpp:1:0:\nsource.cpp:21:6: error: stray ‘\\357’ in program\n      if(strcmp(a[l]，a[l+1])>0){\n      ^\nsource.cpp:21:6: error: stray ‘\\274’ in program\nsource.cpp:21:6: error: stray ‘\\214’ in program\nsource.cpp: In function ‘int main()’:\nsource.cpp:21:23: error: expected ‘)’ before ‘a’\n      if(strcmp(a[l]，a[l+1])>0){\n                       ^\nsource.cpp:21:29: error: too few arguments to function ‘int strcmp(char*, char*)’\n      if(strcmp(a[l]，a[l+1])>0){\n                             ^\nsource.cpp:3:5: note: declared here\n int strcmp(char *src,char *dst){\n     ^\nsource.cpp:22:11: error: incompatible types in assignment of ‘char*’ to ‘char [20]’\n       a[l]=temb;\n           ^\nsource.cpp:23:11: error: invalid array assignment\n       a[l]=a[l+1];\n           ^\nsource.cpp:24:13: error: incompatible types in assignment of ‘char*’ to ‘char [20]’\n       a[l+1]=temb;\n             ^\n"
        ],
        [
            "测试2",
            "宋力舟",
            "#include <iostream>\n#include <string>\n#include<vector>\nusing namespace std;\nint main() \n{\n\tvector<string> st;\n\tstring s;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcin >> s;\n\t\tst.push_back(s);\n\t}\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tfor (int j = 0; j < 9; j++)\n\t\t {\n\t\t if (st[j] > st[j + 1])\n\t\t {\n\t\t\t swap(st[j], st[j + 1]);\n\t\t }\n\t\t }\n\t}\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tcout <<st[i] << \" \";\n\n\t}\n}",
            1587610787.9752107,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王硕",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\nclass source\n{\n    public:\n        source(){};\n        ~source(){};\n        void set_string();\n    private:\n        char a[10][10];\n};\nvoid source::set_string()\n{\n    for(int i=0;i<10;i++)cin >> a[i];\n    char temp[10];\n\tfor(int i=0;i<9;i++){\n\t\tfor(int j=i+1;j<10;j++){\n\t\t\tif(strcmp(a[i],a[j])>=0){\n\t\t\t\tstrcpy(temp,a[i]);\n\t\t\t\tstrcpy(a[i],a[j]);\n\t\t\t\tstrcpy(a[j],temp);\n\t\t\t}\n\t\t}\n\t};\n\tfor(int i=0;i<10;i++)cout << a[i] << \" \";\n\tcout << endl; \n}\nint main(){\n\tsource acs;\n\tacs.set_string();\n\treturn 0;\n}",
            1587610798.9315622,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王馨怡",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\nint main() {\n\tstring arr[10];\n\tint i=0;\n\tfor(i=0;i<10;i++) cin >> arr[i];\n\tfor(i=0;i<9;i++){\n\t\tfor(int j=0;j<9-i;++j){\n\t\t\tif(arr[j]>arr[j+1]){\n\t\t\t\tstring temp=arr[j];\n\t\t\t\tarr[j]=arr[j+1];\n\t\t\t\tarr[j+1]=temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(i=0;i<10;i++) cout<<arr[i]<<\" \";\n\tcout<<endl;\n}",
            1587611044.7393558,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "唐浩",
            "#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n    string s[10];\n\tfor(int i = 0;i < 10;++ i)\n\t\ts[i] = \"\";\n    for(int i = 0;i < 10;++ i)\n        cin>>s[i];\n    for(int i = 0;i < 10;++ i)\n        for(int j = 0;j < 9;++ j)\n            if(s[j].compare(s[j+1])>0){\n                string d = s[j];\n                s[j] = s[j + 1];\n                s[j + 1] = d;\n\t\t\t}\n    for(int i = 0;i < 10;++ i)\n        cout<<s[i]<<' ';\n    cout<<endl;\n}",
            1587612286.809271,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "彭瑞洲",
            "#include <iostream>\nusing namespace std;\n#include <cstring>\n#define max 1001\nint main(){\n\tchar group[10][max];\n\tfor (int i = 0; i < 10; ++ i) \n\t\tcin >> group[i];\n\tfor (int i = 0; i < 10; ++ i){\n\t\tfor (int j = 0; j < 9; ++ j){\n\t\t\tif(strcmp(group[j],group[j + 1]) > 0){\n\t\t\t\tchar copy[max] = {0};\n\t\t\t\tstrcpy(copy,group[j]);\n\t\t\t\tstrcpy(group[j],group[j + 1]);\n\t\t\t\tstrcpy(group[j + 1], copy);\n\t\t\t}\n\t\t} \n\t}\n\tfor (int i = 0; i < 10; ++ i) \n\t\tcout << group[i] << ' ';\n}",
            1587611451.1274548,
            100,
            "# 答案正确"
        ],
        [
            "测试1",
            "王馨怡",
            "#include <iostream>\nusing namespace std;\nint main () {\n\tstring a[3];\n\tfor(int i=0;i<3;i++){\n\t\tcin>>a[i];\n\t}\n\tfor(int i=2;i>=0;i--){\n\t\tcout<<a[i]<<\" \";\n\t}\n\tcout<<endl;\n}",
            1587611400.9389646,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "吴浩冬",
            "#include <iostream> \n#include <cstring>\nusing namespace std;\nint main() {\nstring s[10];\nstring temp;\nfor(int i = 0;i < 10;i++) {\n\ts[i] = new char[20];\n\tcin >> s[i];\n}\nfor (int i = 0;i < 10;i++) {\n\tfor (int j = i;j < 10;j++) {\n\t\tif(s[i] > s[j]) {\n\t\t    temp = s[i];\n\t\t    s[i] = s[j];\n\t\t    s[j] = temp;\n\t\t}\n\t}\n}\nfor (int i = 0;i < 10;i++) {\n\tcout << s[i] << \" \";\n}\n}",
            1587611841.659593,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "王晓龙",
            "#include<iostream>\n#include<string>\n#include<cstring>\nusing namespace std;\nchar sorted(int n,char *words);   //冒泡排序\n\nmain()\n{\n    char words[10][46];          //最长的一个单词45个字母\n    int i;\n\n\n    for(i=0;i<10;i++)\n     {\n        cin >> words[i];\n        if (words[i][1] == ' ' && words[i][0] == ' ')\n            break;\n     }\n    n=10;\n    sorted(n,*words);\n}\n\nchar sorted(int n,char *words)   //冒泡排序\n{\n\n    char exwords[n][46];\n    int j,k,nm,fuck;\n    char flag[46];\n    for(j=0;j<n+1;j++)\n       for(k=0;k<46;k++)\n        exwords[j][k] = *(words+46*j+k);\n\n    for(j=0;j<n-1;j++)\n        for(k=0;k<n-1-j;k++)\n            {\n                for(nm=0;nm<46;nm++)\n                    {\n                        if(exwords[k][nm]<exwords[k+1][nm])\n                            break;\n                        if(exwords[k][nm]==exwords[k+1][nm])\n                            continue;\n                        if(exwords[k][nm]>exwords[k+1][nm])\n                           {\n\n                                for(fuck=0;fuck<46;fuck++)\n                                    {\n                                        flag[fuck] = exwords[k][fuck];\n                                        exwords[k][fuck] = exwords[k+1][fuck];\n                                        exwords[k+1][fuck] = flag[fuck];\n                                    }\n                                break;\n                           }\n\n\n\n\n\n\n                    }\n\n\n            }\n\n    for(j=0;j<n+1;j++)\n        cout << exwords[j] <<endl;\n\n\n}\n",
            1587612077.4274936,
            50,
            "In file included from main.cpp:1:0:\nsource.cpp: In function ‘int main()’:\nsource.cpp:19:5: error: ‘n’ was not declared in this scope\n     n=10;\n     ^\n"
        ],
        [
            "测试2",
            "潘文轩",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nchar words[10][20];\n\nvoid swap1(char * a, char * b) {\n    char temp[20];\n    memcpy(temp, a, sizeof(a));\n    memcpy(a, b, sizeof(a));\n    memcpy(b, temp, sizeof(temp));\n}\n\nbool compare(char * a, char * b) {\n    int len_a = strlen(a);\n    int len_b = strlen(b);\n    if(len_a != len_b) {\n        return len_a < len_b;\n    }\n    int n = 0;\n    while(n < len_a) {\n        if(a[n] != b[n]) return a[n] < b[n];\n        n ++;\n    }\n    return false;\n}\n\nint main() {\n    memset(words, 0, sizeof(words));\n    char word[20];\n    int n = 0;\n    while(cin >> word) {\n        memcpy(words[n ++], word, sizeof(word));\n    }\n    for(int i = 0; i < n; i ++) {\n        char * min = words[i], * now = words[i];\n        for(int j = i + 1; j < n; j ++) {\n            if(compare(words[j], min)) {\n                min = words[j];\n            }\n        }\n        swap1(now, min);\n    }\n    for(int i = 0; i < n; i ++) {\n        cout << words[i];\n        if(i != n - 1) cout << ' ';\n    }\n    cout << endl;\n\treturn 0;\n}",
            1587612319.5314946,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "綦袁璨然",
            "#include<string>\n#include<iostream>\nusing namespace std;\n\nmain(){\n    string words[5];\n    int i;\n    char word[5][10];\n    for(i = 1;i <= 10;i ++){\n         cin >> words[i];\n    }\n    for(i = 0;i <= 10;i ++)\n        cout << words[i] << endl;\n}\n",
            1587613010.351387,
            0,
            "Segmentation fault (core dumped)\n"
        ],
        [
            "1.1 (C++)",
            "马淙升",
            "\nclass Matrix5x5{\n\tpublic :\n\tdouble num[5][5];\n\tMatrix5x5() {\n\t\tfor(int i = 0;i < 5;++ i) \n\t\t\tfor(int j = 0;j < 5;++ j) num[i][j] = 0;\n\t}\n\tvoid set(int a,int b,double x) {\n\t\tnum[a][b] = x;\n\t}\n\tdouble get(int a,int b) {\n\t\treturn num[a][b];\n\t}\n\tMatrix5x5& operator + (Matrix5x5 a) {\n\t\tfor(int i = 0;i < 5;++ i)\n\t\t\tfor(int j = 0;j<5;++ j)\n\t\t\t\tthis->num[i][j] = this->num[i][j] + a.num[i][j];\n\t\treturn *this;\n\t}\n};",
            1587697466.8790927,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "廖雨轩",
            "#include <cstring>\nclass Matrix5x5\n{\npublic:\n    double matrix[5][5];\n    Matrix5x5()\n    {\n        memset(matrix, 0, sizeof(matrix));\n    }\n    double get(int i, int j)\n    {\n        return matrix[i][j];\n    }\n    void set(int i, int j, double val)\n    {\n        matrix[i][j] = val;\n    }\n\t    Matrix5x5 operator+(Matrix5x5 & m2)\n    {\n        for(int i = 0; i < 5; i++)\n            for(int j = 0; j < 5; j++)\n            {\n                double t = this->get(i, j);\n                this->set(i, j, t + m2.get(i, j));\n            }\n        return *this;\n    }\n};",
            1587696854.4207976,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "谭鸿鑫",
            "class Matrix5x5{\n\tpublic:\n\tdouble value[5][5];\n\tdouble get(int a, int b){\n\t\treturn this->value[a][b];\n\t}\n\tvoid set(int a, int b, double x){\n\t\tthis->value[a][b] = x;\n\t}\n\tMatrix5x5(){\n\t\tfor (int i = 0; i < 5; ++ i){\n\t\t\tfor(int j = 0;j < 5;j ++){\n\t\t\t\tvalue[i][j] = 0;\n\t\t\t}\n\t\t} \n\t}\n\tMatrix5x5 operator + (Matrix5x5 & b){\n\t\tfor (int i = 0; i < 5; ++ i){\n\t\t\tfor(int j = 0;j < 5;j ++){\n\t\t\t\tthis->value[i][j] += b.value[i][j];\n\t\t\t}\n\t\t} \n\t\treturn *this;\n\t}\n};",
            1587696567.4514828,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "唐晨轩",
            "class Matrix5x5{\n\tpublic:\n\t\tdouble m[5][5];\n\t\tMatrix5x5(){\n\t\t\tfor(int i = 0; i < 5; i++){\n\t\t\t\tfor(int j = 0; j < 5; j++){\n\t\t\t\t\tm[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble get(int x, int y){\n\t\t\treturn this->m[x][y];\n\t\t}\n\t\tvoid set(int x, int y, double value){\n\t\t\tthis->m[x][y] = value;\n\t\t}\n};\n\nMatrix5x5 operator+(const Matrix5x5 &a,const Matrix5x5 &b){\n\tMatrix5x5 mid;\n\tfor(int i = 0; i < 5; i++){\n\t\tfor(int j = 0; j < 5; j++){\n\t\t\tmid.m[i][j] = a.m[i][j]+b.m[i][j];\n\t\t}\n\t}\n\treturn mid;\n}",
            1587698339.547485,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "谢浩林",
            "class Matrix5x5 {\n\tpublic:\n\tdouble mar[5][5] ;\n\tMatrix5x5() {\n\t\tfor(int i = 0 ; i < 5 ; i ++) {\n\t\t\tfor(int j = 0 ; j < 5 ; j ++) {\n\t\t\t\tmar[i][j] = 0 ;\n\t\t\t}\n\t\t}\n\t}\n\tvoid set(int x ,int y ,double value) {\n\t\tmar[x][y] = value ;\n\t}\n\tdouble get(int x , int y) {\n\t\treturn mar[x][y] ;\n\t}\n} ;\n\nMatrix5x5 operator + (Matrix5x5 &x, Matrix5x5 &y) {\n\t\tMatrix5x5 c ;\n\t\tfor(int i = 0 ; i < 5 ; i ++) {\n\t\t\tfor(int j = 0 ; j < 5 ; j ++) {\n\t\t\t\tc.mar[i][j] = x.mar[i][j]+y.mar[i][j] ;\n\t\t\t}\n\t\t}\n    return c;\n}\n\n",
            1587697040.2580686,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王志文",
            "class Matrix5x5\n{\n\tpublic:\n\tdouble arr[5][5];\n\tvoid set(int row, int col, double value){\n\t\tthis->arr[row][col] = value;\n\t}\n\tdouble get(int row, int col){\n\t\treturn this->arr[row][col];\n\t}\n\tMatrix5x5 operator + (Matrix5x5 & a){\n\t\tfor (int i = 0; i < 5; ++ i){\n\t\t\tfor(int j = 0; j < 5; ++j){\n\t\t\t\ta.arr[i][j] = a.arr[i][j] + this->arr[i][j];\n\t\t\t}\n\t\t}\n\t\t//a.arr[4][0] = 0;\n\t\treturn a;\n\t}\n};\n",
            1587698782.1872828,
            100,
            "# 答案不正确\n\n# 随机输入:\n6\n4\n4\n3\n\n\n# 参考答案:\n10 0 0 0 0 \n0 0 0 0 0 \n0 0 0 0 0 \n0 0 0 3 0 \n0 0 0 0 4 \n\n\n# 我的答案:\n10 0 0 0 0 \n0 0 0 0 0 \n0 0 0 0 0 \n0 0 0 3 0 \n0 0 9.88131e-324 0 4 \n"
        ],
        [
            "1.1 (C++)",
            "欧阳蓓",
            "class Matrix5x5\n{\n    public:\n\t Matrix5x5 ();\n   double get(int a, int b);\n   void  set(int a, int b, double c);\n    \n    private:\n    double matrix [5][5];\n    \n};\n\n Matrix5x5 :: Matrix5x5    ()\n\t {\n\t\tfor (int i = 0; i < 5; i++)\n    {\n        for (int j = 0; j < 5; j++)\n        {\n            set(i,j,0);\n        }\n    }\n\t }\ndouble Matrix5x5 ::  get(int a, int b)\n    {\n        return matrix[a][b];\n    }\n void Matrix5x5 :: set(int a, int b, double c)\n    {\n        matrix [a][b] = c;\n    }\nMatrix5x5 operator + ( Matrix5x5 & a,Matrix5x5 & b)\n{\n    Matrix5x5 c;\n    for (int i = 0; i < 5; i++)\n    {\n        for (int j = 0; j < 5; j++)\n        {\n            double ans = a.get(i,j) + b.get(i,j);\n            c.set(i,j,ans);\n        }\n    }\n    return c;\n}",
            1587745261.1640875,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "肖浩慧",
            "class Matrix5x5{\n\tpublic:\n\t\tdouble get(int i,int j){\n\t\t\treturn ans[i][j];\n\t\t}\n\t\tvoid set(int i,int j,double num){\n\t\t\tans[i][j] = num;\n\t\t}\n\t\tfriend Matrix5x5 operator + (Matrix5x5& one,Matrix5x5& two){\n\t\t\tMatrix5x5 ans;\n\t\t\tfor(int i = 0;i < 5;i++){\n\t\t\t\tfor(int j = 0;j < 5;j++){\n\t\t\t\t\tans.set(i,j,one.get(i,j) + two.get(i,j)); \n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t\tMatrix5x5(){\n\t\t\tfor(int i = 0;i < 5;i++){\n\t\t\t\tfor(int j = 0;j < 5;j++){\n\t\t\t\t\tans[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tprivate:\n\t\tdouble ans[5][5];\n};",
            1587697167.1995397,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "向鼎",
            "class Matrix5x5 {\npublic:\n    int matrix[5][5];\n\n    Matrix5x5(){\n        for (int row = 0; row < 5; ++row) {\n            for (int col = 0; col < 5; ++col) {\n                matrix[row][col] = 0;\n            }\n        }\n    }\n\n    double get(int row,int col){\n        return matrix[row][col];\n    }\n\n    void set(int row,int col,double value){\n        matrix[row][col] = value;\n    }\n\n};\n    Matrix5x5 operator +(Matrix5x5 & Ma, Matrix5x5 & Mb){\n        Matrix5x5 mc;\n        for (int row = 0; row < 5; ++row) {\n            for (int col = 0; col < 5; ++col) {\n                mc.matrix[row][col] = Ma.matrix[row][col] + Mb.matrix[row][col];\n            }\n        }\n        return mc;\n    }\n",
            1587696593.772524,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王著",
            "class Matrix5x5\n{public:\n double a[5][5];\n double get(int i,int j){\n\t return a[i][j];\n }\n void set(int i,int j,double x){\n\t a[i][j]=x;\n }\n Matrix5x5(){\n\t int i,j;\n\t for(i=0;i<5;i++){\n\t\t for(j=0;j<5;j++) a[i][j]=0;\n\t }\n }\n friend Matrix5x5 operator + (Matrix5x5& m1,Matrix5x5& m2){\n\t Matrix5x5 ret;\n\t int i,j;\n\t for (i = 0; i < 5; ++ i) {\n\t\t for(j=0;j<5;j++){\n\t\t\t ret.a[i][j]=m1.a[i][j]+m2.a[i][j];\n\t\t }\n\t }\n\t return ret;\n }\n};",
            1587696615.4460936,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "马浩宇",
            "class Matrix5x5 \n{\n\tpublic:\n\t\tdouble matrix[5][5];\n\t\tMatrix5x5() {\n\t\t\tfor(int i = 0 ; i < 5 ; i ++) {\n\t\t\t\tfor(int j = 0 ; j < 5 ; j ++) {\n\t\t\t\t\tmatrix[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvoid set(int i, int j, double value) {\n\t\t\tmatrix[i][j] = value;\n\t\t}\n\t\tdouble get(int i, int j) {\n\t\t\treturn matrix[i][j];\t\n\t\t}\n};\n\nMatrix5x5 operator + (Matrix5x5 &a, Matrix5x5 &b) {\n\tMatrix5x5 c;\n\tfor(int i = 0 ; i < 5 ; i ++) {\n\t\tfor(int j = 0 ; j < 5 ; j++) {\n\t\t\tc.matrix[i][j] = a.matrix[i][j] + b.matrix[i][j];\n\t\t}\n\t}\n\treturn c;\n}",
            1587696827.338006,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "许遵楠",
            "class Matrix5x5 {\n  public:\n    Matrix5x5() {\n        for (int i = 0; i < 5; ++i)\n            for (int j = 0; j < 5; ++j)\n                mat[i][j] = 0;\n    }\n    double get(int i, int j) {\n        return mat[i][j];\n    }\n    void set(int i, int j, double val) {\n        mat[i][j] = val;\n    }\n\n  private:\n    double mat[5][5];\n};\nMatrix5x5 operator+(Matrix5x5 &mat1, Matrix5x5 &mat2) {\n    Matrix5x5 tmp;\n    for (int i = 0; i < 5; ++i)\n        for (int j = 0; j < 5; ++j)\n            tmp.set(i, j, mat1.get(i, j) + mat2.get(i, j));\n    return tmp;\n}",
            1587696734.5736623,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "唐浩",
            "#include <iostream>\nusing namespace std;\nclass Matrix5x5{\n\tpublic:\n\tMatrix5x5(){\n\t\tfor(int i = 0;i< 5;++ i)\n\t\t\t\tfor(int j = 0;j<5;++ j)\n\t\t\t\t\t\tthis->a[i][j] = 0;\n\t}\n\tdouble a[5][5];\n\tvoid set(int i,int j,double f){\n\t\tthis->a[i][j] = f;\n\t}\n\tdouble get(int i,int j){\n\t\treturn this->a[i][j];\n\t}\n};\nMatrix5x5 operator + (Matrix5x5&s,Matrix5x5&f){\n\tMatrix5x5 c;\n\tfor(int i = 0;i< 5;++ i)\n\t\tfor(int j = 0;j<5;++ j)\n\t\t\tc.a[i][j] = s.a[i][j] + f.a[i][j];\n\treturn c;\n}",
            1587697294.455388,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "麦子丰",
            "#include <cstring>\n\nclass Matrix5x5{\n    private:\n        double matrix[5][5];\n    public:\n        Matrix5x5();\n        double get(int row,int col);\n        void set(int row, int col, double value);\n        Matrix5x5 operator + (Matrix5x5 & A);\n};\n\nMatrix5x5::Matrix5x5(){\n    memset(matrix,0,sizeof(matrix));\n}\n\ndouble Matrix5x5::get(int row, int col){\n    return matrix[row][col];\n}\n\nvoid Matrix5x5::set(int row, int col, double value){\n    matrix[row][col] = value;\n}\n\nMatrix5x5 Matrix5x5::operator + (Matrix5x5 & A){\n    Matrix5x5 res;\n    for(int i = 0; i < 5; i++){\n        for(int j = 0; j < 5; j++){\n            res.matrix[i][j] = A.matrix[i][j] + matrix[i][j];\n        }\n    }\n    return res;\n}",
            1587697042.487513,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "孙奥远",
            "#include <cstring>\nclass Matrix5x5\n{\nprivate:\n    int row;\n    int col;\n    double matrix[5][5];\n\npublic:\n    Matrix5x5();\n    ~Matrix5x5() {}\n    double get(int x, int y) { return matrix[x][y]; }\n    void set(int x, int y, double value);\n    Matrix5x5 operator+(Matrix5x5 &);\n};\n\nMatrix5x5::Matrix5x5()\n{\n    memset(this->matrix, 0, sizeof(this->matrix));\n}\n\nvoid Matrix5x5::set(int x, int y, double value)\n{\n    matrix[x][y] = value;\n}\n\nMatrix5x5 Matrix5x5::operator+(Matrix5x5 &m)\n{\n    Matrix5x5 ans;\n    for (int i = 0; i < 5; i++)\n    {\n        for (int j = 0; j < 5; j++)\n        {\n            ans.matrix[i][j] = this->matrix[i][j] + m.matrix[i][j];\n        }\n    }\n    return ans;\n}\n",
            1587696865.7914612,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "容浩民",
            "class Matrix5x5 {\npublic:\n    double matrix[10][10];\n    Matrix5x5();\n    double get(int row, int col);\n    void set(int row, int col, double val);\n    \n};\n\nMatrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2);\n\nMatrix5x5::Matrix5x5(){\n    for(int i = 0;i < 5;i++){\n        for(int j = 0;j < 5;j++){\n            matrix[i][j] = 0;\n        }\n    }\n}\n\ndouble Matrix5x5::get(int row, int col){\n    return matrix[row][col];\n}\n\nvoid Matrix5x5::set(int row, int col, double val){\n    matrix[row][col] = val;\n}\n\nMatrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2){\n    Matrix5x5  m3 ;\n    for(int i = 0;i < 5;i++){\n        for(int j = 0;j < 5;j++){\n            m3.matrix[i][j] = m1.matrix[i][j] + m2.matrix[i][j];\n        }\n    }\n    return m3;\n}",
            1587696870.7594023,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "吴渝峰",
            "class Matrix5x5 {\npublic:\n\tdouble a[5][5];\n\tMatrix5x5() {\n\t\tfor (int i = 0; i < 5; ++ i) {\n\t\t\tfor(int j = 0; j < 5; ++ j) {\n\t\t\t\ta[i][j] = 0;\n\t\t\t}\n\t\t} \n\t}\n\tdouble get(int row, int col) {\n\t\treturn a[row][col];\n\t}\n\tvoid set(int row, int col, double x) {\n\t\ta[row][col] = x;\n\t}\n};\n\nMatrix5x5 operator + (Matrix5x5 & s1, Matrix5x5 & s2) {\n\tMatrix5x5 ans;\n\tfor(int i = 0; i < 5; ++ i) {\n\t\tfor(int j = 0; j < 5; ++ j) {\n\t\t\tans.a[i][j] = s1.a[i][j] + s2.a[i][j];\n\t\t}\n\t}\n\treturn ans;\n}",
            1587697423.2115061,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "青悦",
            "#include<iostream>\n#include<cstring>\nclass Matrix5x5\n{\npublic:\n\tdouble mat[5][5];\n\tMatrix5x5(){\n\t\tmemset(mat,0,sizeof(mat));\n\t}\n\n    double get(int row, int col){\n    \treturn mat[row][col];\n    }\n    void set(int row, int col, double val){\n    \tmat[row][col] = val;\n    }\n};\n\nMatrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2){\n    Matrix5x5 *m3 = new Matrix5x5;\n\tmemset(m3,0,sizeof(Matrix5x5));\n    for(int row = 0; row < 5; row++){\n    \tfor(int col = 0; col < 5; col++){\n    \t\tm3->mat[row][col] = m1.mat[row][col] + m2.mat[row][col];\n    \t}\n    }\n    return (*m3);\n}",
            1587697228.9634695,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "万金诚",
            "#include<cstring>\nclass Matrix5x5{\n\tdouble a[5][5];\n\tpublic :\n\t\tMatrix5x5(){\n\t\t\tmemset(a,0,sizeof(a));\t\n\t\t}\n\t\tdouble get(int row,int col){\n\t\t\treturn a[row][col];\n\t\t}\n\t\tvoid set(int y,int x,double n){\n\t\t\ta[y][x]=n;\n\t\t}\n\t\tMatrix5x5 operator +(Matrix5x5 &b){\n\t\t\tMatrix5x5 temp;\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\t\ttemp.set(i,j,this->get(i,j)+b.get(i,j));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn temp;\n\t\t}\n};",
            1587697242.6512702,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "施天予",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\n\nclass Matrix5x5 {\npublic:\n    double a[5][5];\n    Matrix5x5() {\n        memset(a,0,sizeof(a));\n    }\n    double get(int x,int y) {\n        return a[x][y];\n    }\n    void set(int x,int y,double value) {\n        a[x][y] = value;\n    }\n    Matrix5x5 operator+(Matrix5x5 &p) {\n        Matrix5x5 ans;\n        for (int i = 0; i < 5; ++i) {\n            for (int j = 0; j < 5; ++j) {\n                ans.a[i][j] = p.get(i, j) + a[i][j];\n            }\n        }\n        return ans;\n    }\n};",
            1587697283.551376,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "韦媛馨",
            "class Matrix5x5 {\n\t\tdouble num[5][5];\npublic:\n\tMatrix5x5() {\n\tfor (int i = 0; i < 5; ++i) for (int j = 0; j < 5; ++j) \n\tthis->set(i,j,0);\n\t}\n\t\n\tdouble get(int row, int col) {\n\t\treturn num[row][col];\n\t}\n\tvoid set(int row, int col, double val) {\n\t\tnum[row][col] = val;\n\t}\n\tfriend Matrix5x5 operator+ (Matrix5x5& m1, Matrix5x5& m2);\n};\n\nMatrix5x5 operator+(Matrix5x5& m1, Matrix5x5& m2) {\n\tMatrix5x5 res;\n\tfor (int i = 0; i < 5; ++i) {\n\t\tfor (int j = 0; j < 5; ++j) {\n\t\t\tres.set(i,j, m1.get(i,j)+ m2.get(i,j));\n\t\t}\n\t}\n\treturn res;\n}\n",
            1587697305.1114047,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "謝敏華",
            "#include <iostream>\nusing namespace std;\nclass Matrix5x5{\npublic:\n\tdouble matrix[5][5];\n\tMatrix5x5(){\n\t\tfor(int row=0; row<5; row++)\n\t\tfor(int col=0; col<5; col++) this->matrix[row][col]=0;\n\t}\n\tdouble get(int row,int col){\n\t\treturn this->matrix[row][col];\n\t}\n\tvoid set(int row, int col, double value){\n\t\tthis->matrix[row][col]=value;\n\t}\n\n};\nMatrix5x5 operator + (Matrix5x5 &m1,Matrix5x5 &m2){\n\t\tMatrix5x5 m3;\n\t\tfor(int row=0; row<5; row++)\n\t\tfor(int col=0; col<5; col++) \n\t\t\tm3.matrix[row][col]=m1.matrix[row][col]+m2.matrix[row][col];\n\t\treturn m3;\n}",
            1587697410.587472,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "覃浩南",
            "struct Matrix5x5{\nprivate:\n    double m[5][5];\npublic:\n    Matrix5x5()\n\t{\n\t\tfor (int row = 0; row < 5; ++ row) {\n\t\t    for (int col = 0; col < 5; ++ col) {\n                this->m[row][col] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tdouble get(int x, int y){\n        return m[x][y];\n    }\n    \n    void set(int x, int y, double k){\n        m[x][y] = k;\n    }\n\n    Matrix5x5 operator+ (Matrix5x5 & x){\n        for (int row = 0; row < 5; ++ row) {\n\t\t    for (int col = 0; col < 5; ++ col) {\n                this->m[row][col] += x.m[row][col];\n\t\t\t}\n\t\t}\n\n        return *this;\n\t}\n};",
            1587697367.8514593,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "莫振威",
            "class Matrix5x5\n{\npublic:\n    double a[5][5];\n    Matrix5x5();\n    double get(int row, int col);\n    void set(int row, int col, double value);\n};\n\nMatrix5x5::Matrix5x5(){\n    for(int i = 0; i < 5; i++){\n        for(int j = 0; j < 5; j++){\n            a[i][j] = 0;\n        }\n    }\n}\n\ndouble Matrix5x5::get(int row, int col){\n    return a[row][col];\n}\n\nvoid Matrix5x5::set(int row, int col, double value){\n    a[row][col] = value;\n}\n\nMatrix5x5 operator+(Matrix5x5 &m1, Matrix5x5 &m2){\n    Matrix5x5 temp;\n    for(int i = 0; i < 5; i++){\n        for(int j = 0; j < 5; j++){\n            temp.a[i][j] = m1.a[i][j] + m2.a[i][j];\n        }\n    }\n    return temp;\n}",
            1587697983.7375245,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王子豪",
            "class Matrix5x5\n{\n\tpublic:\n\t\tdouble num[5][5];\n\tMatrix5x5(){\n\t\tfor(int i=0;i<5;i++){\n\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\tnum[i][j]=0;\n\t\t\t}\n\t\t}\n\t}\n\tdouble get(int i, int j){\n \treturn this->num[i][j];\n }\t\n void set(int i, int j, double v){\n \tthis->num[i][j]=v;\n }\nMatrix5x5 operator + (Matrix5x5 & m1){\n\tMatrix5x5 tmp;\n\tfor(int i=0;i<5;i++){\n\t\tfor(int j=0;j<5;j++){\n\t\t\ttmp.set(i,j,this->num[i][j]+m1.num[i][j]);\n\t\t}\n\t}\n\treturn tmp;\n}\n\n };\n ",
            1587699529.259406,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王子佳",
            "class Matrix5x5{\n\tpublic:\n\t\tdouble matrix[5][5];\n\t\tMatrix5x5(){\n\t\t\tfor (int x = 0; x < 5; ++ x){\n\t\t\t\tfor (int y = 0; y < 5; ++ y){\n\t\t\t\t\tmatrix[x][y] = 0;\n\t\t\t\t}\n\t\t\t} \n\t\t}\n\t\tdouble get(int row, int col){\n\t\t\treturn this->matrix[row][col];\n\t\t}\n\t\tvoid set(int a, int b, double c){\n\t\t\tthis->matrix[a][b] = c;\n\t\t}\n\t\tMatrix5x5 operator + (Matrix5x5 & m1);\n};\nMatrix5x5 Matrix5x5::operator + (Matrix5x5 & m1){\n\t\t\tMatrix5x5 ret;\n\t\t\tfor(int x = 0;x < 5;x ++){\n\t\t\t\tfor(int y = 0;y < 5;y ++){\n\t\t\t\t\tdouble p = m1.get(x,y)+this->get(x,y);\n\t\t\t\t\tret.set(x,y,p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t}",
            1588078310.4392636,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "苏比努尔·玉山江",
            "class Matrix5x5{\n\tpublic :\n\t\tdouble get(int a, int b){\n\t\t\treturn matrix[a][b] ;\n\t\t}\n\n\t\tvoid set(int a , int b, double num){\n\t\t\tmatrix[a][b] = num ;\n\t\t}\n\tprivate:\n\tdouble matrix[5][5] ;\n};\n\nMatrix5x5 operator + (Matrix5x5 & a, Matrix5x5 & b ){\n\tMatrix5x5 c ;\n\tfor (int i = 0 ; i < 5 ; ++ i){\n\t\tfor (int j = 0 ; j < 5 ; ++ j){\n\t\t\tdouble temp = a.get(i,j) + b.get(i,j) ;\n\t\t\tc.set(i,j,temp) ;\n\t\t}\n\t}\n\treturn c ;\n}",
            1587698013.5451791,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "潘文轩",
            "#include <cstring>\n\nclass Matrix5x5 {\npublic:\n\tdouble m[5][5];\n    double get(int, int);\n    void set(int, int, double);\n\tMatrix5x5() {\n\t\tmemset(m, 0, sizeof(m));\n\t}\n};\n\ndouble Matrix5x5::get(int r, int c) {\n\treturn m[r][c];\n}\n\nvoid Matrix5x5::set(int r, int c, double value) {\n\tm[r][c] = value;\n}\n\nMatrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2) {\n\tMatrix5x5 res;\n\tfor(int i = 0; i < 5; i ++) {\n\t\tfor(int j = 0; j < 5; j ++) {\n\t\t\tres.m[i][j] = m1.m[i][j] + m2.m[i][j];\n\t\t}\n\t}\n\treturn res;\n}",
            1587697823.3955503,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王浩歌",
            "\nclass  Matrix5x5{\n\tpublic:\n\t\tdouble get(int l, int c){\n\t\t\treturn a[l][c];\n\t\t}\n\t\tvoid set(int l, int c, double n){\n\t\t\ta[l][c]=n;\n\t\t}\n\t   int a[5][5]= {{0}};\n};\n\nMatrix5x5 operator + (Matrix5x5 &m1, Matrix5x5 &m2){\n\t\t\tMatrix5x5 m3;\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\t\tm3.a[i][j]=m1.a[i][j]+m2.a[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m3;\n\t\t}",
            1587698560.3549666,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "潘小健",
            "\nclass Matrix5x5\n{\n\tdouble matrix[5][5];\npublic:\n\tMatrix5x5();\n\tdouble get(int, int);\n\tvoid set(int, int, double);\n\tMatrix5x5 operator+(Matrix5x5&);\n};\n\nMatrix5x5::Matrix5x5(){\n\tfor (int i = 0; i < 5; ++i)\n\t\tfor (int j = 0; j < 5; ++j)\n\t\t\tmatrix[i][j]=0;\n}\n\ndouble Matrix5x5::get(int i,int j){\n\treturn matrix[i][j];\n}\n\nvoid Matrix5x5::set(int i,int j,double val){\n\tmatrix[i][j]=val;\n}\n\nMatrix5x5 Matrix5x5::operator+(Matrix5x5&other){\n\tMatrix5x5 result;\n\tfor (int i = 0; i < 5; ++i)\n\t\tfor (int j = 0; j < 5; ++j)\n\t\t\tresult.matrix[i][j]=other.matrix[i][j]+this->matrix[i][j];\n\treturn result;\n}\n",
            1587697600.027404,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "杨宗恺",
            "class Matrix5x5\n{\npublic:\n    Matrix5x5()\n    {\n        for (int i = 0; i < 5; ++i)\n        {\n            for (int j = 0; j < 5; ++j)\n            {\n                a[i][j] = 0;\n            }\n        }\n    }\n\n    double get(int row, int col)\n    {\n        return a[row][col];\n    }\n\n    void set(int row, int col, double value)\n    {\n        a[row][col] = value;\n    }\n\n    Matrix5x5 operator + (Matrix5x5 & t1)\n    {\n        Matrix5x5 t;\n        for (int i = 0; i < 5; ++i)\n        {\n            for (int j = 0; j < 5; ++j)\n            {\n                t.a[i][j] = a[i][j] + t1.a[i][j];\n            }\n        }\n        return t;\n    }\n\nprivate:\n    double a[5][5];\n};",
            1587697684.8284512,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王郅成",
            "#include <iostream>\n#include <cstring>\n\nusing namespace std;\n\nclass Matrix5x5\n{\npublic:\n    double a[5][5];\n    Matrix5x5()  {\n        for (int i = 0; i < 5; i++)\n        {\n            for (int j = 0; j < 5; j++)\n            {\n                a[i][j]=0;\n            }\n            \n        }\n    } \n    double get(int num_a,int num_b){\n        return this->a[num_a][num_b];\n    }\n    void set(int num_a,int num_b,double num_c){\n        this->a[num_a][num_b]=num_c;\n    }\n    Matrix5x5 operator + (Matrix5x5 &m1)\n    {\n        Matrix5x5 temp;\n        for (int i = 0; i < 5; i++)\n        {\n            for (int j = 0; j < 5; j++)\n            {\n                temp.a[i][j]=m1.a[i][j]+this->a[i][j];\n            }\n        }\n        return temp;\n    }\n};",
            1587698357.0628078,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王筝",
            "\nclass Matrix5x5{\n    public:\n        double arr[6][6];\n        Matrix5x5();\n        void set(int x, int y, double n);\n        double get(int x, int y);\n        \n};\n\nMatrix5x5::Matrix5x5(){\n    for (int i = 0; i < 6;i++)\n        for (int j = 0; j < 6;j++){\n            this->arr[i][j] = 0;\n        }\n}\n\n    double\n    Matrix5x5::get(int x, int y)\n{\n    return this->arr[x][y];\n}\n\nvoid Matrix5x5::set(int x,int y,double n){\n    this->arr[x][y] = n;\n}\n\nMatrix5x5 operator+(Matrix5x5 &m1, Matrix5x5 &m2){\n    Matrix5x5 result;\n    for (int i = 0; i < 5;i++)\n        for (int j = 0; j < 5;j++) {\n            result.arr[i][j] = m1.arr[i][j] + m2.arr[i][j];\n        }\n    return result;\n}",
            1587697776.583419,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王彬",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix5x5\n{\n\tpublic:\n\t\tdouble get(int num1, int num2)\n\t\t{\n\t\t\treturn matrix5x5[num1][num2];\n\t\t}\n\t\tvoid set(int num1, int num2, double value)\n\t\t{\n\t\t\tmatrix5x5[num1][num2] = value;\n\t\t}\n\t\tfriend Matrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2)\n\t\t{\n\t\t\tMatrix5x5 m;\n\t\t\tfor (int row = 0; row < 5; ++ row)\n\t\t\t{\n\t\t\t\tfor (int col = 0; col < 5; ++ col)\n\t\t\t\t{\n\t\t\t\t\tm.matrix5x5[row][col] = m1.matrix5x5[row][col] + m2.matrix5x5[row][col];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m;\n\t\t}\n\tprivate:\n\t\tint matrix5x5[6][6];\n};",
            1587702575.7268932,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "吴浩岚",
            "class Matrix5x5{\n\tpublic:\n\t\tdouble mat[5][5];\n\t\tMatrix5x5(){\n\t\tfor (int row = 0; row < 5; ++ row) {\n\t\t\t\tfor (int col = 0; col < 5; ++ col) {\n\t\t\t\t\tthis->mat[row][col] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble get(int row, int col){\n\t\t\treturn this->mat[row][col];\n\t\t}\n\t\tvoid set(int row, int col, double val){\n\t\t\tthis->mat[row][col] = val;\n\t\t}\n\t\tMatrix5x5 operator + ( Matrix5x5 & b){\n\t\t\tMatrix5x5 temp;\n\t\t\tfor (int row = 0; row < 5; ++ row) {\n\t\t\t\tfor (int col = 0; col < 5; ++ col) {\n\t\t\t\t\ttemp.mat[row][col] = this->mat[row][col]+b.mat[row][col];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn temp;\n\t\t}\n};\n\t\n\t\t",
            1587699912.4921393,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "魏星月",
            "class Matrix5x5 {\n\tpublic:\n\t\tdouble get(int x, int y) {\n\t\t\treturn a[x][y];\n\t\t}\n\t\n\t\tvoid set(int x, int y, double b) {\n\t\t\ta[x][y] = b;\n\t\t}\n\t\n\t\tMatrix5x5 operator + (const Matrix5x5 &m1) {\n\t\t\tMatrix5x5 temp;\n\t\t\tfor (int row = 0; row < 5; ++ row) {\n\t\t\t\tfor (int col = 0; col < 5; ++ col) {\n\t\t\t\t\ttemp.a[row][col] = this->a[row][col] + m1.a[row][col];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn temp;\n\t\t}\n\t\n\tprivate:\n\t\tdouble a[5][5] = {{0}, {0}, {0}, {0}, {0}};\n\t\t\n};",
            1587698810.0235686,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "伍海珊",
            "class Matrix5x5{\npublic:\n    Matrix5x5();\n    ~Matrix5x5(){};\n    double get(int, int);\n    void set(int, int, double);\n    Matrix5x5 operator + (Matrix5x5 &);\n\nprivate:\n    double m[5][5];\n};\n\nMatrix5x5::Matrix5x5(){\n    for(int i=0; i<5; ++i){\n        for(int j=0; j<5; ++j)\n            m[i][j]=0;\n    }\n}\n\ndouble Matrix5x5::get(int row,int col){\n    return m[row][col];\n}\n\nvoid Matrix5x5::set(int row,int col,double value){\n    m[row][col]=value;\n}\n\nMatrix5x5 Matrix5x5::operator+(Matrix5x5& a){\n    Matrix5x5 sum;\n\n    for(int i=0; i<5; ++i){\n        for(int j=0; j<5; ++j){\n            sum.m[i][j]=m[i][j]+a.m[i][j];\n        }\n    }\n\n    return sum;\n}",
            1587698200.9099538,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "熊英杰",
            "class Matrix5x5{\n  public:\n  Matrix5x5()\n  {\n   for(int i=0;i<5;i++)\n   {\n    for(int j=0;j<5;j++)\n     a[i][j]=0;\n   }\n  }\n  double get(int x,int y)\n  {\n   return a[x][y];\n  }\n  void set(int x,int y,double value)\n  {\n   a[x][y]=value;\n  }\n  friend Matrix5x5 operator+(const Matrix5x5 &m1,const Matrix5x5 &m2);\n  private:\n  double a[5][5];\n};\nMatrix5x5 operator+(const Matrix5x5 &m1,const Matrix5x5 &m2)\n{\n  Matrix5x5 m;\n  for(int i=0;i<5;i++)\n {\n  for(int j=0;j<5;j++)\n   m.a[i][j]=m1.a[i][j]+m2.a[i][j];\n }\n return m;\n}",
            1587698293.207508,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "邵震东",
            "class Matrix5x5{\n/*private:\n    double arr[5][5] = { 0 };\npublic:*/\npublic:\n\tdouble arr[5][5] = {{ 0 }};\n\n    double get(int x, int y)\n    {\n        return arr[x][y];\n    }\n    void set(int x, int y, double value)\n    {\n        arr[x][y] = value;\n    }\n    Matrix5x5 operator + (Matrix5x5 & m2)\n    {\n        Matrix5x5 m3;\n        for (int i = 0; i < 5; i++) {\n            for (int j = 0; j < 5; j++) {\n                m3.arr[i][j] = this->arr[i][j] + m2.arr[i][j];\n            }\n        }\n        return m3;\n    }\n};",
            1587698927.8193972,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "夏丕浪",
            "class Matrix5x5\n{\npublic:\n\t\n\tdouble get(int, int)\n\tvoid set(int, int, double)\n\t\n}",
            1587698576.8505194,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:5:21: error: expected ‘;’ at end of member declaration\n  double get(int, int)\n                     ^\nsource.cpp:6:27: error: expected ‘;’ at end of member declaration\n  void set(int, int, double)\n                           ^\nsource.cpp:8:1: error: expected ‘;’ after class definition\n }\n ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:25:10: error: no match for ‘operator+’ (operand types are ‘Matrix5x5’ and ‘Matrix5x5’)\n  m3 = m1 + m2;\n          ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::move_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\n"
        ],
        [
            "1.1 (C++)",
            "王振恺",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix5x5\n{\n\tpublic:\n\t\tdouble map[6][6];\n\tMatrix5x5()\n\t{\n\t\tfor (int i = 0; i < 5; ++ i)\n\t\t\tfor (int j = 0; j < 5; ++ j) \n\t\t\t\tthis->map[i][j] = 0;\n\t}\n\tdouble get(int a,int b)\n\t{\n\t\treturn this->map[a][b];\n\t}\n\tvoid set(int a, int b, double val)\n\t{\n\t\tthis->map[a][b] = val;\n\t\treturn;\n\t}\n\tMatrix5x5 operator + (Matrix5x5 & a)\n\t{\n\t\tMatrix5x5 myMatrix;\n\t\tfor (int i = 0; i < 5; ++ i)\n\t\t\tfor (int j = 0; j < 5; ++ j)\n\t\t\t\tmyMatrix.map[i][j] = a.map[i][j] + this->map[i][j];\n\t\treturn myMatrix;\n\t}\n};",
            1587700339.0511765,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "潘思晗",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix5x5{\n\tpublic:\n\t\tint mat[5][5];\n\t\tMatrix5x5(){\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\t\t\tthis->mat[i][j]=0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\tdouble get(int ro, int co){\n\t\t\treturn this->mat[ro][co];\n\t\t}\n\t\tvoid set(int r, int c, double val){\n\t\t\tmat[r][c]=val;\n\t\t}\n\t\tMatrix5x5 operator+ (Matrix5x5 &m){\n\t\t\tfor(int i=0;i<5;i++){\n\t\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\t\tthis->mat[i][j]=this->mat[i][j]+m.mat[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn *this;\n\t\t}\n};",
            1587699330.0055583,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "谢扬",
            "class Matrix5x5\n{\n\tprivate:\n\tdouble**matrix;\n\tconst int ArSize=5;\n\tpublic:\n\tMatrix5x5();\n\tMatrix5x5(double*const *m1,double*const*m2);\n    double get(int, int)const;\n    void set(int, int, double);\n    Matrix5x5 operator + (const Matrix5x5 &)const;\n    Matrix5x5&operator=(const Matrix5x5&);\n\t~Matrix5x5();\n};\nMatrix5x5::Matrix5x5()\n{\n\tmatrix=new double*[ArSize];\n\tfor (int i=0;i<ArSize;++i)\n\t{\n\t\tmatrix[i]=new double[ArSize]{};\n\t}\n}\nMatrix5x5::Matrix5x5(double*const *m1,double*const*m2)\n{\n\tmatrix=new double*[ArSize];\n\tfor (int i=0;i<ArSize;++i)\n\t{\n\t\tmatrix[i]=new double[ArSize]{};\n\t}\n\tfor (int row=0;row<ArSize;++row)\n\t{\n\t\tfor (int col=0;col<ArSize;++col)\n\t\t{\n\t\t\tmatrix[row][col]=m1[row][col]+m2[row][col];\n\t\t}\n\t}\n\t\n}\nMatrix5x5::~Matrix5x5()\n{\n\tfor (int i=0;i<ArSize;++i)\n\t{\n\t\tdelete[]matrix[i];\n\t}\n\tdelete[]matrix;\n}\ndouble Matrix5x5::get(int i, int j)const\n{\n\treturn matrix[i][j];\n}\n\nvoid Matrix5x5::set(int row, int col, double value)\n{\n\tmatrix[row][col]=value;\n}\nMatrix5x5 Matrix5x5::operator + (const Matrix5x5 & m)const\n{\n\treturn Matrix5x5(matrix,m.matrix);\n}\nMatrix5x5&Matrix5x5::operator=(const Matrix5x5&m)\n{\n\tif(this==&m)return *this;\n\tfor (int row=0;row<ArSize;++row)\n\t{\n\t\tfor (int col=0;col<ArSize;++col)\n\t\t{\n\t\t\tmatrix[row][col]=m.matrix[row][col];\n\t\t}\n\t}\n\treturn *this;\n}",
            1587699371.763365,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王锡铭",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix5x5{\n public:\n  double get(int row, int col){\n \t\treturn array[row][col];\n  }\n  void set(int row, int col, double num){\n  \t\tarray[row][col] = num;\n  }\n  friend Matrix5x5 operator + (Matrix5x5 & a, Matrix5x5 & b){\n   \t\tMatrix5x5 c;\n   \t\tfor (int i = 0; i < 5; ++ i){\n    \t\tfor (int j = 0;j < 5; ++j){\n     \t\tc.array[i][j] = a.array[i][j] + b.array[i][j];\n    \t\t}\n  \t\t }\n   \t\treturn c;\n  \t\t}\n private:\n  int array[6][6];\n};",
            1587703026.399417,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "涂涵",
            "class Matrix5x5{\n    public:\n\tdouble num[5][5];\n\tMatrix5x5();\n\tdouble get(int ,int);\n\tvoid set(int ,int ,double);\n\tMatrix5x5 operator + (Matrix5x5 &);\n};\n\nMatrix5x5::Matrix5x5(){\n    for(int i=0;i<5;i++){\n        for(int k=0;k<5;k++){\n            num[i][k]=0;\n\t\t}\n\t}\n}\ndouble Matrix5x5::get(int a,int b){\n     return this->num[a][b];\n}\n\nvoid Matrix5x5::set(int a,int b,double value){\n    this->num[a][b]=value;\n}\n\nMatrix5x5 Matrix5x5::operator + (Matrix5x5 & a){\n\tMatrix5x5 result;\n\tfor(int i=0;i<5;i++){\n        for(int k=0;k<5;k++){\n\t\t\tresult.num[i][k]=a.num[i][k]+this->num[i][k];\n\t\t}\n\t}\n\treturn result;\n}\n\n",
            1587700110.234828,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "谢小卉",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix5x5\n{\npublic:\n    double a[5][5];\n\t\n\tMatrix5x5(){\n\t\tfor(int i=0;i<5;++i){\n\t\t\tfor(int j=0;j<5;++j)\n\t\t\t\ta[i][j] = 0;\n\t\t}\n\t}\n\n    double get(int x,int y){\n        return a[x][y];\n    }\n    void set(int x,int y,double value){\n        this->a[x][y] = value;\n    }\n};\n\nMatrix5x5 operator+ (const Matrix5x5& m1,const Matrix5x5& m2){\n    Matrix5x5 m;\n    for(int i=0;i<5;++i){\n        for(int j=0;j<5;++j){\n            m.a[i][j] = m1.a[i][j] + m2.a[i][j];\n\t\t}\n    }\n\treturn m;\n}",
            1587702842.2633224,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王冠权",
            "#include <iostream>\nusing namespace std;\nclass Matrix5x5 {\npublic:\n\tdouble matrix[5][5];\n\tdouble get(int a, int b) {\n\t\treturn matrix[a][b];\n\t}\n\tvoid set(int a, int b, double c) {\n\t\tmatrix[a][b] = c;\n\t\t}\n\tMatrix5x5() {\n\t\tfor (int i = 0;i < 5;i++) {\n\t\t\tfor (int j = 0;j < 5;j++) {\n\t\t\t\tmatrix[i][j] = 0;\n\t\t\t}\n\t\t}\n\t}\n};\nMatrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2) {\n\tMatrix5x5 temp;\n\tfor (int row = 0;row < 5;++row) {\n\t\tfor (int col = 0;col < 5;++col) {\n\t\t\ttemp.matrix[row][col] = m1.matrix[row][col] + m2.matrix[row][col];\n\t\t}\n\t}\n\treturn temp;\n}",
            1587702921.779491,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "宋力舟",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix5x5{\n\npublic:\n\t\n\t Matrix5x5(){\n\t\t for (int i = 0; i < 5; ++ i) {\n\t\t\t for(int j = 0 ; j < 5 ; ++j){\n\t\t\t\t set (i , j , 0) ;\n\t\t\t }\n\t\t }\n\t }\n\t\n    double get(int a , int b){\n        return matrix[a][b] ;\n    }\n\n    void set(int a , int b , double c){\n        matrix[a][b] = c ;\n    }\n\t \n\t private:\n\t double matrix[5][5] ;\n};\n\nMatrix5x5 operator + ( Matrix5x5 & a,Matrix5x5 & b)\n{\n    Matrix5x5 c;\n    for (int i = 0; i < 5; i++)\n    {\n        for (int j = 0; j < 5; j++)\n        {\n            double ans = a.get(i,j) + b.get(i,j);\n            c.set(i,j,ans);\n        }\n    }\n    return c;\n}\n\n",
            1587701059.935694,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王晓龙",
            "class Matrix5x5{\n\t\n\tpublic:\n\tdouble  arr[5][5];\n\tdouble get(int row,int col){\n\t\t\n\t\treturn this->arr[row][col];\n\t}\n\tvoid set(int row ,int col, double value){\n\t\t\n\t\tthis->arr[row][col]=value;\n\t}\n    Matrix5x5 operator + (Matrix5x5 & a){\n\t\tfor (int i = 0; i < 5 ; ++ i){\n\t\t\tfor (int j = 0; j < 5 ; ++ j){\n\t\t\t\ta.arr[i][j] += this->arr[i][j];\n\t\t\t} \n\t\t} \n\t\treturn a;\n\t}\n};\n",
            1587702524.6353219,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "裴江博",
            "class Matrix5x5{\n    public:\n        double Matrix[5][5];\n        Matrix5x5(){\n            for (int row = 0; row < 5; ++ row) {\n\t\t        for (int col = 0; col < 5; ++ col) {\n\t\t\t       Matrix[row][col] = 0;   \n\t\t        }\n\t        }\n        }\n        double get(int a, int b){ return Matrix[a][b]; }\n        void set(int a, int b, double value){ Matrix[a][b] = value; }\n        Matrix5x5 operator + (Matrix5x5 & m1);\n        ~Matrix5x5(){\n\t\t\tfor (int row = 0; row < 5; ++ row) {\n\t\t        for (int col = 0; col < 5; ++ col) {\n\t\t\t       Matrix[row][col] = 0;   \n\t\t        }\n\t        }\n\t\t}\n};\nMatrix5x5 Matrix5x5::operator + (Matrix5x5 & m1){\n    Matrix5x5 result;\n    for (int row = 0; row < 5; ++ row) {\n        for (int col = 0; col < 5; ++ col) {\n\t\t\tresult.Matrix[row][col] = this->Matrix[row][col] + m1.Matrix[row][col];   \n\t\t}\n    }\n    return result;\n}",
            1587990999.8275037,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "彭瑞洲",
            "class Matrix5x5 {\n\tpublic:\n\t\tdouble  matrix[5][5] = {{0}};\n\t\tdouble get(int col,int row){\n\t\t\treturn matrix[col][row];\n\t\t}\n\t\tvoid set(int col,int row,double num){\n\t\t\tmatrix[col][row] = num;\n\t\t}\n\t\tMatrix5x5 operator + (Matrix5x5 & s2){\n\t\t\tMatrix5x5 res;\n\t\t\tfor (int i = 0; i < 5; ++ i) \n\t\t\t\tfor (int j = 0; j < 5; ++ j) \n\t\t\t\t\tres.matrix[i][j] = this->matrix[i][j] + s2.matrix[i][j];\n\t\t\treturn res;\n\t\t}\n};",
            1587713453.1273837,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王昌远",
            "#include <iostream>\nusing namespace std;\nclass Matrix5x5 {\npublic:\n double matrix[5][5];\n double get(int a, int b) {\n  return matrix[a][b];\n }\n void set(int a, int b, double c) {\n  matrix[a][b] = c;\n  }\n Matrix5x5() {\n  for (int i = 0;i < 5;i++) {\n   for (int j = 0;j < 5;j++) {\n    matrix[i][j] = 0;\n   }\n  }\n }\n};\nMatrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2) {\n Matrix5x5 temp;\n for (int row = 0;row < 5;++row) {\n  for (int col = 0;col < 5;++col) {\n   temp.matrix[row][col] = m1.matrix[row][col] + m2.matrix[row][col];\n  }\n }\n return temp;\n}",
            1587704674.358025,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "肖翎予",
            "class Matrix5x5{\npublic:\n\tdouble ans[5][5];\n    Matrix5x5(){\n        for(int i = 0;i < 5;i++){\n            for(int j = 0;j < 5;j++){\n                ans[i][j] = 0;\n            }\n        }\n    }\n\tdouble get(int i, int j){\n        return ans[i][j];\n    }\n    void set(int i, int j, double num){\n        ans[i][j] = num;\n    }\n    friend Matrix5x5 operator + (Matrix5x5& m1,Matrix5x5& m2){\n        Matrix5x5 ans;\n        for(int i = 0;i < 5;i++){\n            for(int j = 0;j < 5;j++){\n                ans.set(i,j,m1.get(i,j) + m2.get(i,j)); \n            }\n        }\n        return ans;\n    } \n};",
            1587887587.1853147,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王晶",
            "class Matrix5x5{\n\tpublic:\n\t     double arr[5][5];\n\t\n\t Matrix5x5(){\n\t    for(int i=0;i<5;++i){\n\t\t   for(int j=0;j<5;++j){\n\t\t\t   arr[i][j]=0;\n\t\t   }\n\t   }\n\t }\n\t\n\t double get(int row,int col){\n\t\treturn this->arr[row][col];\n\t }\n\t\n\t void set(int a ,int b ,double c){\n\t\t this->arr[a][b]=c;\n\t }\n\t\n\t Matrix5x5 operator + (const Matrix5x5 & x){\n\t\t Matrix5x5 temp;\n\t\t for(int i=0;i<5;++i){\n\t\t\t for(int j=0;j<5;++j){\n\t\t\t\t temp.arr[i][j]=this->arr[i][j]+x.arr[i][j];\n\t\t\t }\n\t\t }\n\t\t return temp;\n\t }\n\t\n};",
            1587907541.8284905,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "欧培华",
            "class Matrix5x5{\npublic:\n    int matrix[5][5];\n    Matrix5x5(){\n        for (int i = 0; i < 5; ++i)\n            for (int j = 0; j < 5; ++j)\n                matrix[i][j] = 0;\n    }\n    double get(int i, int j){\n        return matrix[i][j];\n    }\n    void set(int i, int j, double num){\n        matrix[i][j] = num;\n    }\n    Matrix5x5 operator +(Matrix5x5 &m)\n    {\n        for (int i = 0; i < 5; ++i)\n            for (int j = 0; j < 5; ++j)\n                matrix[i][j] = matrix[i][j] + m.matrix[i][j];\n        return (*this);\n    }\n};",
            1587964672.5834055,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "南麟星",
            "\n#include <iostream>\nusing namespace std;\nclass Matrix5x5\n{\npublic:\n\tint mm[5][5] = {{0,0,0,0,0}};\n\tdouble get(int row,int col){\n\t\treturn this->mm[row][col]; \n\t}\n\tvoid set(int shu1,int shu2,int value){\n\t\tthis->mm[shu1][shu2] = value;\n\t}\n};\nMatrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2)\n{\n\tMatrix5x5 m4;\n\tfor (int i = 0; i < 5; ++ i) {\n\t\tfor (int j = 0; j < 5; ++ j){\n\t\t\tm4.mm[i][j]=m1.mm[i][j] + m2.mm[i][j];\n\t\t} \n\t}\n\treturn m4;\n}",
            1588042739.0233822,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王芯芸",
            "class Matrix5x5\n{\nprivate:\n\tdouble r[5][5] = {{0}, {0}, {0}, {0}, {0}};\n\npublic:\n\tdouble get(int i, int j){\n\t\treturn r[i][j];\n\t}\n\n\tvoid set(int i, int j, double val){\n\t\tr[i][j] = val;\n\t}\n\n\tMatrix5x5 operator + (const Matrix5x5 &m1){\n\t\tMatrix5x5 temp;\n\t\tfor(int i = 0; i < 5; i++)for (int j = 0; j < 5; j++)temp.r[i][j] = this->r[i][j] + m1.r[i][j];\n\t\treturn temp;\n\t}\n};\n\n",
            1588070518.1193829,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "肖澧寅",
            "class Matrix5x5{\npublic:\n    double mat[5][5];\n    Matrix5x5(){\n        for(int i = 0;i < 5;i++){\n            for(int j = 0;j < 5;j++){\n                mat[i][j] = 0;\n            }\n        }\n    }\n    ~Matrix5x5(){}\n\n    double get(int a,int b){\n        return mat[a][b];\n    }\n    void set(int a,int b,double c){\n        mat[a][b] = c;\n    }\n    Matrix5x5 operator + (Matrix5x5 &other){\n        Matrix5x5 tmp;\n        for(int i = 0;i < 5;i++){\n            for(int j = 0;j < 5;j++){\n                tmp.mat[i][j] = this->mat[i][j] + other.mat[i][j];\n            }\n        }\n        return tmp;\n    }\n};",
            1588087498.611289,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix5x5 {\n    public:\n\t\n\t double matrix[5][5];\n\t\n\t Matrix5x5() {\n\t\t\n\t\t for(int i=0;i<5;i++) {\n\t\t\t  for(int j=0;j<5;j++) {\n\t\t\t\t matrix[i][j]=0; \n\t\t\t  }\n\t\t  }\n\t }\n\t\n\t\n\t   void set(int a,int b,int c) {\n\t\t   matrix[a][b]=c;\n\t   }\n     \n\t  Matrix5x5 operator+(Matrix5x5 &p, Matrix5x5 &t) {\n\t\t  Matrix5x5 res=new double[][];\n\t\t   for(int i=0;i<5;i++) {\n\t\t\t  for(int j=0;j<5;j++) {\n\t\t\t\t res[i][j] = p[i][j] + t[i][j];\n\t\t\t  }\n\t\t  }\n\t\t  return res;\n\t  }\n\t\n\t  double get(int a,int b) {\n\t\t  return matrix[a][b];\n\t  }\n     \n};\n\n\t\t  \n\n\n\n\n\n\n\n\n",
            1588130600.8708029,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:23:50: error: ‘Matrix5x5 Matrix5x5::operator+(Matrix5x5&, Matrix5x5&)’ must take either zero or one argument\n    Matrix5x5 operator+(Matrix5x5 &p, Matrix5x5 &t) {\n                                                  ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:25:10: error: no match for ‘operator+’ (operand types are ‘Matrix5x5’ and ‘Matrix5x5’)\n  m3 = m1 + m2;\n          ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::move_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\n"
        ],
        [
            "1.1 (C++)",
            "谢程凯",
            "class Matrix5x5{\n public:\n  double get(int i,int j){\n   return ans[i][j];\n  }\n  void set(int i,int j,double num){\n   ans[i][j] = num;\n  }\n  friend Matrix5x5 operator + (Matrix5x5& one,Matrix5x5& two){\n   Matrix5x5 ans;\n   for(int i = 0;i < 5;i++){\n    for(int j = 0;j < 5;j++){\n     ans.set(i,j,one.get(i,j) + two.get(i,j)); \n    }\n   }\n   return ans;\n  }\n  Matrix5x5(){\n   for(int i = 0;i < 5;i++){\n    for(int j = 0;j < 5;j++){\n     ans[i][j] = 0;\n    }\n   }\n  }\n private:\n  double ans[5][5];\n};",
            1588122779.0671842,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王硕",
            "class Matrix5x5\n{\n\tpublic:\n\t\tdouble matrix[5][5];\n\tMatrix5x5(){\n\t\t\tmatrix[5][5]=0;\n\t\t}\n\tdouble get(int a, int b){\n\t\tcout<<matrix[a][b];\n\t}\n\tvoid set(int a, int b, double c){\n\t\tmatrix[a][b]=c;\n\t}\n\tMatrix5x5 operator + (Matrix5x5 &a, Matrix5x5 &b) {\n\t\tMatrix5x5 &c;\n\t\treturn c;\n\t}\n\t~Matrix5x5(){};\n}",
            1588123066.387092,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:14:50: error: ‘Matrix5x5 Matrix5x5::operator+(Matrix5x5&, Matrix5x5&)’ must take either zero or one argument\n  Matrix5x5 operator + (Matrix5x5 &a, Matrix5x5 &b) {\n                                                  ^\nsource.cpp:19:1: error: expected ‘;’ after class definition\n }\n ^\nsource.cpp: In member function ‘double Matrix5x5::get(int, int)’:\nsource.cpp:9:3: error: ‘cout’ was not declared in this scope\n   cout<<matrix[a][b];\n   ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:25:10: error: no match for ‘operator+’ (operand types are ‘Matrix5x5’ and ‘Matrix5x5’)\n  m3 = m1 + m2;\n          ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::move_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\n"
        ],
        [
            "1.1 (C++)",
            "湯仙兒",
            "class Matrix5x5 {\npublic:\n\tint x;\n\tint y;\n\tdouble get(int x, int y) = 0;\n\tvoid set(int x, int y, double get);\n\tMatrix5x5 operator + (Matrix5x5 &m1, Matrix5x5 &m2) const {\n\t\tMatrix5x5 m3;\n\t\tm3.set = m1.set + m2.set;\n\t\treturn m3.set;\n\t}\n};",
            1588163907.6916347,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:7:54: error: ‘Matrix5x5 Matrix5x5::operator+(Matrix5x5&, Matrix5x5&) const’ must take either zero or one argument\n  Matrix5x5 operator + (Matrix5x5 &m1, Matrix5x5 &m2) const {\n                                                      ^\nsource.cpp:5:9: error: initializer specified for non-virtual method ‘double Matrix5x5::get(int, int)’\n  double get(int x, int y) = 0;\n         ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:25:10: error: no match for ‘operator+’ (operand types are ‘Matrix5x5’ and ‘Matrix5x5’)\n  m3 = m1 + m2;\n          ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::move_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\n"
        ],
        [
            "1.1 (C++)",
            "马超",
            "class Matrix5x5{\n\tpublic:\n\tint row,col;\n\tdouble value;\n\tdouble matrix[5][5];\n\tdouble get(int a, int b){\n\t\treturn matrix[a][b];\n\t}\n\tvoid set(int a, int b, double c){\n\t\tmatrix[a][b] = c;\n\t}\n\t\n};\n\nMatrix5x5 operator + (Matrix5x5 & m1, Matrix5x5 & m2){\n\t\tMatrix5x5 temp;\n\t\tfor (int i = 0; i < 5; ++ i) {\n\t\t\tfor (int j = 0; j < 5; ++ j){\n\t\t\t\ttemp.matrix[i][j] = m1.matrix[i][j] + m2.matrix[i][j];\n\t\t\t} \n\t\t}\n\t\treturn temp;\n}",
            1588154911.6235497,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "吴婷婷",
            "#include <iostream>\nusing namespace std;\nclass Matrix5x5{\n\tpublic:\n\t\tint val[5][5];\n\t\tMatrix5x5(){\n\t\t\tfor(int i=0;i<5;i++)\n\t\t\t for(int j=0;j<5;++j)\n\t\t\t   val[i][j]=0;\n\t\t}\n\t\tvoid set(int row,int col,double num){\n\t\t\tthis->val[row][col]=num;\n\t\t}\n\t\tdouble get(int row,int col){\n\t\t\treturn val[row][col];\n\t\t}\n\t\tMatrix5x5 operator+(const Matrix5x5 &s2);\n\t\t\n\t\tMatrix5x5 operator=(const Matrix5x5 &s2);\n\t\t\n};\nMatrix5x5 Matrix5x5::operator+(const Matrix5x5 &s2){\n\t\t\tMatrix5x5 ans;\n\t\t\t\n\t\t\tfor(int i=0;i<5;i++)\n\t\t\t for(int j=0;j<5;++j)\n\t\t\t ans.val[i][j]=s2.val[i][j]+this->val[i][j];\n\t\t\t \n\t\t\t return ans;\n}\nMatrix5x5 Matrix5x5::operator=(const Matrix5x5 &s2){\t\n\t\tfor(int i=0;i<5;i++)\n\t\t  for(int j=0;j<5;j++)\n\t\t\t this->val[i][j]=s2.val[i][j];\t \n}",
            1588154277.172928,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "王馨怡",
            "class Matrix5x5\n{\npublic:\n\tdouble arr[5][5];\n\t\n\tMatrix5x5(){\n\t\tfor(int i=0;i<5;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t   arr[i][j]=0;\n\t\t    }\n\t    }\n\t}\n\t\n\tdouble get(int row,int col){\n\t\treturn this->arr[row][col];\n\t}\n\t\n\tvoid set(int row ,int col ,double value){\n\t\tthis->arr[row][col]=value;\n\t}\n\t\n\tMatrix5x5 operator + (const Matrix5x5 & x){\n\t\tMatrix5x5 temp;\n\t\tfor(int i=0;i<5;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\ttemp.arr[i][j]=this->arr[i][j]+x.arr[i][j];\n\t\t\t}\n\t\t}\n\t\treturn temp;\n\t}\n\t\n};",
            1588157462.8751724,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "吴绪芃",
            "class  Matrix5x5{\npublic:\n\tint matrix[5][5]={{0}};\n\tdouble get(int row,int col){\n\t\treturn this->matrix[row][col];\n\t}\n\tvoid set(int row, int col, double val){\n\t\tthis->matrix[row][col]=val;\n\t}\n\tMatrix5x5 operator + ( Matrix5x5 &m2){\n\t\tMatrix5x5 temp;\n\t\tfor(int i=0;i<5;i++){\n\t\t\tfor(int j=0;j<5;j++){\n\t\t\t\ttemp.matrix[i][j]=this->matrix[i][j]+m2.matrix[i][j];\n\t\t\t}\n\t\t}\n\t\treturn temp;\n\t}\n\t\n};",
            1588159518.3329716,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "汪艺凡",
            "class Matrix5x5{\n\tpublic:\n\t\tdouble get(int x, int y){\n\t\t\treturn a[x][y];\n\t\t}\n\t\tvoid set(int x, int y, double z){\n\t\t\ta[x][y] = z;\n\t\t}\n\t\tMatrix5x5 operator + (const Matrix5x5 &m1){\n\t\t\tMatrix5x5 temp;\n\t\t\tfor(int row = 0; row < 5; row ++){\n\t\t\t\tfor(int col = 0; col < 5; col ++){\n\t\t\t\t\ttemp.a[row][col] = this->a[row][col] + m1.a[row][col];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn temp;\n\t\t}\n\tprivate:\n\t\tdouble a[5][5] = {{0},{0},{0},{0},{0}};\n\t\n};",
            1588160981.7234178,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "吴浩冬",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\nclass Matrix5x5 {\n\tpublic:\n\t\tdouble a[5][5];\n\t\tMatrix5x5() {\n\t\t\tmemset(a,0,sizeof(a));\n\t\t}\n\t\tdouble get(int x,int y) {\n\t\t\treturn a[x][y];\n\t\t}\n\t\tvoid set(int x,int y,double value) {\n\t\t\ta[x][y] = value;\n\t\t}\n  Matrix5x5 operator+(Matrix5x5 &p) {\n        Matrix5x5 ans;\n        for (int i = 0; i < 5; ++i) {\n            for (int j = 0; j < 5; ++j) {\n                ans.a[i][j] = p.get(i, j) + a[i][j];\n            }\n        }\n        return ans;\n    }\n};",
            1588162149.484187,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "谢浩林",
            "class School {\n\tpublic :\n\tchar* name ;\n\tint age ;\n\tSchool() {\n\t\tname= new char[10];\n\t\tname[0]='N' ;\n\t\tname[1]='O' ;\n\t\tname[2]='_' ;\n\t\tname[3]='N' ;\n\t\tname[4]='A' ;\n\t\tname[5]='M' ;\n\t\tname[6]='E' ;\n\t\tage = 0 ;\n\t}\n\t~School() {\n\t}\n\tvoid setName(char * n) {\n\t\tname = n ;\n\t}\n\tvoid setAge(int a) {\n\t\tage = a ;\n\t}\n} ;\n\nvoid operator ++ (School & school){\n\t\t++ school.age  ;\n}",
            1588213661.415623,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王子豪",
            "#include<cstring>\n#include <string>\nusing namespace std;\nclass School{\n\tpublic:\n\tstring name;\n\tint age;\n\tSchool(){\n\t\tthis->name=\"NO_NAME\";\n\t\tthis->age=0;\n\t}\n\tvoid setName(char name[]){\n\t\tthis->name=name;\n\t}\n\tvoid setAge(int year){\n\t\tthis->age=year;\n\t}\n\tvoid operator ++ (){\n\t\tthis->age++;\n\t}\n};\n",
            1588212819.6778755,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "马浩宇",
            "class School{\n\tpublic:\n\t\tchar name[10];\n\t\tint age;\n\t\tSchool(): age(0),name(\"NO_NAME\"){}\n\t\tvoid setName (char name1[]) {\n\t\t\tfor(int i = 0 ; i < 10 ; i ++) name[i] = 0;\n\t\t\tint i = 0;\n\t\t\twhile(name1[i] != 0) {\n\t\t\t\tname[i] = name1[i];\n\t\t\t\ti ++;\n\t\t\t}\n\t\t}\n\t\tvoid setAge (int year) {\n\t\t\tage = year;\n\t\t}\n\t\tvoid operator ++ () {\n\t\t\t(*this).age ++;\t\n\t\t}\n};",
            1588212942.4794981,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "万金诚",
            "#include<iostream>\n#include<cstring>\n\nusing namespace std;\nclass  School{\n\tpublic :\n\t\tint age;\n\t\tchar name[50];\n\t\tSchool(){\n\t\t\tage=0;\n\t\t\tstrcpy(name,\"NO_NAME\");\n\t\t}\n\t\tvoid setName(char name[]){\n\t\t\tstrcpy(this->name,name);\n\t\t}\n\t\tvoid setAge(int year){\n\t\t\tage=year;\n\t\t}\n\t\tvoid operator ++ (){\n\t\t\tage++;\n\t\t}\n};",
            1588212739.6714294,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "唐浩",
            "class School{\n\tpublic:\n\t\tchar name[10];\n\t\tint age;\n\t\tSchool(){\n\t\t\tthis->name[0] = 'N';\n\t\t\tthis->name[1] = 'O';\n\t\t\tthis->name[2] = '_';\n\t\t\tthis->name[3] = 'N';\n\t\t\tthis->name[4] = 'A';\n\t\t\tthis->name[5] = 'M';\n\t\t\tthis->name[6] = 'E';\n\t\t\n\t\t\tthis->age = 0;\n\t\t}\n\tvoid setName(char s[]){\n\t\tint i;\n\t\tfor (i = 0;s[i] != 0 ; ++ i)\n\t\t\tthis->name[i] = s[i];\n\t\tthis->name[i++] = '\\0';\n\t}\n\tvoid setAge(int n){\n\t\tthis->age = n;\n\t}\n\tvoid operator++(){\n\t\tthis->age++;\n\t}\n};",
            1588214635.318591,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "欧阳蓓",
            "\nclass  School \n{\n\tpublic: \n\tSchool()\n\t{\n \n\t\tchar n[10] = \"NO_NAME\";\n\t\tsetName(n);\n\t\tsetAge(0);\n\t\t \n\t}\n\tvoid setName(char  n[])\n\t{\n\t\t int i;\n\t\tfor(  i = 0; n[i] != '\\0'; i++ )\n\t\t\tname[i] = n[i];\n\t\tname[i] = '\\0'; \n\t\t \n\t}\n\tvoid setAge(int year)\n\t{\n\t\tage = year;\n\t}\n\tvoid operator ++ ()\n\t{\n\t\tage++;\n\t}\n\tchar name[10];\n\tint age;\n};",
            1588213399.376839,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "裴江博",
            "class School{\n\tpublic:\n\t\tchar name[10];\n\t\tint age;\n\t\tSchool(){\n\t\t\tchar a[8] = \"NO_NAME\";\n\t\t\tfor(int i=0;i<8;++i){\n\t\t\t\tname[i] = a[i];\n\t\t\t}\n\t\t\tthis->age = 0;\n\t\t}\n\t\tvoid setName(char name[]){\n\t\t\tfor (int i = 0; i < 10; ++ i){\n\t\t\t\tif(name[i] == '\\0') {\n\t\t\t\t\tthis->name[i] = name[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse this->name[i] = name[i];\n\t\t\t} \n\t\t}\n\t\tvoid setAge(int year){\n\t\t\tthis->age = year;\n\t\t}\n\t\tvoid operator ++ (){\n\t\t\tthis->age++;\n\t\t}\n\t\t~School(){\n\t\t\tchar a[8] = \"NO_NAME\";\n\t\t\tfor(int i=0;i<8;++i){\n\t\t\t\tname[i] = a[i];\n\t\t\t}\n\t\t\tthis->age = 0;\n\t\t}\n};",
            1588213030.6091597,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "许遵楠",
            "#include <iostream>\n#include <string>\nusing namespace std;\nclass School {\n  public:\n    School() {\n        this->age = 0;\n        this->name = \"NO_NAME\";\n    }\n    void setName(char name[]) {\n        this->name = name;\n    }\n    void setAge(int age) {\n        this->age = age;\n    }\n    void operator++() {\n        ++this->age;\n    }\n\n    string name;\n    int age;\n};",
            1588212611.1612322,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王振恺",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass School\n{\n\tpublic:\n\tchar name[10];\t\n\tint age;\n\tSchool()\n\t{\n\t\tstrcpy(this->name,\"NO_NAME\");\n\t}\n\tvoid setName(char name[])\n\t{\n\t\tstrcpy(this->name,name);\n\t}\n\tvoid setAge(int year)\n\t{\n\t\tthis->age = year;\n\t}\n\tvoid operator ++ ()\n\t{\n\t\tthis->age++;\n\t}\n};",
            1588212711.0153944,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "麦子丰",
            "#include <cstring>\n#define MAX 10\n\nclass School{\n    public:\n        char name[MAX];\n        int age;\n        School():age(0),name(\"NO_NAME\"){}\n        void setName(char name_[]);\n        void setAge(int year);\n        void operator ++ ();\n};\n\nvoid School::setName(char name_[]){\n    strcpy(this->name,name_);\n}\n\nvoid School::setAge(int year){\n    this->age = year;\n}\n\nvoid School::operator ++(){\n    ++this->age;\n}",
            1588212638.474538,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "青悦",
            "#include <cstring>\nclass School{\n\tpublic:\n\t\tchar name[10];\n\t\tint age;\n\t\t\n\t\tSchool(){\n\t\t\tstrcpy(name,\"NO_NAME\");\n\t\t\tage = 0;\n\t\t}\n\t\tvoid setName(char name[]){\n\t\t\tstrcpy(this->name,name);\n\t\t}\n    \tvoid setAge(int year){\n\t\t\tage = year;\n\t\t}\n    \tvoid operator ++ (){\n\t\t\tage++;\n\t\t}\n};",
            1588212988.543621,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "肖澧寅",
            "#include <cstring>\n\nclass School{\npublic:\n    int age;\n    char name[10];\n    School(){\n        age = 0;\n        strcpy(name,\"NO_NAME\");\n    }\n    ~School(){}\n\n    void setName(char nam[]){\n        strcpy(name,nam);\n    }\n    void setAge(int year){\n        age = year;\n    }\n    void operator ++ (){\n        age++;\n    }\n};",
            1588212689.0357208,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "涂涵",
            "class School{\n\tpublic:\n\tSchool();\n\tvoid setName(char name[]);\n    void setAge(int year);\n    void operator ++ ();\n\tchar name[10];\n\tint age=0;\n};\n\nSchool::School(){\n    name[0]='N';\n\tname[1]='O';\n\tname[2]='_';\n\tname[3]='N';\n\tname[4]='A';\n\tname[5]='M';\n\tname[6]='E';\n}\n\nvoid School::setName(char name[]){\n    for(int i=0;;i++){\n        this->name[i]=name[i];\n\t\tif(name[i]==0) break;\n\t}\n}\n\nvoid School::setAge(int year){\n\tthis->age=year;\n}\n\nvoid School::operator ++ (){\n\tthis->age++;\n}",
            1588213168.1712823,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "南麟星",
            "#include <iostream>\nusing namespace std;\nclass School\n{\npublic:\n\tchar name[10] = \"NO_NAME\";\n\tint age = 0;\n\tvoid setName(char name[]){\n\t\tfor (int i = 0; i < 10; ++ i) {\n\t\t\tthis->name[i] = name[i];\n\t\t}\n\t}\n\tvoid setAge(int year){\n\t\tthis->age = year;\n\t}\n};\nvoid operator ++ (School & school){\n\tschool.age = school.age + 1;\n}",
            1588212707.2227333,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "邵震东",
            "#include <string>\n\nclass School\n{\npublic:\n    std::string name = \"NO_NAME\";\n    int age = 0;\n\n    void setName(char * str)\n    {\n        name = str;\n    }\n\n    void setAge(int num)\n    {\n        age = num;\n    }\n\n    void operator ++()\n    {\n        age++;\n    }\n};",
            1588213281.922468,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "廖雨轩",
            "#include<cstring>\nclass School\n{\npublic:\n    char name[20];\n    int age;\n    School()\n    {\n        strcpy(this->name, \"NO_NAME\");\n        this->age = 0;\n    }\n    void setName(char input[])\n    {\n        strcpy(this->name, input);\n    }\n    void setAge(int year)\n    {\n        this->age = year;\n    }\n    School &operator++();\n};\nSchool &School::operator++()\n{\n    this->age++;\n    return *this;\n}\n",
            1588212714.6313689,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "吴渝峰",
            "#include <cstring>\n\nclass School {\npublic:\n\tchar name[10];\n\tint age;\n\tSchool() {\n\t\tstrcpy(name, \"NO_NAME\");\n\t\tage = 0;\n\t}\n\tvoid setName(char name[]) {\n\t\tstrcpy(this->name, name);\n\t}\n\tvoid setAge(int year) {\n\t\tthis->age = year;\n\t}\n\tvoid operator ++ () {\n\t\tthis->age ++;\n\t}\n};",
            1588212697.1727228,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "谢扬",
            "#include<string>\nusing std::string;\nclass School\n{\n\tpublic:\n\tint age;\n\tstring name;\n\tSchool():age(0),name(\"NO_NAME\"){}\n\t\n    void setName(char m_name[]){name=m_name;}\n    void setAge(int year){age=year;}\n    void operator ++ ()\n\t{++age;}\n};",
            1588212700.3856373,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "向鼎",
            "#include <cstring>\nclass School{\npublic:\n    char name[30];\n    int age;\n\n\n    School(){\n        strcpy(this->name,\"NO_NAME\");\n        this->age = 0;\n    }\n    void setName(char name1[]){\n        strcpy(this->name , name1);\n    }\n    void setAge(int year1){\n        this->age = year1;\n    }\n    void operator ++(){\n        this->age++;\n    }\n};\n",
            1588212703.337156,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "马淙升",
            "#include <iostream>\nusing namespace std;\nclass School {\n\tpublic:\n\tstring name;\n\tint age;\n\tSchool() {\n\t\tname = \"NO_NAME\";\n\t\tage = 0;\n\t}\n\tvoid setName(char name[]) {\n\t\tthis->name = name;\n\t}\n\tvoid setAge(int year) {\n\t\tage = year;\n\t}\n\tvoid operator ++ () {\n\t\tage++;\n\t}\n};",
            1588213605.0891697,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王著",
            "#include <cstring>\nclass School{\n\tpublic :\n\tint age;\n\tchar name[100];\n\tSchool(){\n\t\tage=0;\n\t\tname[0]='N';\n\t\tname[1]='O';\n\t\tname[2]='_';\n\t\tname[3]='N';\n\t\tname[4]='A';\n\t\tname[5]='M';\n\t\tname[6]='E';\n\t\tname[7]=0;\n\t\t\n\t}\n\tvoid setName(char name[]){\n\t\tstrcpy(this->name,name);\n\t}\n\tvoid setAge(int year){\n\t\tthis->age=year;\n\t}\n\tvoid operator ++ (){\n\t\tthis->age++;\n\t\t\n\t}\n\t\n};",
            1588212750.5959685,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "韦媛馨",
            "#include<cstring>\nclass School{\n\t\tpublic:\n\t\tchar name[10];\n\t\tint age;\n\t\tvoid setName(char name[]);\n\t\tvoid setAge(int year);\n\t\tvoid operator++(){ age++;}\n\t\tSchool(){\n\t\t\tstrcpy(name,\"NO_NAME\");\n\t\t\tage=0;\n\t\t}\n\t\t\n\t\t\n};\nvoid School::setName(char _name[]){\n\tstrcpy(name,_name);\n}\nvoid School::setAge(int year){\n\tage=year;\n}\n",
            1588212798.786784,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王郅成",
            "#include <iostream>\nusing namespace std;\n\nclass School\n{\n    public:\n        string name;\n        int age;\n    \n    School()\n    {\n        name=\"NO_NAME\";\n        age=0;\n    }\n    void setName(string a){\n        this->name = a;\n    }\n    void setAge(int year){\n        this->age = year;\n    }\n    void operator++(){\n        this->age=this->age + 1;\n    }\n};",
            1588213539.5435915,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "吴浩冬",
            "#include <iostream> \n#include <cstring>\nusing namespace std;\nclass School {\n\tpublic:\n\t\tchar name[10] = \"NO_NAME\";\n\t\tint age = 0;\n\t\tvoid setName(char Name[]) {\n\t\t\tstrcpy(name,Name);\n\t\t}\n\t\tvoid setAge(int year) {\n\t\t\tthis->age = year;\n\t\t}\n\t\tvoid operator ++() {\n\t\t\tthis->age++;\n\t\t}\n};",
            1588212894.1013565,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "魏星月",
            "#include <cstring>\n\nclass School {\n\tpublic:\n\t\tvoid setName(char n[]) {\n\t\t\tstrcpy(name, n);\n\t\t\t/*int i;\n\t\t\tfor (i = 0; i; i ++) {\n\t\t\t\tif (n[i] == 0) break;\n\t\t\t\tname[i] = n[i];\n\t\t\t}\n\t\t\tfor (i = i + 1; i < 10; i ++) {\n\t\t\t\tname[i] = 0;\n\t\t\t}*/\n\t\t}\n\t\n\t\tvoid setAge(int year) {\n\t\t\tage = year;\n\t\t}\n\t\n\t\tvoid operator ++ () {\n\t\t\tthis->age ++;\n\t\t}\n\t\n\t//private:\n\t\tchar name[10] = \"NO_NAME\";\n\t\tint age = 0;\n};",
            1588213877.2836955,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "施天予",
            "#include <iostream>\nusing namespace std;\n\nclass School {\npublic:\n    string name;\n    int age;\n    School () {\n        name = \"NO_NAME\";\n        age = 0;\n    }\n    void setName(char s[]) {\n        name = s;\n    }\n    void setAge(int year) {\n        age = year;\n    }\n    void operator ++ () {\n        ++age;\n    }\n};",
            1588212914.9977343,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "杨宗恺",
            "#include <cstring>\n\nclass School\n{\npublic:\n    char name[10];\n    int age;\n\n    School()\n    {\n        strcpy(name, \"NO_NAME\");\n        age = 0;\n    }\n\n    void setName(char * name)\n    {\n        strcpy(this -> name, name);\n    }\n\n    void setAge(int year)\n    {\n        age = year;\n    }\n\n    void operator ++ ()\n    {\n        (*this).age += 1;\n    }\n};",
            1588212919.0352986,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "唐晨轩",
            "#include <string>\n#include <cstring>\nclass School{\n\tpublic:\n\tchar *name = \"NO_NAME\";\n\tint age = 0;\n\tvoid setName(char name_[]);\n\tvoid setAge(int year);\n\tvoid operator ++();\n};\n\nvoid School::setName(char name_[]){\n\t*name = name_;\n}\nvoid School::setAge(int year){\n\tage = year;\n}\nvoid School::operator++(){\n\tthis->age ++;\n}",
            1588213800.7408767,
            25,
            "In file included from main.cpp:1:0:\nsource.cpp:5:15: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]\n  char *name = \"NO_NAME\";\n               ^\nsource.cpp: In member function ‘void School::setName(char*)’:\nsource.cpp:13:8: error: invalid conversion from ‘char*’ to ‘char’ [-fpermissive]\n  *name = name_;\n        ^\n"
        ],
        [
            "1.2 (C++)",
            "王筝",
            "#include <cstring>\n#include <string>\nusing namespace std;\nclass School{\n    public:\n        string name;\n        int age;\n        School(){\n            this->name = \"NO_NAME\";\n            this->age = 0;\n        }\n        void setName(string Name){\n            this->name = Name;\n            return;\n        }\n        void setAge(int age){\n            this->age = age;\n        }\n        void operator++(){\n            this->age = this->age + 1;\n        }\n};",
            1588213312.8971539,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "謝敏華",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\nclass School{\npublic:\n\tchar name[10];\n\tint age;\n\tSchool(){\n\t\tstrcpy(this->name,\"NO_NAME\");\n\t}\n\tvoid setName(char name[]){\n\t\tstrcpy(this->name,name);\n\t}\t\n\tvoid setAge(int age){\n\t\tthis->age=age;\n\t}\n\t~School(){}\n};\nvoid operator ++(School & school){\n\tschool.age++;\n}",
            1588213208.2599316,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "肖浩慧",
            "#include<string>\n#include<cstring>\nusing namespace std;\nclass School{\n\tfriend void print(School&);\n\tpublic:\n\t\tSchool(){\n\t\t\tname = \"NO_NAME\";\n\t\t\tage = 0;\n\t\t}\n\t\tvoid setName(char name1[]){\n\t\t\tname = name1;\n\t\t}\n\t\tvoid setAge(int year){\n\t\t\tage = year;\n\t\t}\n\t\tvoid operator++(){\n\t\t\tage++;\n\t\t}\n\tprivate:\n\t\tstring name;\n\t\tint age;\n};",
            1588213455.3819416,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "谭鸿鑫",
            "#include <string>\nusing namespace std;\n\nclass School{\n\tpublic:\n\tstring name;\n\tint age;\n\tSchool(){\n\t\tname = \"NO_NAME\";\n\t\tage = 0;\n\t}\n\tvoid setName(char x[]){\n\t\tthis->name = x;\n\t}\n\tvoid setAge(int x){\n\t\tthis->age = x;\n\t}\n\tSchool operator ++(){\n\t\tthis->age ++;\n\t\treturn *this;\n\t}\n};",
            1588213520.4748733,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王浩歌",
            "#include <cstring>\nclass School{\n\tpublic:\n\t\tchar name[10]=\"NO_NAME\";\n\t\tint age = 0;\n\t\tvoid setName(char a[]){\n\t\t\tmemset(name,0,sizeof(name));\n\t\t\tstrcpy(name,a);\n\t\t}\n\t\tvoid setAge(int year){\n\t\t\tage = year;\n\t\t}\n\t\tvoid operator ++ (){\n\t\t\tage++;\n\t\t}\n}; ",
            1588213301.6988392,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王彬",
            "#include <iostream>\n\nusing namespace std;\n\nclass School\n{\n\tpublic:\n\t\tchar name[10] = \"NO_NAME\";\n\t\tint age = 0;\n\t\tvoid setName(char name[])\n\t\t{\n\t\t\tfor (int i = 0; i < 10; ++ i)\n\t\t\t{\n\t\t\t\tthis->name[i] = name[i];\n\t\t\t}\n\t\t}\n\t\tvoid setAge(int year)\n\t\t{\n\t\t\tthis->age = year;\n\t\t}\n\t\tvoid operator ++ ()\n\t\t{\n\t\t\tthis->age ++;\n\t\t}\n};",
            1588213723.8074377,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "吴浩岚",
            "#include<cstring>\nclass School{\n\tpublic:\n\t\tchar name[10];\n\tSchool(){\n\t\tstrcpy(name,\"NO_NAME\");\n\t}\n\t\tint age = 0;\n\tvoid setName(char name[]){\n\tstrcpy(this->name,name);\n\t}\n\tvoid setAge(int year){\n\t\tthis->age = year;\n\t}\n};\nvoid operator ++ (School & school){\n\tschool.age++;\n}\n",
            1588213635.879605,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王晶",
            "#include<cstring>\nclass School{\n\tpublic:\n\t  char *name;\n\t  int age;\n\t  \n\t  School(){\n\t\t  this->name = new char[20];\n\t\t  strcpy(this->name,\"NO_NAME\");\n\t\t  age=0;\n\t  }\n\t\n\t  void setName(char newname[]){\n\t\t  delete[] this->name;\n\t\t  this->name=new char[strlen(newname)+1];\n\t\t  strcpy(this->name,newname);\n\t  }\n\t\n\t  void setAge(int year){\n\t\t  this->age=year;\n\t  }\n\t\n\t void operator++(){\n\t\t this->age++;\n\t }\n\t\n\t  ~School(){\n\t\t  delete []this->name;\n\t  }\n};",
            1588215377.9182396,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王子佳",
            "#include <cstring>\nclass School{\n\tpublic:\n\t\tchar name[10] = \"NO_NAME\";\n\t\tint age = 0;\n\t\tvoid setName(char name[]);\n\t\tvoid setAge(int year);\n\t\tvoid operator ++ (){\n\t\t\tthis->age++;\n\t\t}\n};\nvoid School::setName(char name[]){\n\tstrcpy(this->name,name);\n\tthis->name[strlen(name)] = 0;\n}\nvoid School::setAge(int year){\n\tthis->age = year;\n}\n",
            1588213469.9195352,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "test",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tcount << \"HELLO\";\n}",
            1588254216.8346822,
            0,
            "In file included from main.cpp:1:\n./source.cpp:5:2: error: reference to overloaded function could not be resolved; did you mean to call it?\n        count << \"HELLO\";\n        ^~~~~\n/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/algorithm:1138:1: note: possible target for call\ncount(_InputIterator __first, _InputIterator __last, const _Tp& __value_)\n^\n/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/__bit_reference:308:1: note: possible target for call\ncount(__bit_iterator<_Cp, _IsConst> __first, __bit_iterator<_Cp, _IsConst> __last, const _Tp& __value_)\n^\nmain.cpp:5:12: error: unknown type name 'School'\nvoid print(School & school) {\n           ^\nmain.cpp:9:5: error: redefinition of 'main'\nint main() {\n    ^\n./source.cpp:4:5: note: previous definition is here\nint main() {\n    ^\nmain.cpp:10:2: error: unknown type name 'School'\n        School school;\n        ^\n4 errors generated.\n"
        ],
        [
            "1.2 (C++)",
            "吴绪芃",
            "#include <cstring>\nclass School{\npublic:\n\tchar *name;\n\tint age=0;\n\tSchool(){\n\t\tthis->name=new char [20];\n\t\tstrcpy(this->name,\"NO_NAME\");\n\t}\n\tvoid setName(char name[]){\n\t\tdelete []this->name;\n\t\tthis->name=new char[strlen(name)+1];\n\t\tstrcpy(this->name,name);\n\t}\n\tvoid setAge(int year){\n\t\tthis->age=year;\n\t}\n\tvoid operator ++ (){\n\t\tthis->age=this->age+1;\n\t}\n\t~School(){\n\t\tdelete []this->name;\n\t}\n};",
            1588213858.1482642,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王昌远",
            "\nclass School {\npublic:\n\tchar name[10] = \"NO_NAME\";\n\tint age = 0;\n\tvoid setName(char name[]) {\n\t\tfor (int i = 0;i < 10;i++) {\n\t\t\tthis->name[i] = name[i];\n\t\t}\n\t}\n\tvoid setAge(int year) {\n\t\tage = year;\n\t}\n\tvoid operator ++ () {\n\t\tthis->age++;\n\t}\n};\n",
            1588216045.6421704,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "熊英杰",
            "class School{\npublic:\n char name[10];\n int age;\n School()\n {\n  char s[100]=\"NO_NAME\"; \n  int i=0;\n  while(!s[i]=='\\0')\n  {\n   name[i]=s[i];\n   i++;\n  }\n  name[i]='\\0';\n }\n void setName(char s[])\n {\n  int i=0;\n  while(!s[i]=='\\0')\n  {\n   name[i]=s[i];\n   i++;\n  }\n  name[i]='\\0';\n }\n void setAge(int year)\n {\n  age=year;\n }\n void operator ++()\n {\n  this->age++;\n }\n};",
            1588214583.0914574,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "孙奥远",
            "#include <iostream>\n#include<cstring>\nusing namespace std;\n\nclass School\n{\nprivate:\n    char name[20];\n    int age;\n\npublic:\n    ~School(){};\n    School();\n    void setName(char n[]);\n    void setAge(int year);\n    void operator++();\n\tfriend void print(School & school);\n};\n\nSchool::School()\n{\n    strcpy(name, \"NO_NAME\");\n    age = 0;\n}\n\nvoid School::setName(char n[])\n{\n    strcpy(name, n);\n}\n\nvoid School::setAge(int year)\n{\n    age = year;\n}\n\nvoid School::operator++()\n{\n    age++;\n}\n",
            1588213750.174413,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "莫振威",
            "#include <cstring>\nclass School{\npublic:\n    char name[10];\n    int age;\n    School(){\n        age = 0;\n        strcpy(name, \"NO_NAME\");\n    }\n    void setName(char name[]){\n        strcpy(this->name, name);\n    }\n    void setAge(int year){\n        age = year;\n    }\n    void operator++(){\n        age++;\n    }\n};",
            1588213647.3939834,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "潘小健",
            "#include <string>\nusing namespace std;\nclass School\n{\npublic:\n\tstring name;\n\tint age;\n\tSchool(){\n\t\tname=\"NO_NAME\";\n\t\tage=0;\n\t}\n\tvoid setName(char name[]){\n\t\tthis->name=name;\n\t}\n\tvoid setAge(int year){\n\t\tage=year;\n\t}\n\tvoid operator++(){\n\t\t++age;\n\t}\n\t\n};",
            1588213738.8636453,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王正学",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\nclass School{\n\tpublic:\n\tchar name[50];\n\tint age;\n\tSchool(){\n\t\tstrcpy(this->name,\"NO_NAME\");\n\t\tthis->age = 0;\n\t}\n\tvoid setName(char w[]){\n\t\tstrcpy(this->name,w);\n\t}\n\tvoid setAge(int year){\n\t\tthis->age = year;\n\t}\n\tvoid operator ++ (){\n\t\tthis->age = this->age + 1;\n\t}\n};",
            1588214540.6472912,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "谢小卉",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\n\nclass School\n{\npublic:\n    string name;\n    int age;\n    \n    School(){\n        this->name = \"NO_NAME\";\n        this->age = 0;\n    }\n    ~School(){}\n    void setName(char name[]){\n        this->name = name;\n    }\n    void setAge(int year){\n        this->age = year;\n    }\n    void operator ++(){\n        this->age ++;\n    }\n};",
            1588213809.2581134,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王志文",
            "#include <cstring>\nchar s[10] = {\"NO_NAME\"};\nclass School\n{\n\tpublic:\n\t\tchar name[10];\n\t\tint age;\n\t\tSchool(){\n\t\t\tstrcpy(this->name,s);\n\t\t\tthis->age = 0;\n\t\t}\n\t\tvoid setName(char name[10]){\n\t\t\tstrcpy(this->name,name);\n\t\t\t/*for (int i = 0; i < 10; ++ i){\n\t\t\t\tif(name[i] != 0){\n\t\t\t\t\tthis->name[i] = name[i];\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tname[i] = 0;\n\t\t\t\t}\n\t\t\t} */\n\t\t}\n\t\tvoid setAge(int year){\n\t\t\tthis->age = year;\n\t\t}\n\t\tvoid operator ++(){\n\t\t\tthis->age++;\n\t\t}\n};\n\n",
            1588215118.999503,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王馨怡",
            "#include <cstring>\nusing namespace std;\nclass School\n{\npublic:\n\tchar *name;\n\tint age;\n\tSchool(){\n\t\tthis->name=new char[10];\n\t\tstrcpy(this->name,\"NO_NAME\");\n\t\tthis->age=0;\n\t}\n\tvoid setName(char name[]){\n\t\tdelete[] this->name;\n\t\t//this->name=new char[strlen(name)+1];\n\t\tstrcpy(this->name,name);\n\t}\n\tvoid setAge(int year){\n\t\tthis->age=year;\n\t}\n\tvoid operator ++ (){\n\t\tthis->age++;\n\t}\n};",
            1588214663.9803815,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "施昊成",
            "#include <cstring>\n\nclass School{\n\tpublic:\n\tchar name[10]=\"NO_NAME\";\n\tint age=0;\n\tvoid setName(char n[]){\n\t\tint len=strlen(n);\n\t\tfor(int i=0;i<10;i++){\n\t\t\tname[i]='\\0';\n\t\t}\n\t\tfor(int i=0;i<len;i++){\n\t\t\tname[i]=n[i];\n\t\t}\n\t\t\n\t}\n\tvoid setAge(int year){\n\t\tage=year;\n\t}\n\tvoid operator ++ (){\n\t\tage++;\n\t}\n   \n};",
            1588214688.2278812,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "容浩民",
            "#include <cstring>\nclass School{\npublic:\n    char name[10];\n    int age;\n    School();\n    void setName(char name[]);\n    void setAge(int year);\n    void operator ++();\n};\nSchool::School(){\n    strcpy(this->name, \"NO_NAME\");\n    this->age = 0;\n}\n\nvoid School:: setName(char name[]){\n    strcpy(this->name, name);\n}\n\nvoid School::setAge(int year){\n    this->age = year;\n}\n\nvoid School:: operator ++(){\n    this->age++;\n}",
            1588214359.2914476,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "湯仙兒",
            "#include <cstring>\nusing namespace std;\nclass School {\n\tpublic:\n\t\tchar * name;\n\t\tint age = 0;\n\t\tname[0] = 'N';\n\t\tname[1] = 'O';\n\t\tname[2] = '_';\n\t\tname[3] = 'N';\n\t\tname[4] = 'A';\n\t\tname[5] = 'M';\n\t\tname[6] = 'E';\n\t\t/*School() {\n\t\t\tthis->name = new char[20];\n\t\t\tfor (int i = 0; i < ; ++ i) {\n\t\t\t\t\n\t\t\t}\n\t\t}*/\n\t\tvoid setName(char newName[]) {\n\t\t\t//delete[] this->name;\n\t\t\tthis->name = new char[20];\n\t\t\tthis->name = newName;\n\t\t}\n\t\t~School() {\n\t\t\tdelete [] this->name;\n\t\t}\n\t\tvoid setAge(int year) {\n\t\t\tage = year;\n\t\t}\n\t\tvoid operator ++ () {\n\t\t\t this->age = this->age + 1;\n\t\t}\n};",
            1588218044.578721,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:7:3: error: ‘name’ does not name a type\n   name[0] = 'N';\n   ^\nsource.cpp:8:3: error: ‘name’ does not name a type\n   name[1] = 'O';\n   ^\nsource.cpp:9:3: error: ‘name’ does not name a type\n   name[2] = '_';\n   ^\nsource.cpp:10:3: error: ‘name’ does not name a type\n   name[3] = 'N';\n   ^\nsource.cpp:11:3: error: ‘name’ does not name a type\n   name[4] = 'A';\n   ^\nsource.cpp:12:3: error: ‘name’ does not name a type\n   name[5] = 'M';\n   ^\nsource.cpp:13:3: error: ‘name’ does not name a type\n   name[6] = 'E';\n   ^\n"
        ],
        [
            "1.2 (C++)",
            "彭瑞洲",
            "#include <cstring>\nclass School{\n\tpublic:\n\t\tint age = 0;\n\t\tchar name[10] = \"NO_NAME\";\n\t\tvoid setName(char name1[]){\n\t\t\tstrcpy(name,name1);\n\t\t}\n\t\tvoid setAge(int age2){\n\t\t\tage = age2;\n\t\t}\n\t\tvoid operator ++(){\n\t\t\tthis->age = this->age + 1;\n\t\t}\n};",
            1588214945.2517383,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "周琨曜",
            "#include<cstring>\nclass School\n{\npublic:\n\tchar *name;\n\tint age=0;\n\tSchool(){\n\t\tthis->name = new char[20];\n\t\tstrcpy(this->name,\"NO_NAME\");\n\t}\n\tvoid setName(char newName[]){\n\t\tdelete[] this->name;\n\t\tthis->name=new char[strlen(newName)+1];\n\t\tstrcpy(this->name,newName);\n\t}\n\tvoid setAge(int year){\n\t\tage=year;\n\t}\n\tvoid operator ++ (){\n\t\tage++;\n\t}\n}; ",
            1588214519.3883662,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王冠权",
            "class School {\npublic:\n\tchar name[10] = \"NO_NAME\";\n\tint age = 0;\n\tvoid setName(char name[]) {\n\t\tfor (int i = 0;i < 10;i++) {\n\t\t\tthis->name[i] = name[i];\n\t\t}\n\t}\n\tvoid setAge(int year) {\n\t\tage = year;\n\t}\n\tvoid operator ++ () {\n\t\tthis->age++;\n\t}\n};",
            1588214668.6788871,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "苏比努尔·玉山江",
            "class  School \n{\n\tpublic: \n\tSchool()\n\t{\n \n\t\tchar n[10] = \"NO_NAME\";\n\t\tsetName(n);\n\t\tsetAge(0);\n\t\t \n\t}\n\tvoid setName(char  n[])\n\t{\n\t\t int i;\n\t\tfor(  i = 0; n[i] != '\\0'; i++ )\n\t\t\tname[i] = n[i];\n\t\tname[i] = '\\0'; \n\t\t \n\t}\n\tvoid setAge(int year)\n\t{\n\t\tage = year;\n\t}\n\tvoid operator ++ ()\n\t{\n\t\tage++;\n\t}\n\tchar name[10];\n\tint age;\n};",
            1588214784.2194266,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "潘思晗",
            "#include<cstring>\n#include <iostream>\nusing namespace std;\n\nclass School{\n\tpublic:\n\t\tchar name[10];\n\t\tint age;\n\t\tSchool(){\n\t\t\tstrcpy(this->name,\"NO_NAME\");\n\t\t\tthis->age=0;\n\t\t}\n\t\tvoid setName(char name[]){\n\t\t\tstrcpy(this->name,name);\n\t\t}\n\t\tvoid setAge(int year){\n\t\t\tthis->age=year;\n\t\t}\n\t\tvoid operator ++ (){\n\t\t\tthis->age+=1;\n\t\t}\n};",
            1588215488.2795825,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "吴婷婷",
            "#include <iostream>\n#include<cstring>\nusing namespace std;\nclass School{\n\t\n\tpublic:\n\t char name[20];\n\t int age;\n\t School();\n     void setName(char *name);\n     void setAge(int age);\n     School operator++();\n};\nSchool::School(){\n\tstrcpy(this->name,\"NO_NAME\");\n\tthis->age=0;\n}\nvoid School::setName(char *name){\n\tstrcpy(this->name,name);\n}\nvoid School::setAge(int age){\n\tthis->age=age;\n}\n\nSchool School::operator++(){\n\tthis->age ++;\n}",
            1588214804.910269,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "肖翎予",
            "class School {\npublic:\t\n\tint age = 0;\n\tchar name[10] = \"NO_NAME\";\n\tvoid setName(char Name[]) {\n\t\tfor(int i = 0; i < 10; i++) {\n\t\t\tif(Name[i] == 0) name[i] = 0;\n\t\t\telse name[i] = Name[i];\t\t\t\n\t\t}\n\t}\n\tvoid setAge(int year) {\n\t\tage = year;\n\t}\t\n\tvoid operator ++ () {\n\t\tage++;\n\t}\n};",
            1588215022.775639,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "宋力舟",
            "#include <cstring>\n\nclass School{\n\tpublic:\n\tchar name[10]=\"NO_NAME\";\n\tint age=0;\n\tvoid setName(char n[]){\n\t\tint len=strlen(n);\n\t\tfor(int i=0;i<10;i++){\n\t\t\tname[i]='\\0';\n\t\t}\n\t\tfor(int i=0;i<len;i++){\n\t\t\tname[i]=n[i];\n\t\t}\n\t\t\n\t}\n\tvoid setAge(int year){\n\t\tage=year;\n\t}\n\tvoid operator ++ (){\n\t\tage++;\n\t}\n   \n};",
            1588215011.800511,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王晓龙",
            "#include <iostream>\nusing namespace std;\n#include <cstring>\nclass School\n{\n\tpublic:\n\tchar name[10];\n\tint age;\n\tvoid setName( ){\n\t\tSchool school;\n\t\tstrcpy(school.name,name);\n\t}\n\t\t\n\t\t\n    void setAge( ){\n\t\tcin >> this->age;\n\t\t\n\t}\n    void operator ++ ()\n\t{\n\t\t setName();\n\t\t setAge(){\n\t\tcin>>this->age++;\n\t\t}\n\t}\n}\n",
            1588216053.2111967,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:26:1: error: expected ‘;’ after class definition\n }\n ^\nsource.cpp: In member function ‘void School::operator++()’:\nsource.cpp:22:12: error: expected ‘;’ before ‘{’ token\n    setAge(){\n            ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:15:21: error: no matching function for call to ‘School::setName(char [10])’\n  school.setName(name);\n                     ^\nIn file included from main.cpp:1:0:\nsource.cpp:9:7: note: candidate: void School::setName()\n  void setName( ){\n       ^\nsource.cpp:9:7: note:   candidate expects 0 arguments, 1 provided\nmain.cpp:18:19: error: no matching function for call to ‘School::setAge(int&)’\n  school.setAge(age);\n                   ^\nIn file included from main.cpp:1:0:\nsource.cpp:15:10: note: candidate: void School::setAge()\n     void setAge( ){\n          ^\nsource.cpp:15:10: note:   candidate expects 0 arguments, 1 provided\n"
        ],
        [
            "1.2 (C++)",
            "覃浩南",
            "#include<string>\nusing namespace std;\n\nstruct School{\nfriend void print(School & school);\npublic:\n    School(): name(\"NO_NAME\"), age(0){}\n    \n    void setName(char name[]);\n    void setAge(int year);\n\n    void operator ++ ();\nprivate:\n    string name;\n    int age;\n};\n\nvoid School::setName(char name[]){\n    this->name = name;\n}\n\nvoid School::setAge(int year){\n    this->age = year;\n}\n\nvoid School::operator ++ (){\n    ++this->age;\n}",
            1588215458.708108,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "谢程凯",
            "class School {\npublic: \n int age = 0;\n char name[10] = \"NO_NAME\";\n void setName(char Name[]) {\n  for(int i = 0; i < 10; i++) {\n   if(Name[i] == 0) name[i] = 0;\n   else name[i] = Name[i];   \n  }\n }\n void setAge(int year) {\n  age = year;\n } \n void operator ++ () {\n  age++;\n }\n};",
            1588215347.5765,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "马超",
            "class School{\n\tpublic:\n\t\tchar name[10] = \"NO_NAME\";\n\t\tint age = 0;\n\t\tvoid setName(char newname[10]){\n\t\t\tfor (int i = 0; i < 10; ++ i) {\n\t\t\t\tif(newname[i] != 0) name[i] = newname[i];\n\t\t\t\telse {\n\t\t\t\t\tname[i] = '\\0';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvoid setAge(int year){\n\t\t\tage = year;\n\t\t}\n};\n\nSchool operator ++ (School & school){\n\tschool.age = school.age + 1;\n\treturn school;\n}",
            1588216143.7436268,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "伍海珊",
            "#include <cstring>\n\nclass School{\npublic:\n    char name[10];\n    int age;\n    School():name(\"NO_NAME\"),age(0){};\n    ~School(){};\n    void setName(char name[]);\n    void setAge(int year);\n    void operator ++ ();\n\nprivate:\n};\n\nvoid School::setName(char name[]){\n    strcpy(this->name,name);\n}\n\nvoid School::setAge(int year){\n    age=year;\n}\n\nvoid School::operator++(){\n    age++;\n}",
            1588215709.0234375,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "潘文轩",
            "#include <cstring>\n#include <iostream>\nusing namespace std;\n\nclass School {\npublic:\n\tchar name[20];\n\tint age;\n\t\n\tvoid setName(char[]);\n\tvoid setAge(int);\n\tvoid print();\n\tSchool() {\n\t\tmemcpy(name, \"NO_NAME\", 8);\n\t}\n\tvoid operator ++ (){\n\t\tage ++;\n\t}\n};\n\nvoid School::setName(char Name[]) {\n\tmemcpy(name, Name, strlen(Name) + 1);\n}\n\nvoid School::setAge(int Age) {\n\tage = Age;\n}\n",
            1588216688.8776782,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "王锡铭",
            "class School{\n\tpublic:\n\t\tchar name[10] = \"NO_NAME\";\n\t\tint age = 0;\n\t\tvoid setName(char name[]){\n\t\t\tfor(int i = 0;i < 10;i ++){\n\t\t\t\tthis->name[i] = name[i];\n\t\t\t}\n\t\t}\n\t\tvoid setAge(int year){\n\t\t\tthis->age = year;\n\t\t}\n\t\tvoid operator ++ (){\n\t\t\tthis->age ++;\n\t\t}\n};",
            1588215967.7912965,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "汪艺凡",
            "#include <iostream>\nusing namespace std;\nclass School{\n\tpublic:\n\t\tchar name[10];\n\t\tint year;\n\t\tvoid setName(char name[10]){\n\t\t\twhile((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n\t\t}\n\t\tvoid setAge(int year){\n\t\t\twhile((cin>>this->year)==0) this->year = 0;\n\t\t}\n\t\tvoid operator ++ (){\n\t\t\tcout << this->name << ' ' << this->age+1<< endl;\n\t\t}\n};",
            1588216337.1972334,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In member function ‘void School::setName(char*)’:\nsource.cpp:8:27: error: no match for ‘operator==’ (operand types are ‘std::basic_istream<char>’ and ‘int’)\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                           ^\nsource.cpp:8:27: note: candidate: operator==(int, int) <built-in>\nsource.cpp:8:27: note:   no known conversion for argument 1 from ‘std::basic_istream<char>’ to ‘int’\nIn file included from /usr/include/c++/5/iosfwd:40:0,\n                 from /usr/include/c++/5/ios:38,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)\n     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)\n     ^\n/usr/include/c++/5/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::fpos<_StateT>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:64:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_pair.h:214:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)\n     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)\n     ^\n/usr/include/c++/5/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::pair<_T1, _T2>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\n     operator==(const reverse_iterator<_Iterator>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:292:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:342:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\n     operator==(const reverse_iterator<_IteratorL>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:342:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1065:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)\n     operator==(const move_iterator<_IteratorL>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1065:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::move_iterator<_Iterator>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1071:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)\n     operator==(const move_iterator<_Iterator>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1071:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::move_iterator<_Iterator>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/string:41:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/allocator.h:128:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)\n     operator==(const allocator<_T1>&, const allocator<_T2>&)\n     ^\n/usr/include/c++/5/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::allocator<_CharT>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/string:41:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/allocator.h:134:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)\n     operator==(const allocator<_Tp>&, const allocator<_Tp>&)\n     ^\n/usr/include/c++/5/bits/allocator.h:134:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::allocator<_CharT>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4904:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4904:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4911:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)\n     operator==(const basic_string<_CharT>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4911:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::__cxx11::basic_string<_CharT>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4925:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator==(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4925:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   mismatched types ‘const _CharT*’ and ‘std::basic_istream<char>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4937:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4937:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nIn file included from /usr/include/c++/5/bits/ios_base.h:46:0,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)\n   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n   ^\n/usr/include/c++/5/system_error:284:3: note:   no known conversion for argument 1 from ‘std::basic_istream<char>’ to ‘const std::error_code&’\n/usr/include/c++/5/system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)\n   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept\n   ^\n/usr/include/c++/5/system_error:289:3: note:   no known conversion for argument 1 from ‘std::basic_istream<char>’ to ‘const std::error_code&’\n/usr/include/c++/5/system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)\n   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept\n   ^\n/usr/include/c++/5/system_error:296:3: note:   no known conversion for argument 1 from ‘std::basic_istream<char>’ to ‘const std::error_condition&’\n/usr/include/c++/5/system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)\n   operator==(const error_condition& __lhs,\n   ^\n/usr/include/c++/5/system_error:303:3: note:   no known conversion for argument 1 from ‘std::basic_istream<char>’ to ‘const std::error_condition&’\nIn file included from /usr/include/c++/5/bits/locale_facets.h:48:0,\n                 from /usr/include/c++/5/bits/basic_ios.h:37,\n                 from /usr/include/c++/5/ios:44,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)\n     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,\n     ^\n/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:8:29: note:   ‘std::basic_istream<char>’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                             ^\nsource.cpp:8:59: error: ‘strcpy’ was not declared in this scope\n    while((cin>>this->name)==0) strcpy(this->name,\"NO_NAME\");\n                                                           ^\nsource.cpp: In member function ‘void School::setAge(int)’:\nsource.cpp:11:27: error: no match for ‘operator==’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)\n    while((cin>>this->year)==0) this->year = 0;\n                           ^\nsource.cpp:11:27: note: candidate: operator==(int, int) <built-in>\nsource.cpp:11:27: note:   no known conversion for argument 1 from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘int’\nIn file included from /usr/include/c++/5/iosfwd:40:0,\n                 from /usr/include/c++/5/ios:38,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/postypes.h:216:5: note: candidate: template<class _StateT> bool std::operator==(const std::fpos<_StateT>&, const std::fpos<_StateT>&)\n     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)\n     ^\n/usr/include/c++/5/bits/postypes.h:216:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::fpos<_StateT>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:64:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_pair.h:214:5: note: candidate: template<class _T1, class _T2> constexpr bool std::operator==(const std::pair<_T1, _T2>&, const std::pair<_T1, _T2>&)\n     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)\n     ^\n/usr/include/c++/5/bits/stl_pair.h:214:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::pair<_T1, _T2>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:292:5: note: candidate: template<class _Iterator> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\n     operator==(const reverse_iterator<_Iterator>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:292:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:342:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\n     operator==(const reverse_iterator<_IteratorL>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:342:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1065:5: note: candidate: template<class _IteratorL, class _IteratorR> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)\n     operator==(const move_iterator<_IteratorL>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1065:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::move_iterator<_Iterator>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1071:5: note: candidate: template<class _Iterator> bool std::operator==(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)\n     operator==(const move_iterator<_Iterator>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1071:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::move_iterator<_Iterator>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/string:41:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/allocator.h:128:5: note: candidate: template<class _T1, class _T2> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_T2>&)\n     operator==(const allocator<_T1>&, const allocator<_T2>&)\n     ^\n/usr/include/c++/5/bits/allocator.h:128:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::allocator<_CharT>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/string:41:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/allocator.h:134:5: note: candidate: template<class _Tp> bool std::operator==(const std::allocator<_CharT>&, const std::allocator<_CharT>&)\n     operator==(const allocator<_Tp>&, const allocator<_Tp>&)\n     ^\n/usr/include/c++/5/bits/allocator.h:134:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::allocator<_CharT>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4904:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4904:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4911:5: note: candidate: template<class _CharT> typename __gnu_cxx::__enable_if<std::__is_char<_Tp>::__value, bool>::__type std::operator==(const std::__cxx11::basic_string<_CharT>&, const std::__cxx11::basic_string<_CharT>&)\n     operator==(const basic_string<_CharT>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4911:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::__cxx11::basic_string<_CharT>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4925:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator==(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4925:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   mismatched types ‘const _CharT*’ and ‘std::basic_istream<char>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4937:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4937:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nIn file included from /usr/include/c++/5/bits/ios_base.h:46:0,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/system_error:284:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_code&)\n   operator==(const error_code& __lhs, const error_code& __rhs) noexcept\n   ^\n/usr/include/c++/5/system_error:284:3: note:   no known conversion for argument 1 from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘const std::error_code&’\n/usr/include/c++/5/system_error:289:3: note: candidate: bool std::operator==(const std::error_code&, const std::error_condition&)\n   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept\n   ^\n/usr/include/c++/5/system_error:289:3: note:   no known conversion for argument 1 from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘const std::error_code&’\n/usr/include/c++/5/system_error:296:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_code&)\n   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept\n   ^\n/usr/include/c++/5/system_error:296:3: note:   no known conversion for argument 1 from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘const std::error_condition&’\n/usr/include/c++/5/system_error:303:3: note: candidate: bool std::operator==(const std::error_condition&, const std::error_condition&)\n   operator==(const error_condition& __lhs,\n   ^\n/usr/include/c++/5/system_error:303:3: note:   no known conversion for argument 1 from ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ to ‘const std::error_condition&’\nIn file included from /usr/include/c++/5/bits/locale_facets.h:48:0,\n                 from /usr/include/c++/5/bits/basic_ios.h:37,\n                 from /usr/include/c++/5/ios:44,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note: candidate: template<class _CharT, class _Traits> bool std::operator==(const std::istreambuf_iterator<_CharT, _Traits>&, const std::istreambuf_iterator<_CharT, _Traits>&)\n     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,\n     ^\n/usr/include/c++/5/bits/streambuf_iterator.h:204:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:1:0:\nsource.cpp:11:29: note:   ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’\n    while((cin>>this->year)==0) this->year = 0;\n                             ^\nsource.cpp: In member function ‘void School::operator++()’:\nsource.cpp:14:39: error: ‘class School’ has no member named ‘age’\n    cout << this->name << ' ' << this->age+1<< endl;\n                                       ^\nmain.cpp: In function ‘void print(School&)’:\nmain.cpp:6:39: error: ‘class School’ has no member named ‘age’\n  cout << school.name << ' ' << school.age << endl;\n                                       ^\n"
        ],
        [
            "1.2 (C++)",
            "欧培华",
            "#include <cstring>\n\nclass School{\npublic:\n    char name[10];\n    int age;\n    School(){\n        strcpy(name,\"NO_NAME\");\n        age = 0;\n    }\n    void setName(char Name[]){\n        strcpy(name,Name);\n    }\n    void setAge(int Age){\n        age = Age;\n    }\n    void operator ++(){\n        age++;\n    }\n};",
            1588216389.6450076,
            100,
            "# 答案正确"
        ],
        [
            "1.2 (C++)",
            "伍嘉俊",
            "#include <cstring>\nclass School{\npublic:\n    char name[30];\n    int age;\n\n\n    School(){\n        strcpy(this->name,\"NO_NAME\");\n        this->age = 0;\n    }\n    void setName(char name1[]){\n        strcpy(this->name , name1);\n    }\n    void setAge(int year1){\n        this->age = year1;\n    }\n    void operator ++(){\n        this->age++;\n    }\n};\n",
            1588216724.4220176,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "杨宗恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\npublic:\n    Matrix()\n    {\n        matrix = nullptr;\n        row = 0;\n        col = 0;\n    }\n\n    Matrix(int row, int col)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            if (matrix[i] != nullptr) delete [] matrix[i];\n        }\n        if (matrix != nullptr) delete [] matrix;\n    }\n\n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < col; ++j)\n            {\n                cout << \"    \" << matrix[i][j];\n            }\n            cout << endl;\n        }\n    }\n\nprivate:\n    double **matrix;\n    int row;\n    int col;\n};",
            1588824421.594285,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "马浩宇",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix \n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int row, int column){\n\t\tvalues = new double [row * column];\n        rows = row;\n        columns = column;\n\t\tfor(int i = 0 ; i < row * column ; i ++) {\n\t\t\tvalues[i] = 0;\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < rows ; i ++) {\n\t\t\tfor(int j = i * columns ; j < i * columns + columns ; j ++ ) {\n\t\t\t\tcout << \"    \" << values[j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n    ~Matrix() {\n\t\tdelete [] values;\n\t}\n};",
            1588828657.8061814,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "杨宗恺",
            "#include <iostream>\n#include <iomanip>\n\nusing namespace std;\n\nclass Matrix\n{\npublic:\n    Matrix()\n    {\n        matrix = nullptr;\n        row = 0;\n        col = 0;\n    }\n\n    Matrix(int row, int col)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n\n    Matrix(int row, int col, const double *value)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = value[i * col + j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            if (matrix[i] != nullptr) delete [] matrix[i];\n        }\n        if (matrix != nullptr) delete [] matrix;\n    }\n\n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < col; ++j)\n            {\n                cout << setw(5) << matrix[i][j];\n            }\n            cout << endl;\n        }\n    }\n\nprivate:\n    double **matrix;\n    int row;\n    int col;\n};\n\n",
            1588825207.6155303,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "廖雨轩",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double *values;\n\npublic:\n    Matrix(int r, int c)\n    {\n        this->rows = r;\n        this->columns = c;\n        values = new double[r*c];\n        for(int i = 0; i < r*c; i++)\n            values[i] = 0.0;\n    }\n    ~Matrix()\n    {\n        delete[] values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n                cout << \"    \" << 0;\n            }\n            cout << endl;\n        }\n    }\n};\n",
            1588908613.2078714,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "杨宗恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\npublic:\n    Matrix()\n    {\n        matrix = nullptr;\n        row = 0;\n        col = 0;\n    }\n\n    Matrix(int row, int col)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n\n    Matrix(int row, int col, const double *value)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = value[i * col + j];\n            }\n        }\n    }\n    \n    Matrix (const Matrix & matrix1)\n    {\n        row = matrix1.row;\n        col = matrix1.col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = matrix1.matrix[i][j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            if (matrix[i] != nullptr) delete [] matrix[i];\n        }\n        if (matrix != nullptr) delete [] matrix;\n    }\n\n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < col; ++j)\n            {\n                cout << \"    \" << matrix[i][j];\n            }\n            cout << endl;\n        }\n    }\n\nprivate:\n    double **matrix;\n    int row;\n    int col;\n};\n\n",
            1588824790.107034,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "杨宗恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\npublic:\n    Matrix()\n    {\n        matrix = nullptr;\n        row = 0;\n        col = 0;\n    }\n\n    Matrix(int row, int col)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n\n    Matrix(int row, int col, const double *value)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = value[i * col + j];\n            }\n        }\n    }\n    \n    Matrix (const Matrix & matrix1)\n    {\n        row = matrix1.row;\n        col = matrix1.col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = matrix1.matrix[i][j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            if (matrix[i] != nullptr) delete [] matrix[i];\n        }\n        if (matrix != nullptr) delete [] matrix;\n    }\n    \n    Matrix getColumn(int row)\n    {\n        Matrix t(this -> row, 1);\n        for(int i = 0; i < this -> row; ++i)\n        {\n            t.matrix[i][0] = matrix[i][row - 1];\n        }\n        return t;\n    }\n\n    Matrix getRow(int col)\n    {\n        Matrix t(1, this -> col);\n        for(int i = 0; i < this -> col; ++i)\n        {\n            t.matrix[0][i] = matrix[col - 1][i];\n        }\n        return t;\n    }\n\n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < col; ++j)\n            {\n                cout << \"    \" << matrix[i][j];\n            }\n            cout << endl;\n        }\n    }\n\nprivate:\n    double **matrix;\n    int row;\n    int col;\n};\n\n",
            1588824886.7492635,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "杨宗恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\npublic:\n    Matrix()\n    {\n        matrix = nullptr;\n        row = 0;\n        col = 0;\n    }\n\n    Matrix(int row, int col)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n\n    Matrix(int row, int col, const double *value)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = value[i * col + j];\n            }\n        }\n    }\n    \n    Matrix (const Matrix & matrix1)\n    {\n        row = matrix1.row;\n        col = matrix1.col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = matrix1.matrix[i][j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            if (matrix[i] != nullptr) delete [] matrix[i];\n        }\n        if (matrix != nullptr) delete [] matrix;\n    }\n    \n    Matrix getColumn(int row)\n    {\n        Matrix t(this -> row, 1);\n        for(int i = 0; i < this -> row; ++i)\n        {\n            t.matrix[i][0] = matrix[i][row - 1];\n        }\n        return t;\n    }\n\n    Matrix getRow(int col)\n    {\n        Matrix t(1, this -> col);\n        for(int i = 0; i < this -> col; ++i)\n        {\n            t.matrix[0][i] = matrix[col - 1][i];\n        }\n        return t;\n    }\n    \n    Matrix concatenateRows(Matrix & matrix1)\n    {\n        Matrix t(row + matrix1.row, col);\n        for(int i = 0; i < row; ++i)\n        {\n            for(int j = 0; j < col; ++j)\n            {\n                t.matrix[i][j] = matrix[i][j];\n            }\n        }\n        for(int i = row; i < t.row; ++i)\n        {\n            for(int j = 0; j < col; ++j)\n            {\n                t.matrix[i][j] = matrix1.matrix[i - row][j];\n            }\n        }\n        return t;\n    }\n\n    Matrix concatenateColumns(Matrix & matrix1)\n    {\n        Matrix t(row, col + matrix1.col);\n        for(int i = 0; i < row; ++i)\n        {\n            for(int j = 0; j < col; ++j)\n            {\n                t.matrix[i][j] = matrix[i][j];\n            }\n        }\n        for(int i = 0; i < row; ++i)\n        {\n            for(int j = col; j < t.col; ++j)\n            {\n                t.matrix[i][j] = matrix1.matrix[i][j - col];\n            }\n        }\n        return t;\n    }\n\n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < col; ++j)\n            {\n                cout << \"    \" << matrix[i][j];\n            }\n            cout << endl;\n        }\n    }\n\nprivate:\n    double **matrix;\n    int row;\n    int col;\n};\n\n",
            1588824980.7307172,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "许遵楠",
            "#include <iostream>\nusing namespace std;\nclass Matrix {\n  public:\n    Matrix() {\n        rows = columns = 0;\n        values = 0;\n    }\n    Matrix(int r, int c) {\n        rows = r;\n        columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r; ++i)\n            for (int j = 0; j < c; ++j)\n                values[i * columns + j] = 0;\n    }\n    ~Matrix() {\n        if (values != 0)\n            delete[] values;\n    }\n    void print() {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j)\n                cout << \"    \" << values[i * columns + j];\n            cout << endl;\n        }\n    }\n\n  private:\n    int rows, columns;\n    double *values;\n};",
            1588825139.4148598,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王振恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\n    private:\n        int rows;\n        int columns;\n        double * values;\n    public:\n        Matrix(int rows,int columns)\n        {\n            this->rows = rows;\n            this->columns = columns;\n           double* map = NULL; \n\t\t\t\tmap = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = 0;\n            }\n            this->values = map;\n        }\n        void print()\n        {\n            for(int i=0;i<this->rows;++i){\n                for(int j=0;j<this->columns;++j)\n                {\n                    cout<<\"    \"<<this->values[i*this->columns+j];\n                }\n                cout<<endl;\n            }\n        }\n        ~Matrix()\n        {\n            delete [] this->values;\n        }\n};",
            1588825873.026521,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "韦媛馨",
            "#include<iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows,columns;\n\t\tdouble *values;\n\tpublic:\n\t\tMatrix(int rows,int columns){\n\t\t\tthis->rows=rows;\n\t\t\tthis->columns=columns;\n\t\t\tvalues=new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;++i) values[i]=0;\n\t\t}\n\t\t~Matrix(){\n\t\t\tdelete[]values;\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=0;i<rows;++i){\n\t\t\t\tfor(int j=0;j<columns;++j){\n\t\t\t\t\tcout<<\"    \"<<values[i*columns+j];\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n};",
            1588825315.5456383,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "廖雨轩",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double *values;\n\npublic:\n    Matrix(int r, int c)\n    {\n        this->rows = r;\n        this->columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r * c; i++)\n            values[i] = 0.0;\n    }\n    Matrix(int r, int c, double val[])\n    {\n        this->rows = r;\n        this->columns = c;\n        this->values = new double[r * c + 1];\n        for (int i = 0; i < r * c; i++)\n            values[i] = val[i];\n    }\n    ~Matrix()\n    {\n        delete[] values;\n    }\n    void print()\n    {\n        int ini = 0;\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n                if (this->values[ini] < 10)\n                {\n                    cout << \"    \" << this->values[ini];\n                    ini++;\n                }\n                else\n                {\n                    cout << \"   \" << this->values[ini];\n                    ini++;\n                }\n            }\n            cout << endl;\n        }\n    }\n};",
            1588908675.8881478,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "test",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\npublic:\n\tint rows;\n\tint cols;\n\tMatrix(int rows, int cols) {\n\t\tthis->rows = rows;\n\t\tthis->cols = cols;\n\t}\n\tvoid print() {\n\t\tfor (int i = 0; i < this->rows; ++ i) {\n\t\t\tfor (int j = 0; j < this->cols; ++ j) {\n\t\t\t\tcout << \"    0\";\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588900771.8070893,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "许遵楠",
            "#include <iomanip>\n#include <iostream>\nusing namespace std;\nclass Matrix {\n  public:\n    Matrix() {\n        rows = columns = 0;\n        values = 0;\n    }\n    Matrix(int r, int c, double *val) {\n        rows = r;\n        columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r; ++i)\n            for (int j = 0; j < c; ++j)\n                values[i * columns + j] = val[i * columns + j];\n    }\n    ~Matrix() {\n        if (values != 0)\n            delete[] values;\n    }\n    void print() {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j)\n                cout << setw(5) << values[i * columns + j];\n            cout << endl;\n        }\n    }\n\n  private:\n    double *values;\n    int rows, columns;\n};",
            1588825417.5190067,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王子豪",
            "#include<iostream>\nusing namespace std;\nclass Matrix\n{\n\tprivate:\n\tint rows;\nint columns;\ndouble * values;\n\tpublic:\n\tMatrix(int row,int col){\n\t\trows=row;\n\t\tcolumns=col;\n\t\tvalues=new double[row*col];\n\t\tfor(int i=0;i<col*row;i++){\n\t\t\tvalues[i]=0;\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int j=0;j<rows;j++){\n\t\t\tfor(int i=0;i<columns;i++){\n\t\t\t\tprintf(\"    %.0lf\",values[j*columns+i]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t}\n};",
            1588825579.0233696,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "廖雨轩",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double *values;\n\npublic:\n    Matrix(int r, int c)\n    {\n        this->rows = r;\n        this->columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r * c; i++)\n            values[i] = 0.0;\n    }\n    Matrix(int r, int c, double val[])\n    {\n        this->rows = r;\n        this->columns = c;\n        this->values = new double[r * c + 1];\n        for (int i = 0; i < r * c; i++)\n            values[i] = val[i];\n    }\n    Matrix(const Matrix &matrix2)\n    {\n        int r = matrix2.rows;\n        int c = matrix2.columns;\n        this->rows = r;\n        this->columns = c;\n        this->values = new double[r * c + 1];\n        for(int i = 0; i < r*c; i++)\n            values[i] = matrix2.values[i];\n    }\n    ~Matrix()\n    {\n        delete[] values;\n    }\n    void print()\n    {\n        int ini = 0;\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n                cout << \"    \" << this->values[ini++];\n            }\n            cout << endl;\n        }\n    }\n};\n",
            1588908751.4221082,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "孙奥远",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double**values;\npublic:\n    Matrix(int rows,int columns);\n    ~Matrix();\n    void print();\n};\n\nMatrix::Matrix(int rows,int columns)\n{\n    this->rows = rows;\n    this->columns = columns;\n    values = new double* [rows];\n    for(int i = 0;i < rows;i++)\n    {\n        values[i] = new double [columns];\n        for(int j = 0;j < columns;j++)\n            values[i][j] = 0;\n    }\n}\n\nMatrix::~Matrix()\n{\n    for(int i = 0;i < rows;i++)\n        delete [] values[i];\n    delete [] values;\n}\n\nvoid Matrix::print()\n{\n    for(int i = 0;i < rows;i++)\n    {\n        for(int j = 0;j < columns;j++)\n            cout << \"    \" << values[i][j];\n        cout << endl;\n    }\n}",
            1588825588.0986283,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "邵震东",
            "#include <iostream>\n\nclass Matrix {\nprivate:\n    int rows;\n    int columns;\n    double * values;\npublic:\n    Matrix() = default;\n    Matrix(int row, int column)\n    {\n        rows = row;\n        columns = column;\n        this->values = new double [row * column];\n        for (int i = 0; i < row * column; ++i) {\n            *(values + i) = 0;\n        }\n    }\n    ~Matrix() { delete [] values; }\n    void print() const\n    {\n        for (int i = 0; i < rows * columns; ) {\n            for (int j = 0; j < columns; ++j) {\n                if (j == columns - 1)\n                    std::cout << *(values + i);\n                else\n                    std::cout << *(values + i) << \"    \";\n                ++i;\n            }\n            std::cout << std::endl;\n        }\n    }\n};\n\nusing namespace std;",
            1588825707.466007,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "王子豪",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n\tprivate:\n\tint rows;\nint columns;\ndouble * values;\n\tpublic:\n\tMatrix(int row,int col,double* p){\n\t\trows=row;\n\t\tcolumns=col;\n\t\tvalues=new double[row*col];\n\t\tfor(int i=0;i<col*row;i++){\n\t\t\tvalues[i]=p[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int j=0;j<rows;j++){\n\t\t\tfor(int i=0;i<columns;i++){\n\t\t\t\t\n\t\t\t\tcout<<setw(5)<<values[j*columns+i];\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t}\n};",
            1588825945.5490785,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "韦媛馨",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix {\nprivate:\n\tint rows, columns;\n\tdouble* values;\npublic:\n\tMatrix(int rows, int columns, double values[]) {\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor (int i = 0; i < rows * columns; ++i) this->values[i] = values[i];\n\t}\n\t~Matrix() {\n\t\tdelete[]values;\n\t}\n\tvoid print() {\n\t\tfor (int i = 0; i < rows; ++i) {\n\t\t\tfor (int j = 0; j < columns; ++j) {\n\t\t\t\tcout <<setw(5)<<values[i * columns + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588825965.6536405,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "王振恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\n    private:\n        int rows;\n        int columns;\n        double * values;\n    public:\n        Matrix(int rows,int columns,double* values)\n        {\n            this->rows = rows;\n            this->columns = columns;\n           double* map = NULL; \n\t\t\t\tmap = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = values[i];\n            }\n            this->values = map;\n        }\n        void print()\n        {\n            for(int i=0;i<this->rows;++i){\n                for(int j=0;j<this->columns;++j)\n                {\n                if(this->values[i*this->columns+j]<10)    \n\t\t\t\t\t\t\tcout<<\"    \"<<this->values[i*this->columns+j];\n\t\t\t\t\t\telse cout<<\"   \"<<this->values[i*this->columns+j];\n                }\n                cout<<endl;\n            }\n        }\n        ~Matrix()\n        {\n            delete [] this->values;\n        }\n};",
            1588826488.504686,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "许遵楠",
            "#include <iostream>\nusing namespace std;\nclass Matrix {\n  public:\n    Matrix() {\n        rows = columns = 0;\n        values = 0;\n    }\n    Matrix(int r, int c, double *val) {\n        rows = r;\n        columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r; ++i)\n            for (int j = 0; j < c; ++j)\n                values[i * columns + j] = val[i * columns + j];\n    }\n    Matrix(const Matrix &matrix2) {\n        rows = matrix2.get_r();\n        columns = matrix2.get_c();\n        values = new double[rows * columns];\n        for (int i = 0; i < rows; ++i)\n            for (int j = 0; j < columns; ++j)\n                values[i * columns + j] = matrix2.get_v(i, j);\n    }\n    ~Matrix() {\n        if (values != 0)\n            delete[] values;\n    }\n    int get_r() const {\n        return rows;\n    }\n    int get_c() const {\n        return columns;\n    }\n    double get_v(int i, int j) const {\n        return values[i * columns + j];\n    }\n    void print() {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j)\n                cout << \"    \" << values[i * columns + j];\n            cout << endl;\n        }\n    }\n\n  private:\n    int rows, columns;\n    double *values;\n};",
            1588826035.4439518,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "施天予",
            "#include <iostream>\n#include<iomanip>\n#include<cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows,columns;\n    double values[10][10];\npublic:\n    Matrix(int rows,int columns) {\n        this->rows = rows;\n        this->columns = columns;\n        memset(values,0,sizeof(values));\n    }\n    ~Matrix() {}\n    void print () {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<setw(5)<<values[i][j];\n            }\n            cout<<endl;\n        }\n    }\n};",
            1588826163.7910411,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "廖雨轩",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double *values;\n\npublic:\n    Matrix(int r, int c)\n    {\n        this->rows = r;\n        this->columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r * c; i++)\n            values[i] = 0.0;\n    }\n    Matrix(int r, int c, double val[])\n    {\n        this->rows = r;\n        this->columns = c;\n        this->values = new double[r * c + 1];\n        for (int i = 0; i < r * c; i++)\n            values[i] = val[i];\n    }\n    Matrix(const Matrix &matrix2)\n    {\n        int r = matrix2.rows;\n        int c = matrix2.columns;\n        this->rows = r;\n        this->columns = c;\n        this->values = new double[r * c + 1];\n        for(int i = 0; i < r*c; i++)\n            values[i] = matrix2.values[i];\n    }\n    ~Matrix()\n    {\n        delete[] values;\n    }\n    void print()\n    {\n        int ini = 0;\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n                cout << \"    \" << this->values[ini++];\n            }\n            cout << endl;\n        }\n    }\n    Matrix getRow(int r)\n    {\n        int row = 1;\n        int col = this->columns;\n        double *val = new double[row * col + 1];\n        for (int i = 0; i < row * col; i++)\n        {\n            val[i] = values[(r - 1) * col + i];\n        }\n        Matrix ret(row, col, val);\n        return ret;\n    }\n    Matrix getColumn(int c)\n    {\n        int row = this->rows;\n        int col = 1;\n        double *val = new double[row * col + 1];\n\n        for (int i = 0; i < row * col; i++)\n        {\n            val[i] = values[(c - 1) + i * columns];\n        }\n        Matrix ret(row, col, val);\n        return ret;\n    }\n};",
            1588908824.8660777,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "韦媛馨",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix {\nprivate:\n\tint rows, columns;\n\tdouble* values;\npublic:\n\tMatrix(int rows, int columns, double values[]) {\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor (int i = 0; i < rows * columns; ++i) this->values[i] = values[i];\n\t}\n\t~Matrix() {\n\t\tdelete[]values;\n\t}\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows =matrix2.rows;\n\t\tthis->columns = matrix2.columns;\n\t\tthis->values = new double[matrix2.rows*matrix2.columns];\n\t\tfor (int i = 0; i < matrix2.rows *matrix2.columns; ++i) this->values[i] = matrix2.values[i];\n\t}\n\tvoid print() {\n\t\tfor (int i = 0; i < rows; ++i) {\n\t\t\tfor (int j = 0; j < columns; ++j) {\n\t\t\t\tcout <<\"    \"<<values[i * columns + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588826203.815383,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "邵震东",
            "#include <iostream>\n#include <iomanip>\n\nclass Matrix {\nprivate:\n    int rows;\n    int columns;\n    double * values;\npublic:\n    Matrix() = default;\n    Matrix(int row, int column, double * value)\n    {\n        rows = row;\n        columns = column;\n        this->values = new double [row * column];\n        for (int i = 0; i < row * column; ++i) {\n            *(values + i) = *(value + i);\n        }\n    }\n    ~Matrix() { delete [] values; }\n    void print() const\n    {\n        for (int i = 0; i < rows * columns; ) {\n            for (int j = 0; j < columns; ++j) {\n                std::cout << std::setw(5);\n                std::cout << *(values + i);\n                ++i;\n            }\n            std::cout << std::endl;\n        }\n    }\n};\n\nusing namespace std;",
            1588826261.7367978,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "王子豪",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n\tprivate:\n\tint rows;\nint columns;\ndouble * values;\n\tpublic:\n\t Matrix(const Matrix & matrix2)\n\t {\n\t\t rows=matrix2.rows;\n\t\t columns=matrix2.columns;\n\t\t values=new double[rows*columns];\n\t\tfor(int i=0;i<columns*rows;i++){\n\t\t\tvalues[i]=matrix2.values[i];\n\t\t}\n\t\t \n}\n\tMatrix(int row,int col,double* p){\n\t\trows=row;\n\t\tcolumns=col;\n\t\tvalues=new double[row*col];\n\t\tfor(int i=0;i<col*row;i++){\n\t\t\tvalues[i]=p[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int j=0;j<rows;j++){\n\t\t\tfor(int i=0;i<columns;i++){\n\t\t\t\t\tprintf(\"    %.0lf\",values[j*columns+i]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t}\n};",
            1588826322.952377,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王彬",
            "#include<iostream>\n\nusing namespace std;\n\nclass Matrix\n{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows, int columns)\n\t\t{\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tthis->values = new double [rows * columns + 1];\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) values[i * this->columns + j] = 0;\n\t\t\t}\n\t\t}\n\t\t~Matrix()\n\t\t{\n\t\t\tdelete [] this->values;\n\t\t}\n\t\tvoid print()\n\t\t{\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) cout << values[i * this->columns + j] << \"    \";\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n};",
            1588827301.2467828,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "孙奥远",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double **values;\n\npublic:\n    Matrix(int rows, int columns, double values[]);\n    ~Matrix();\n    void print();\n};\n\nMatrix::Matrix(int rows, int columns, double val[])\n{\n    this->rows = rows;\n    this->columns = columns;\n    this->values = new double *[rows];\n    for (int i = 0; i < rows; i++)\n    {\n        this->values[i] = new double[columns];\n        for (int j = 0; j < columns; j++)\n        {\n            values[i][j] = val[i * columns + j];\n        }\n    }\n}\n\nMatrix::~Matrix()\n{\n    for (int i = 0; i < rows; i++)\n    {\n        delete[] values[i];\n    }\n    delete[] values;\n}\n\nvoid Matrix::print()\n{\n    for (int i = 0; i < rows; i++)\n    {\n        for (int j = 0; j < columns; j++)\n        {\n            cout << setw(5) << values[i][j];\n        }\n        cout << endl;\n    }\n}",
            1588826440.4969926,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "施天予",
            "#include <iostream>\n#include<iomanip>\n#include<cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows,columns;\n    double values[10][10];\npublic:\n    Matrix(int rows,int columns,double values[]) {\n        this->rows = rows;\n        this->columns = columns;\n        int k = 0;\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                this->values[i][j] = values[k++];\n            }\n        }\n    }\n    ~Matrix() {}\n    void print () {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<setw(5)<<values[i][j];\n            }\n            cout<<endl;\n        }\n    }\n};",
            1588826502.1844907,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "施天予",
            "#include <iostream>\n#include<iomanip>\n#include<cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows,columns;\n    double values[10][10];\npublic:\n    Matrix(int rows,int columns,double values[]) {\n        this->rows = rows;\n        this->columns = columns;\n        int k = 0;\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                this->values[i][j] = values[k++];\n            }\n        }\n    }\n    Matrix(const Matrix & matrix2) {\n        rows = matrix2.rows;\n        columns = matrix2.columns;\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                values[i][j] = matrix2.values[i][j];\n            }\n        }\n    }\n    ~Matrix() {}\n    void print () {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<\"    \"<<values[i][j];\n            }\n            cout<<endl;\n        }\n    }\n};",
            1588826894.7832873,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "王子豪",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n\tprivate:\n\tint rows;\nint columns;\ndouble * values;\n\tpublic:\n\tMatrix(int row,int col){\n\t\trows=row;\n\t\tcolumns=col;\n\t\tvalues=new double[row*col];\n\t\tfor(int i=0;i<col*row;i++){\n\t\t\tvalues[i]=0;\n\t\t}\n\t}\n\t Matrix(const Matrix & matrix2)\n\t {\n\t\t rows=matrix2.rows;\n\t\t columns=matrix2.columns;\n\t\t values=new double[rows*columns];\n\t\tfor(int i=0;i<columns*rows;i++){\n\t\t\tvalues[i]=matrix2.values[i];\n\t\t}\n}\n\t\n\tMatrix getRow(int row){\n\t\tMatrix t(1,this->columns);\n\t\t\n\t\tfor(int i=0;i<columns;i++){\n\t\t\tt.values[i]=this->values[(row-1)*columns+i];\n\t\t}\n\t\treturn t;\n\t}\n\tMatrix getColumn(int column){\n\t\tMatrix t(this->rows,1);\n\t\t\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tt.values[i]=this->values[column-1+i*rows];\n\t\t}\n\t\treturn t;\n\t}\n\tMatrix(int row,int col,double* p){\n\t\trows=row;\n\t\tcolumns=col;\n\t\tvalues=new double[row*col];\n\t\tfor(int i=0;i<col*row;i++){\n\t\t\tvalues[i]=p[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int j=0;j<rows;j++){\n\t\t\tfor(int i=0;i<columns;i++){\n\t\t\t\t\tprintf(\"    %.0lf\",values[j*columns+i]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t}\n};",
            1588827308.19818,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "韦媛馨",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix {\nprivate:\n\tint rows, columns;\n\tdouble* values;\npublic:\n\tMatrix(int rows,int columns){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tvalues=new double[rows*columns];\n\t\tfor(int i=0;i<rows*columns;++i) values[i]=0;\n\t}\n\tMatrix(int rows, int columns, double values[]) {\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor (int i = 0; i < rows * columns; ++i) this->values[i] = values[i];\n\t}\n\t~Matrix() {\n\t\tdelete[]values;\n\t}\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows =matrix2.rows;\n\t\tthis->columns = matrix2.columns;\n\t\tthis->values = new double[matrix2.rows*matrix2.columns];\n\t\tfor (int i = 0; i < matrix2.rows *matrix2.columns; ++i) this->values[i] = matrix2.values[i];\n\t}\n\tvoid print() {\n\t\tfor (int i = 0; i < rows; ++i) {\n\t\t\tfor (int j = 0; j < columns; ++j) {\n\t\t\t\tcout <<\"    \"<<values[i * columns + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n\tMatrix getRow(int row){\n\t\trow--;\n\t\tMatrix res(1,this->columns);\n\t\tfor(int i=0;i<columns;++i){\n\t\t\tres.values[i]=values[row*columns+i];\n\t\t}\n\t\treturn res;\n\t}\n\tMatrix getColumn(int column){\n\t\tcolumn--;\n\t\tMatrix res(this->rows,1);\n\t\tfor(int i=0;i<rows;++i){\n\t\t\tres.values[i]=values[columns*i+column];\n\t\t}\n\t\treturn res;\n\t}\n};",
            1588826810.9986281,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "谢扬",
            "#include<iostream>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nclass Matrix\n{\n\tprivate:\n\t\tint rows,columns;\n\t\tdouble*values;//析构函数/复制构造函数/重载赋值运算府\n\tpublic:\n\tMatrix(int m_rows=0, int m_columns=0):rows(m_rows),columns(m_columns)\n\t{columns<0?(values=nullptr):(values=new double[columns]{});}\n\tbool print();\n\t~Matrix();\n};\nbool Matrix::print()\n{\n\tif(rows<0||columns<0)return false;\n\tfor(int row=0;row<rows;++row)\n\t{\n\t\tfor(int column=0;column<columns;++column)\n\t\tcout<<values[column]<<\"    \";\n\t\tcout<<endl;\n\t}\n\treturn true;\n}\nMatrix::~Matrix()\n{\n\tdelete[]values;\n}\n",
            1588826919.46084,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "许遵楠",
            "#include <iostream>\nusing namespace std;\nclass Matrix {\n  public:\n    Matrix() {\n        rows = columns = 0;\n        values = 0;\n    }\n    Matrix(int r, int c) {\n        rows = r;\n        columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r; ++i)\n            for (int j = 0; j < c; ++j)\n                values[i * columns + j] = 0;\n    }\n    Matrix(int r, int c, double *val) {\n        rows = r;\n        columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r; ++i)\n            for (int j = 0; j < c; ++j)\n                values[i * columns + j] = val[i * columns + j];\n    }\n    Matrix(const Matrix &matrix2) {\n        rows = matrix2.get_r();\n        columns = matrix2.get_c();\n        values = new double[rows * columns];\n        for (int i = 0; i < rows; ++i)\n            for (int j = 0; j < columns; ++j)\n                values[i * columns + j] = matrix2.get_v(i, j);\n    }\n    ~Matrix() {\n        if (values != 0)\n            delete[] values;\n    }\n    int get_r() const {\n        return rows;\n    }\n    int get_c() const {\n        return columns;\n    }\n    double get_v(int i, int j) const {\n        return values[i * columns + j];\n    }\n    void set_v(int i, double val) {\n        values[i] = val;\n    }\n    void print() {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j)\n                cout << \"    \" << values[i * columns + j];\n            cout << endl;\n        }\n    }\n    Matrix getRow(int row) {\n        Matrix gr = Matrix(1, columns);\n        for (int i = 0; i < columns; ++i)\n            gr.set_v(i, get_v(row - 1, i));\n        return gr;\n    }\n    Matrix getColumn(int columns) {\n        Matrix gc = Matrix(rows, 1);\n        for (int i = 0; i < rows; ++i)\n            gc.set_v(i, get_v(i, columns - 1));\n        return gc;\n    }\n\n  private:\n    int rows, columns;\n    double *values;\n};",
            1588826962.357066,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "谢浩林",
            "#include <iostream>\nusing namespace std ;\nclass Matrix{\n\tprivate :\n\tint row ;\n\tint col ;\n\tpublic:\n\tMatrix() {\n\t\trow = 0 ;\n\t\tcol = 0 ;\n\t}\n\tMatrix(int row_,int col_) {\n\t\trow = row_ ;\n\t\tcol = col_ ;\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tcout << \"    0\" ;\n\t\t\t}\n\t\t\tcout << endl ;\n\t\t}\n\t}\n\t~Matrix(){}\n};",
            1588827155.2034504,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "潘思晗",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t}\n\t~Matrix(){};\n\tvoid print(){\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tcout<<' '<<' '<<' '<<' '<<this->values;\t\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\t\n};",
            1588827242.0801387,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "王振恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\n    private:\n        int rows;\n        int columns;\n        double * values;\n    public:\n        Matrix(int rows,int columns,double* values)\n        {\n            this->rows = rows;\n            this->columns = columns;\n           double* map = NULL; \n\t\t\t\tmap = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = values[i];\n            }\n            this->values = map;\n        }\n\t\t  Matrix(const Matrix & matrix2)\n\t\t  {\n\t\t\t  this->rows = matrix2.rows;\n           this->columns = matrix2.columns;\n\t\t\t  double* map = NULL; \n\t\t\t  map = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = matrix2.values[i];\n            }\n            this->values = map;\n\t\t  }\n        void print()\n        {\n            for(int i=0;i<this->rows;++i){\n                for(int j=0;j<this->columns;++j)\n                {\n                if(this->values[i*this->columns+j]<10)    \n\t\t\t\t\t\t\tcout<<\"    \"<<this->values[i*this->columns+j];\n\t\t\t\t\t\telse cout<<\"    \"<<this->values[i*this->columns+j];\n                }\n                cout<<endl;\n            }\n        }\n        ~Matrix()\n        {\n            delete [] this->values;\n        }\n};",
            1588827144.117979,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "唐晨轩",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\tint r;\n\tint c;\n\tdouble values;\n\tMatrix(){\n\t\tr = 0;\n\t\tc = 0;\n\t\tvalues = 0;\n\t}\n\tMatrix(int rows,int columns){\n\t\tr = rows;\n\t\tc = columns;\n\t\tvalues = 0;\n\t}\n\tvoid print();\n};\n\nvoid Matrix::print(){\n\tfor(int i = 0; i < r; i++){\n\t\tfor(int j = 0; j < c; j++){\n\t\t\tcout << \"    \" << values ;\n\t\t}\n\t\tcout << endl;\n\t}\n}",
            1588827520.5315351,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "孙奥远",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double **values;\n\npublic:\n    Matrix(int rows, int columns, double values[]);\n    ~Matrix();\n    Matrix(const Matrix&matrix2);\n    void print();\n};\n\nMatrix::Matrix(int rows, int columns, double val[])\n{\n    this->rows = rows;\n    this->columns = columns;\n    this->values = new double *[rows];\n    for (int i = 0; i < rows; i++)\n    {\n        this->values[i] = new double[columns];\n        for (int j = 0; j < columns; j++)\n        {\n            values[i][j] = val[i * columns + j];\n        }\n    }\n}\n\nMatrix::~Matrix()\n{\n    for (int i = 0; i < rows; i++)\n    {\n        delete[] values[i];\n    }\n    delete[] values;\n}\n\nvoid Matrix::print()\n{\n    for (int i = 0; i < rows; i++)\n    {\n        for (int j = 0; j < columns; j++)\n        {\n            cout << \"    \" << values[i][j];\n        }\n        cout << endl;\n    }\n}\n\nMatrix::Matrix(const Matrix&matrix2)\n{\n    rows = matrix2.rows;\n    columns = matrix2.columns;\n    values = new double* [rows];\n    for(int i = 0;i < rows;i++)\n    {\n        values[i] = new double [columns];\n        for(int j = 0;j < columns;j++)\n        {\n            values[i][j] = matrix2.values[i][j];\n        }\n    }\n}",
            1588827254.4722953,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "謝敏華",
            "#include<iostream>\nusing namespace std;\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=rows*columns; i++) this->values[i]=0;\n\t}\n\t~Matrix(){\n\t}\n\tvoid print(){\n\t\tfor(int i=0; i<this->rows*this->columns; i++){\n\t\t\tprintf(\"%4.0lf \",this->values[i]);\n\t\t\tif( (i+1)%this->columns==0) putchar('\\n');\n\t\t}\n\t}\n}; ",
            1588827361.4240196,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "谢浩林",
            "#include <iostream>\nusing namespace std ;\nclass Matrix{\n\tprivate :\n\tint row ;\n\tint col ;\n\tdouble val[1000] ;\n\tpublic:\n\tMatrix() {\n\t\trow = 0 ;\n\t\tcol = 0 ;\n\t\tval[0] = 0 ;\n\t}\n\tMatrix(int row_,int col_,double val_[]) {\n\t\trow = row_ ;\n\t\tcol = col_ ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tval[i*col+k] = val_[i*col+k] ;\n\t\t\t}\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tif(val[i*col+k]<10)cout << \"    \"<<val[i*col+k] ;\n\t\t\t\telse cout << \"   \"<<val[i*col+k] ;\n\t\t\t}\n\t\t\tcout << endl ;\n\t\t}\n\t}\n\t~Matrix(){}\n};",
            1588827595.9451768,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "謝敏華",
            "#include<iostream>\nusing namespace std;\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns, double *values){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=rows*columns; i++) this->values[i]=values[i];\n\t}\n\t~Matrix(){\n\t}\n\tvoid print(){\n\t\tfor(int i=0; i<this->rows*this->columns; i++){\n\t\t\tprintf(\"%4.0lf \",this->values[i]);\n\t\t\tif( (i+1)%this->columns==0) putchar('\\n');\n\t\t}\n\t}\n}; ",
            1588827439.8251073,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "王彬",
            "#include<iostream>\n#include<iomanip>\n\nusing namespace std;\n\nclass Matrix\n{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows, int columns, double values[])\n\t\t{\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tthis->values = new double [rows * columns + 1];\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) this->values[i * this->columns + j] = values[i * this->columns + j];\n\t\t\t}\n\t\t}\n\t\t~Matrix()\n\t\t{\n\t\t\tdelete [] this->values;\n\t\t}\n\t\tvoid print()\n\t\t{\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) cout << setw(5) << values[i * this->columns + j];\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n};",
            1588828766.807084,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "謝敏華",
            "#include<iostream>\nusing namespace std;\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns, double *values){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=rows*columns; i++) this->values[i]=values[i];\n\t}\n\tMatrix(Matrix & matrix2){\n\t\tthis->rows=matrix2.rows;\n\t\tthis->columns=matrix2.columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=this->rows*this->columns; i++) \n\t\t\tthis->values[i]=matrix2.values[i];\n\t}\n\t~Matrix(){\n\t}\n\tvoid print(){\n\t\tfor(int i=0; i<this->rows*this->columns; i++){\n\t\t\tprintf(\"    %.0lf\",this->values[i]);\n\t\t\tif( (i+1)%this->columns==0) putchar('\\n');\n\t\t}\n\t}\n}; \n",
            1588827747.5182817,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "谢浩林",
            "#include <iostream>\nusing namespace std ;\nclass Matrix{\n\tprivate :\n\tint row ;\n\tint col ;\n\tdouble val[100][100] ;\n\tpublic:\n\tMatrix() {\n\t\trow = 0 ;\n\t\tcol = 0 ;\n\t\tval[0][0] = 0 ;\n\t}\n\tMatrix(int row_,int col_,double val_[]) {\n\t\trow = row_ ;\n\t\tcol = col_ ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tval[k][i] = val_[i*col+k] ;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix(const Matrix &m2) {\n\t\tthis->row = m2.row ;\n\t\tthis->col = m2.col ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tthis->val[k][i] = m2.val[k][i] ;\n\t\t\t}\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tcout<< \"    \"<<val[k][i] ;\n\t\t\t}\n\t\t\tcout << endl ;\n\t\t}\n\t}\n\t~Matrix(){}\n};",
            1588827856.6843815,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "谢扬",
            "#include<iostream>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nclass Matrix\n{\n\tprivate:\n\t\tint rows,columns;\n\t\tdouble*values;//析构函数/复制构造函数/重载赋值运算府\n\tpublic:\n\tMatrix(int m_rows=0, int m_columns=0,double*m_values=nullptr):rows(m_rows),columns(m_columns),values(m_values)\n\t{if(columns<0||rows<0)values=nullptr;}\n\tbool print();\n};\nbool Matrix::print()\n{\n\tif(rows<0||columns<0)return false;\n\tfor(int row=0;row<rows*columns;++row)\n\t{cout.width(5);\n\t\tcout<<values[row];\n\t\tif(row%columns==columns-1)cout<<endl;\n\t}\n\treturn true;\n}\n",
            1588827965.5655549,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "谢浩林",
            "#include <iostream>\nusing namespace std ;\nclass Matrix{\n\tprivate :\n\tint row ;\n\tint col ;\n\tdouble val[100][100] ;\n\tpublic:\n\tMatrix() {\n\t\trow = 0 ;\n\t\tcol = 0 ;\n\t\tval[0][0] = 0 ;\n\t}\n\tMatrix(int row_,int col_) {\n\t\trow = row_ ;\n\t\tcol = col_ ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tval[k][i] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix(int row_,int col_,double val_[]) {\n\t\trow = row_ ;\n\t\tcol = col_ ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tval[k][i] = val_[i*col+k] ;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix(const Matrix &m2) {\n\t\tthis->row = m2.row ;\n\t\tthis->col = m2.col ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tthis->val[k][i] = m2.val[k][i] ;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix getRow(int row) {\n\t\tMatrix m3(1,this->col);\n\t\tfor(int i = 0 ; i < this -> col ; i ++) {\n\t\t\tm3.val[i][0]=val[i][row-1] ;\n\t\t}\n\t\treturn m3 ;\n\t}\n\tMatrix getColumn(int col) {\n\t\tMatrix m3(this->row,1);\n\t\tfor(int i = 0 ; i < this -> row ; i ++) {\n\t\t\tm3.val[0][i]=val[col-1][i] ;\n\t\t}\n\t\treturn m3 ;\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tcout<< \"    \"<<val[k][i] ;\n\t\t\t}\n\t\t\tcout << endl ;\n\t\t}\n\t}\n\t~Matrix(){}\n};",
            1588828745.9549289,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王筝",
            "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows;\n        int columus;\n        double *values;\n    public:\n        Matrix(int r,int c){\n            this->values = (double*)malloc(sizeof(double)*r*c);\n            memset(values, 0, sizeof(values)*r*c);\n            this->rows = r;\n            this->columus = c;\n        }\n        void print(){\n            for (int i = 0; i < this->rows;i++){\n                for (int j = 0; j < this->columus;j++){\n                    cout << \"    \" << *(this->values++);\n                }\n                cout << endl;\n            }\n        }\n        ~Matrix(){\n            \n        }\n};",
            1588828168.588918,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "潘思晗",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\t Matrix(int rows, int columns, double values[]){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tint sizes=this->rows*this->columns;\n\t\tthis->values=new double [sizes];\n\t\tfor(int i=0;i<sizes;i++) this->values[i]=values[i];\n\t\t/*for(int i=0;i<rows;i++)\n\t\t\tthis->values[i] = new double[columns];\n\t\tint k=0;\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tthis->values[i][j]=values[k++];\n\t\t\t}\n\t\t}*/\n\t}\n\t~Matrix(){\n\t\t/*for(int i=0;i<rows;i++)\n\t\t\tdelete [] values[i];*/\n\t\tdelete []values;\n\t}\n\tvoid print(){\n\t\tint index;\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tindex=i*columns+j;\n\t\t\t\tcout<<setw(5)<<setfill(' ')<<setiosflags(ios::right)<<this->values[index];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n};",
            1588907015.740413,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "王筝",
            "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows;\n        int columus;\n        double *values;\n    public:\n        Matrix(int r,int c,double value[]){\n            this->values = (double*)malloc(sizeof(double)*r*c);\n            memset(values, 0, sizeof(values)*r*c);\n            double *p = this->values;\n            this->rows = r;\n            this->columus = c;\n            for (int i = 0; i < r * c;i++){\n                *p = value[i];\n                p++;\n            }\n        }\n        void print(){\n            for (int i = 0; i < this->rows;i++){\n                for (int j = 0; j < this->columus;j++){\n                    cout << setw(5) << *(this->values++);\n                }\n                cout << endl;\n            }\n        }\n        ~Matrix(){\n            \n        }\n};",
            1588828383.7632782,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "施天予",
            "#include <iostream>\n#include<iomanip>\n#include<cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows,columns;\n    double values[10][10];\npublic:\n    Matrix(int rows,int columns) {\n        this->rows = rows;\n        this->columns = columns;\n        memset(values,0,sizeof(values));\n    }\n    Matrix(int rows,int columns,double values[]) {\n        this->rows = rows;\n        this->columns = columns;\n        int k = 0;\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                this->values[i][j] = values[k++];\n            }\n        }\n    }\n    Matrix(const Matrix & matrix2) {\n        rows = matrix2.rows;\n        columns = matrix2.columns;\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                values[i][j] = matrix2.values[i][j];\n            }\n        }\n    }\n    ~Matrix() {}\n    void print () {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<\"    \"<<values[i][j];\n            }\n            cout<<endl;\n        }\n    }\n    Matrix getRow(int row) {\n        Matrix s(1,columns);\n        for (int i = 0; i < columns; ++i) {\n            s.values[0][i] = values[row-1][i];\n        }\n        return s;\n    }\n    Matrix getColumn(int column) {\n        Matrix s(rows,1);\n        for (int i = 0; i < rows; ++i) {\n            s.values[i][0] = values[i][column-1];\n        }\n        return s;\n    }\n};",
            1588828393.3735983,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "马浩宇",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix \n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int row, int column, double value[]){\n\t\tvalues = new double [row * column];\n        rows = row;\n        columns = column;\n\t\tfor(int i = 0 ; i < row * column ; i ++) {\n\t\t\tvalues[i] = value[i];\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < rows ; i ++) {\n\t\t\tfor(int j = i * columns ; j < i * columns + columns ; j ++ ) {\n\t\t\t\tcout.width(5);\n\t\t\t\tcout << values[j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n    ~Matrix() {\n\t\tdelete [] values;\n\t}\n};",
            1588828640.7844255,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "向鼎",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double *values;\npublic:\n    Matrix(int rows,int columns){\n        values = new double[rows * columns];\n        this->rows = rows;\n        this->columns = columns;\n        for (int i = 0; i < rows * columns; ++i) {\n            values[i] = 0;\n        }\n    }\n\n    ~Matrix(){\n        delete []values;\n    }\n\n    void print(){\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<\"    \"<<values[i * columns + j];\n            }\n            cout<<endl;\n        }\n    }\n};",
            1588828646.0418117,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "麦子丰",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows,columns;\n        double* values;\n    public:\n        Matrix(int rows_,int columns_);\n        ~Matrix();\n        void print();\n};\n\nMatrix::Matrix(int rows_,int columns_):rows(rows_),columns(columns_){\n    values = new double[rows*columns];\n    memset(values,0,rows*columns*sizeof(double));\n}\n\nMatrix::~Matrix(){\n    delete[] values;\n}\n\nvoid Matrix::print(){\n    for(int i = 0; i < rows; ++i){\n        for(int j = 0; j < columns; ++j){\n            cout << \"    \" << values[i*columns+j];\n        }\n        cout << endl;\n    }\n}",
            1588828731.1242552,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "唐晨轩",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\tint r;\n\tint c;\n\tdouble value[1000];\n\tMatrix(){\n\t\tr = 0;\n\t\tc = 0;\n\t\tfor(int i = 0; i < 1000; i++){\n\t\t\tvalue[i] = 0;\n\t\t}\n\t}\n\tMatrix(int rows,int columns,double values[]){\n\t\tr = rows;\n\t\tc = columns;\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tvalue[i] = values[i];\n\t\t}\n\t}\n\tvoid print();\n};\nvoid Matrix::print(){\n\tint x = 0;\n\tfor(int i = 0; i < r; i++){\n\t\tfor(int j = 0; j < c; j++){\n\t\t\tcout << setw(5) << value[x];\n\t\t\tx ++;\n\t\t}\n\t\tcout << endl;\n\t}\n}",
            1588829195.3480558,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "马浩宇",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix \n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int row, int column, double value[]){\n\t\tvalues = new double [row * column];\n        rows = row;\n        columns = column;\n\t\tfor(int i = 0 ; i < row * column ; i ++) {\n\t\t\tvalues[i] = value[i];\n\t\t}\n\t}\n\tMatrix(const Matrix & matrix2) {\n\t\tint row = matrix2.rows;\n\t\tint column = matrix2.columns;\n\t\tvalues = new double [row * column];\n\t\trows = row;\n      columns = column;\n\t\tfor(int i = 0 ; i < row * column ; i ++) {\n\t\t\tvalues[i] = matrix2.values[i];\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < rows ; i ++) {\n\t\t\tfor(int j = i * columns ; j < i * columns + columns ; j ++ ) {\n\t\t\t\tcout << \"    \" << values[j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n    ~Matrix() {\n\t\tdelete [] values;\n\t}\n};",
            1588828854.1040206,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "向鼎",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double *values;\npublic:\n    Matrix(int rows,int columns,double values[]){\n        this->values = new double[rows * columns];\n        this->rows = rows;\n        this->columns = columns;\n        for (int i = 0; i < rows * columns; ++i) {\n            this->values[i] = values[i];\n        }\n    }\n\n    ~Matrix(){\n        delete []values;\n    }\n\n    void print(){\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<setw(5)<<values[i * columns + j];\n            }\n            cout<<endl;\n        }\n    }\n};\n",
            1588828915.404901,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "麦子丰",
            "#include <iostream>\n#include <cstring>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows,columns;\n        double* values;\n    public:\n        Matrix(int rows_,int columns_,double values_[]);\n        ~Matrix();\n        void print();\n};\n\nMatrix::Matrix(int rows_,int columns_,double values_[]):rows(rows_),columns(columns_){\n    values = new double[rows*columns];\n    memcpy(values,values_,rows*columns*sizeof(double));\n}\n\nMatrix::~Matrix(){\n    delete[] values;\n}\n\nvoid Matrix::print(){\n    for(int i = 0; i < rows; ++i){\n        for(int j = 0; j < columns; ++j){\n            cout << setw(5) << setfill(' ') << values[i*columns+j];\n        }\n        cout << endl;\n    }\n}",
            1588828980.0622964,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "謝敏華",
            "#include<iostream>\nusing namespace std;\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=rows*columns; i++) this->values[i]=0;\n\t}\n\tMatrix(int rows, int columns, double *values){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=rows*columns; i++) this->values[i]=values[i];\n\t}\n\t~Matrix(){\n\t}\n\tvoid print(){\n\t\tfor(int i=0; i<this->rows*this->columns; i++){\n\t\t\tprintf(\"    %.0lf\",this->values[i]);\n\t\t\tif( (i+1)%this->columns==0) putchar('\\n');\n\t\t}\n\t}\n\tMatrix getRow(int row){\n\t\tMatrix a(1,this->columns);\n\t\tint k=(row-1)*this->columns;\n\t\tfor(int i=0; i<a.columns*a.rows; i++)\n\t\t\ta.values[i]=this->values[k+i];\t\t\n\t\treturn a;\n\t}\n\tMatrix getColumn(int column){\n\t\tMatrix a(this->rows,1);\n\t\tint k=column-1;\n\t\tfor(int i=0; i<a.columns*a.rows; i++){\n\t\t\ta.values[i]=this->values[k];\n\t\t\tk+=this->columns;\t\t\n\t\t}\t\t\t\n\t\treturn a;\n\t}\n}; ",
            1588829184.3807552,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "向鼎",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double *values;\npublic:\n    Matrix(int rows,int columns,double values[]){\n        this->values = new double[rows * columns];\n        this->rows = rows;\n        this->columns = columns;\n        for (int i = 0; i < rows * columns; ++i) {\n            this->values[i] = values[i];\n        }\n    }\n\n    Matrix(const Matrix &matrix2){\n        this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        this->values = new double[rows * columns];\n        for (int i = 0; i < rows*columns; ++i) {\n            this->values[i] = matrix2.values[i];\n        }\n    }\n\n    ~Matrix(){\n        delete []values;\n    }\n\n    void print(){\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<\"    \"<<values[i * columns + j];\n            }\n            cout<<endl;\n        }\n    }\n};",
            1588829091.1758118,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "麦子丰",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows,columns;\n        double* values;\n    public:\n        Matrix(int rows_,int columns_,double values_[]);\n        Matrix(const Matrix & matrix2);\n        ~Matrix();\n        void print();\n};\n\nMatrix::Matrix(int rows_,int columns_,double values_[]):rows(rows_),columns(columns_){\n    values = new double[rows*columns];\n    memcpy(values,values_,rows*columns*sizeof(double));\n}\n\nMatrix::Matrix(const Matrix & matrix2){\n    this->rows = matrix2.rows;\n    this->columns = matrix2.columns;\n    values = new double[rows*columns];\n    memcpy(values,matrix2.values,rows*columns*sizeof(double));\n}\n\nMatrix::~Matrix(){\n    delete[] values;\n}\n\nvoid Matrix::print(){\n    for(int i = 0; i < rows; ++i){\n        for(int j = 0; j < columns; ++j){\n            cout << \"    \" << values[i*columns+j];\n        }\n        cout << endl;\n    }\n}",
            1588829190.0532148,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "谢扬",
            "#include<iostream>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nclass Matrix\n{\n\tprivate:\n\t\tint rows,columns;\n\t\tdouble*values;//析构函数/复制构造函数/重载赋值运算府\n\tpublic:\n\tMatrix(int m_rows=0, int m_columns=0,double*m_values=nullptr):rows(m_rows),columns(m_columns),values(m_values)\n\t{if(columns<0||rows<0)values=nullptr;}\n\tbool print();\n};\nbool Matrix::print()\n{\n\tif(rows<0||columns<0)return false;\n\tfor(int row=0;row<rows*columns;++row)\n\t{\n\t\tcout<<values[row]<<\"    \";\n\t\tif(row%columns==columns-1)cout<<endl;\n\t}\n\treturn true;\n}\n",
            1588829198.4498596,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "谢浩林",
            "#include <iostream>\nusing namespace std ;\nclass Matrix{\n\tprivate :\n\tint row ;\n\tint col ;\n\tdouble val[100][100] ;\n\tpublic:\n\tMatrix() {\n\t\trow = 0 ;\n\t\tcol = 0 ;\n\t\tval[0][0] = 0 ;\n\t}\n\tMatrix(int row_,int col_) {\n\t\trow = row_ ;\n\t\tcol = col_ ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tval[k][i] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix(int row_,int col_,double val_[]) {\n\t\trow = row_ ;\n\t\tcol = col_ ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tval[k][i] = val_[i*col+k] ;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix(const Matrix &m2) {\n\t\tthis->row = m2.row ;\n\t\tthis->col = m2.col ;\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tthis->val[k][i] = m2.val[k][i] ;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix concatenateRows(const Matrix & m2) {\n\tMatrix m3(row*2,col) ;\n\tfor(int i = 0 ; i < row ; i ++ ) {\n\t\tfor(int k = 0 ; k < col ; k ++) {\n\t\t\tm3.val[k][i] = this->val[k][i] ;\n\t\t}\n\t}\n\tfor(int i = 0 ; i < row ; i ++ ) {\n\t\tfor(int k = 0 ; k < col ; k ++) {\n\t\t\tm3.val[k][i+row] = m2.val[k][i] ;\n\t\t}\n\t}\n\treturn m3 ;\n}\n\n\tMatrix concatenateColumns(const Matrix & m2) {\n\tMatrix m3(row,col*2) ;\n\tfor(int i = 0 ; i < row ; i ++ ) {\n\t\tfor(int k = 0 ; k < col ; k ++) {\n\t\t\tm3.val[k][i] = this->val[k][i] ;\n\t\t}\n\t}\n\tfor(int i = 0 ; i < row ; i ++ ) {\n\t\tfor(int k = 0 ; k < col ; k ++) {\n\t\t\tm3.val[k+col][i] = m2.val[k][i] ;\n\t\t}\n\t}\n\treturn m3 ;\n}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < this-> row ; i ++) {\n\t\t\tfor(int k = 0 ; k < this -> col ; k ++) {\n\t\t\t\tcout<< \"    \"<<val[k][i] ;\n\t\t\t}\n\t\t\tcout << endl ;\n\t\t}\n\t}\n\t~Matrix(){}\n};",
            1588829815.6485918,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "马浩宇",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix \n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int row, int column){\n\t\tvalues = new double [row * column];\n        rows = row;\n        columns = column;\n\t\tfor(int i = 0 ; i < row * column ; i ++) {\n\t\t\tvalues[i] = 0;\n\t\t}\n\t}\n\tMatrix(int row, int column, double value[]){\n\t\tvalues = new double [row * column];\n        rows = row;\n        columns = column;\n\t\tfor(int i = 0 ; i < row * column ; i ++) {\n\t\t\tvalues[i] = value[i];\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < rows ; i ++) {\n\t\t\tfor(int j = i * columns ; j < i * columns + columns ; j ++ ) {\n\t\t\t\tcout << \"    \" << values[j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n   ~Matrix() {\n\t\tdelete [] values;\n\t}\n\tMatrix getRow(int row) {\n\t\tMatrix temp(1, columns);\n\t\tfor(int i = 0 ; i < columns ; i ++) {\n\t\t\ttemp.values[i] = values[(row - 1) * columns + i];\n\t\t}\n\t\treturn temp;\n\t}\n\tMatrix getColumn(int column) {\n\t\tMatrix temp(rows, 1);\n\t\tfor(int i = 0 ; i < rows ; i ++) {\n\t\t\ttemp.values[i] = values[i * columns];\n\t\t}\n\t\treturn temp;\n\t}\n};",
            1588829330.9585817,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "王彬",
            "#include<iostream>\n#include<iomanip>\n#include<cstring>\n\nusing namespace std;\n\nclass Matrix\n{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows, int columns, double values[])\n\t\t{\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tthis->values = new double [rows * columns + 1];\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) this->values[i * this->columns + j] = values[i * this->columns + j];\n\t\t\t}\n\t\t}\n\t\t~Matrix()\n\t\t{\n\t\t\tdelete [] this->values;\n\t\t}\n\t\tMatrix(const Matrix & matrix2)\n\t\t{\n\t\t\tthis->rows = matrix2.rows;\n\t\t\tthis->columns = matrix2.columns;\n\t\t\tthis->values = new double [rows * columns + 1];\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) this->values[i * this->columns + j] = matrix2.values[i * this->columns + j];\n\t\t\t}\n\t\t}\n\t\tvoid print()\n\t\t{\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) cout << \"    \" << values[i * this->columns + j];\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n};",
            1588829785.8481836,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "王筝",
            "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows;\n        int columus;\n        double *values;\n    public:\n        Matrix(int r,int c,double value[]){\n            this->values = (double*)malloc(sizeof(double)*r*c);\n            memset(values, 0, sizeof(values)*r*c);\n            double *p = this->values;\n            this->rows = r;\n            this->columus = c;\n            for (int i = 0; i < r * c;i++){\n                *p = value[i];\n                p++;\n            }\n        }\n        Matrix(const Matrix & mat){\n            this->rows=mat.rows, this->columus=mat.columus;\n            \n            this->values = (double *)malloc(sizeof(double) * this->rows * this->columus);\n            double *p =  mat.values,*pp=this->values;\n            for (int i = 0; i < this->rows * this->columus;i++){\n                *pp = *p;\n                p++;\n                pp++;\n            }\n            \n        }\n        void print(){\n            for (int i = 0; i < this->rows;i++){\n                for (int j = 0; j < this->columus;j++){\n                    cout << \"    \" << *(this->values++);\n                }\n                cout << endl;\n            }\n        }\n        ~Matrix(){\n           \n        }\n};\n",
            1588829392.2066314,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "唐晨轩",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\tint r;\n\tint c;\n\tdouble value[1000];\n\tMatrix(){\n\t\tr = 0;\n\t\tc = 0;\n\t\tfor(int i = 0; i < 1000; i++){\n\t\t\tvalue[i] = 0;\n\t\t}\n\t}\n\tMatrix(Matrix &other){\n\t\tr = other.r;\n\t\tc = other.c;\n\t\tfor(int i = 0; i < 1000; i++){\n\t\t\tvalue[i] = other.value[i];\n\t\t}\n\t}\n\tMatrix(int rows,int columns,double values[]){\n\t\tr = rows;\n\t\tc = columns;\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tvalue[i] = values[i];\n\t\t}\n\t}\n\tvoid print();\n};\nvoid Matrix::print(){\n\tint x = 0;\n\tfor(int i = 0; i < r; i++){\n\t\tfor(int j = 0; j < c; j++){\n\t\t\tcout << \"    \" << value[x];\n\t\t\tx ++;\n\t\t}\n\t\tcout << endl;\n\t}\n}",
            1588829415.73241,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "施天予",
            "#include <iostream>\n#include<iomanip>\n#include<cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows,columns;\n    double values[100][100];\npublic:\n    Matrix(int rows,int columns) {\n        this->rows = rows;\n        this->columns = columns;\n        memset(values,0,sizeof(values));\n    }\n    Matrix(int rows,int columns,double values[]) {\n        this->rows = rows;\n        this->columns = columns;\n        int k = 0;\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                this->values[i][j] = values[k++];\n            }\n        }\n    }\n    Matrix(const Matrix & matrix2) {\n        rows = matrix2.rows;\n        columns = matrix2.columns;\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                values[i][j] = matrix2.values[i][j];\n            }\n        }\n    }\n    ~Matrix() {}\n    void print () {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<\"    \"<<values[i][j];\n            }\n            cout<<endl;\n        }\n    }\n    Matrix concatenateRows(const Matrix & matrix2) const {\n        Matrix s(rows*2,columns);\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                s.values[i][j] = this->values[i][j];\n            }\n        }\n        for (int i = rows; i < rows*2; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                s.values[i][j] = matrix2.values[i-rows][j];\n            }\n        }\n        return s;\n    }\n    Matrix concatenateColumns(const Matrix & matrix2) const {\n        Matrix s(rows,columns*2);\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns*2; ++j) {\n                if (j < columns)\n                    s.values[i][j] = this->values[i][j];\n                else\n                    s.values[i][j] = matrix2.values[i][j-columns];\n            }\n        }\n        return s;\n    }\n};",
            1588829888.5319629,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "王子豪",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n\tprivate:\n\tint rows;\nint columns;\ndouble * values;\n\tpublic:\n\tMatrix(int row,int col){\n\t\trows=row;\n\t\tcolumns=col;\n\t\tvalues=new double[row*col];\n\t\tfor(int i=0;i<col*row;i++){\n\t\t\tvalues[i]=0;\n\t\t}\n\t}\n\t Matrix(const Matrix & matrix2)\n\t {\n\t\t rows=matrix2.rows;\n\t\t columns=matrix2.columns;\n\t\t values=new double[rows*columns];\n\t\tfor(int i=0;i<columns*rows;i++){\n\t\t\tvalues[i]=matrix2.values[i];\n\t\t}\n}\n\tMatrix concatenateRows(const Matrix & m){\n\t\tMatrix t(this->rows+m.rows,this->columns);\n\t\t\n\t\tfor(int i=0;i<(this->rows+m.rows)*columns;i++){\n\t\t\tif(i<this->rows*columns){\n\t\t\t\tt.values[i]=this->values[i];\n\t\t\t}else{\n\t\t\t\tt.values[i]=m.values[i-this->rows*this->columns];\n\t\t\t}\n\t\t\t\n\t\t}\n\t\treturn t;\n\t}\n\tMatrix concatenateColumns(const Matrix & m){\n\t\tMatrix t(this->rows,this->columns*2);\n\t\t\n\t\tfor(int i=0;i<rows;i++){\nfor(int j=0;j<columns*2;j++){\n\tif(j<columns){\n\t\tt.values[i*columns*2+j]=this->values[i*columns+j];\n\t}else{\n\t\tt.values[i*columns*2+j]=m.values[i*columns+j-columns];\n\t}\n}\n\t\t}\n\t\treturn t;\n\t}\n\t\n\tMatrix(int row,int col,double* p){\n\t\trows=row;\n\t\tcolumns=col;\n\t\tvalues=new double[row*col];\n\t\tfor(int i=0;i<col*row;i++){\n\t\t\tvalues[i]=p[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int j=0;j<rows;j++){\n\t\t\tfor(int i=0;i<columns;i++){\n\t\t\t\t\tprintf(\"    %.0lf\",values[j*columns+i]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t\t\n\t}\n};",
            1588829761.7709103,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "许遵楠",
            "#include <iostream>\nusing namespace std;\nclass Matrix {\n  public:\n    Matrix() {\n        rows = columns = 0;\n        values = 0;\n    }\n    Matrix(int r, int c) {\n        rows = r;\n        columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r; ++i)\n            for (int j = 0; j < c; ++j)\n                values[i * columns + j] = 0;\n    }\n    Matrix(int r, int c, double *val) {\n        rows = r;\n        columns = c;\n        values = new double[r * c];\n        for (int i = 0; i < r; ++i)\n            for (int j = 0; j < c; ++j)\n                values[i * columns + j] = val[i * columns + j];\n    }\n    Matrix(const Matrix &matrix2) {\n        rows = matrix2.get_r();\n        columns = matrix2.get_c();\n        values = new double[rows * columns];\n        for (int i = 0; i < rows; ++i)\n            for (int j = 0; j < columns; ++j)\n                values[i * columns + j] = matrix2.get_v(i, j);\n    }\n    ~Matrix() {\n        if (values != 0)\n            delete[] values;\n    }\n    int get_r() const {\n        return rows;\n    }\n    int get_c() const {\n        return columns;\n    }\n    double get_v(int i, int j) const {\n        return values[i * columns + j];\n    }\n    void set_v(int i, double val) {\n        values[i] = val;\n    }\n    void print() {\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j)\n                cout << \"    \" << values[i * columns + j];\n            cout << endl;\n        }\n    }\n    Matrix getRow(int row) {\n        Matrix gr = Matrix(1, columns);\n        for (int i = 0; i < columns; ++i)\n            gr.set_v(i, get_v(row - 1, i));\n        return gr;\n    }\n    Matrix getColumn(int columns) {\n        Matrix gc = Matrix(rows, 1);\n        for (int i = 0; i < rows; ++i)\n            gc.set_v(i, get_v(i, columns - 1));\n        return gc;\n    }\n    Matrix concatenateRows(const Matrix &matrix2) const {\n        Matrix con = Matrix(rows + matrix2.get_r(), columns);\n        for (int i = 0; i < rows + matrix2.get_r(); ++i)\n            for (int j = 0; j < columns; ++j) {\n                if (i < rows)\n                    con.set_v(i * columns + j, get_v(i, j));\n                else\n                    con.set_v(i * columns + j, matrix2.get_v(i - rows, j));\n            }\n        return con;\n    }\n    Matrix concatenateColumns(const Matrix &matrix2) const {\n        Matrix con = Matrix(rows, columns + matrix2.get_c());\n        for (int i = 0; i < rows; ++i)\n            for (int j = 0; j < columns + matrix2.get_c(); ++j) {\n                if (j < columns)\n                    con.set_v(i * con.get_c() + j, get_v(i, j));\n                else\n                    con.set_v(i * con.get_c() + j, matrix2.get_v(i, j - columns));\n            }\n        return con;\n    }\n\n  private:\n    int rows, columns;\n    double *values;\n};",
            1588829928.2923822,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "向鼎",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double *values;\npublic:\n\n    Matrix(int rows,int columns){\n        this->values = new double[rows * columns];\n        this->rows = rows;\n        this->columns = columns;\n        for (int i = 0; i < rows * columns; ++i) {\n            values[i] = 0;\n        }\n    }\n\n    Matrix(int rows,int columns,double values[]){\n        this->values = new double[rows * columns];\n        this->rows = rows;\n        this->columns = columns;\n        for (int i = 0; i < rows * columns; ++i) {\n            this->values[i] = values[i];\n        }\n    }\n\n    Matrix(const Matrix &matrix2){\n        this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        this->values = new double[rows * columns];\n        for (int i = 0; i < rows*columns; ++i) {\n            this->values[i] = matrix2.values[i];\n        }\n    }\n\n    ~Matrix(){\n        delete []values;\n    }\n\n    void print(){\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<\"    \"<<values[i * columns + j];\n            }\n            cout<<endl;\n        }\n    }\n\n    Matrix getRow(int row){\n        Matrix a(1,this->columns,this->values + (row-1) * this->columns);\n        return a;\n    }\n\n    Matrix getColumn(int column){\n        Matrix a(this->rows,1);\n        for (int i = 0; i < this->rows; ++i) {\n            a.values[i] = this->values[column - 1 + i * columns];\n        }\n        return a;\n    }\n};",
            1588829985.2923164,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "唐晨轩",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\tint r;//横行\n\tint c;//纵行\n\tdouble v[1000];\n\tMatrix (int rows,int columns,double values[]){\n\t\tr = rows;\n\t\tc = columns;\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tv[i] = values[i];\n\t\t}\n\t}\n\tMatrix getRow(int row);\n\tMatrix getColumn(int column);\n\tvoid print();\n};\nMatrix Matrix::getRow(int row){\n\tdouble x[r];\n\tfor(int i = 0; i < r; i++){\n\t\tx[i] = v[(row-1)*c+i];\n\t}\n\tMatrix getR(1,c,x);\n\treturn getR;\n}\nMatrix Matrix::getColumn(int column){\n\tdouble x[r];\n\tfor(int i = 0; i < r; i++){\n\t\tx[i] = v[(column-1)+i*r];\n\t}\n\tMatrix getC(r,1,x);\n\treturn getC;\n}\nvoid Matrix::print(){\n\tint y = 0;\n\tfor(int i = 0; i < r; i++){\n\t\tfor(int j = 0; j < c; j++){\n\t\t\tcout << \"    \" << v[y];\n\t\t\ty ++;\n\t\t}\n\t\tcout << endl;\n\t}\n}",
            1588833588.9599206,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "马浩宇",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix \n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int row, int column, double value[]){\n\t\tvalues = new double [row * column];\n        rows = row;\n        columns = column;\n\t\tfor(int i = 0 ; i < row * column ; i ++) {\n\t\t\tvalues[i] = value[i];\n\t\t}\n\t}\n\tMatrix(const Matrix & matrix2) {\n\t\tint row = matrix2.rows;\n\t\tint column = matrix2.columns;\n\t\tvalues = new double [row * column];\n\t\trows = row;\n      columns = column;\n\t\tfor(int i = 0 ; i < row * column ; i ++) {\n\t\t\tvalues[i] = matrix2.values[i];\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor(int i = 0 ; i < rows ; i ++) {\n\t\t\tfor(int j = i * columns ; j < i * columns + columns ; j ++ ) {\n\t\t\t\tcout << \"    \" << values[j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n    ~Matrix() {\n\t\tdelete [] values;\n\t}\n\tMatrix concatenateRows(const Matrix & matrix2) const {\n\t\tdouble temp1 [rows * columns + matrix2.rows * matrix2.columns];\n\t\tfor(int i = 0 ; i < rows * columns + matrix2.rows * matrix2.columns ; i ++) {\n\t\t\tif(i < rows * columns) {\n\t\t\t\ttemp1[i] = values[i];\n\t\t\t}\n\t\t\telse temp1[i] = matrix2.values[i - rows * columns];\n\t\t}\n\t\tMatrix temp(rows + matrix2.rows, columns, temp1);\n\t\treturn temp;\n\t}\n\tMatrix concatenateColumns(const Matrix & matrix2) const {\n\t\tdouble temp1 [rows * columns + matrix2.rows * matrix2.columns];\n\t\tint count = 0;\n\t\tint flag = 0;\n\t\tint count1 = 0;\n\t\tint count2 = 0;\n\t\tfor(int i = 0 ; i < rows * columns + matrix2.rows * matrix2.columns ; i ++,count++) {\n\t\t\tif((flag % 2 == 0 && count == columns) || (flag % 2 == 1 && count == matrix2.columns)) {\n\t\t\t\tcount = 0;\n\t\t\t\tflag ++;\n\t\t\t}\n\t\t\tif(flag % 2 == 0) {\n\t\t\t\ttemp1[i] = values[count1++];\n\t\t\t}\n\t\t\telse temp1[i] = matrix2.values[count2++];\n\t\t}\n\t\tMatrix temp(rows, columns + matrix2.columns, temp1);\n\t\treturn temp;\n\t}\n};",
            1588830546.8432314,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "王彬",
            "#include<iostream>\n#include<iomanip>\n#include<cstring>\n\nusing namespace std;\n\nclass Matrix\n{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows, int columns, double values[])\n\t\t{\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tthis->values = new double [rows * columns + 1];\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) this->values[i * this->columns + j] = values[i * this->columns + j];\n\t\t\t}\n\t\t}\n\t\t~Matrix()\n\t\t{\n\t\t\tdelete [] this->values;\n\t\t}\n\t\tMatrix getRow(int row)\n\t\t{\n\t\t\tMatrix matrixn;\n\t\t\tmatrixn.rows = 1;\n\t\t\tmatrixn.columns = this->columns;\n\t\t\tmatrixn.values = new double [matrixn.rows * matrixn.columns + 1];\n\t\t\tfor (int i = 0; i < matrixn.rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < matrixn.columns; j ++) matrixn.values[i * matrixn.columns + j] = this->values[row * matrixn.columns + j];\n\t\t\t}\n\t\t\treturn matrixn;\n\t\t}\n\t\tMatrix getColumn(int column)\n\t\t{\n\t\t\tMatrix matrixn;\n\t\t\tmatrixn.rows = this->rows;\n\t\t\tmatrixn.columns = 1;\n\t\t\tmatrixn.values = new double [matrixn.rows * matrixn.columns + 1];\n\t\t\tfor (int i = 0; i < matrixn.rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < matrixn.columns; j ++) matrixn.values[i * matrixn.columns + j] = this->values[i * matrixn.columns + column];\n\t\t\t}\n\t\t\treturn matrixn;\n\t\t}\n\t\tvoid print()\n\t\t{\n\t\t\tfor (int i = 0; i < this->rows; i ++)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < this->columns; j ++) cout << \"    \" << values[i * this->columns + j];\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n};",
            1588831866.7758548,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In member function ‘Matrix Matrix::getRow(int)’:\nsource.cpp:30:11: error: no matching function for call to ‘Matrix::Matrix()’\n    Matrix matrixn;\n           ^\nsource.cpp:14:3: note: candidate: Matrix::Matrix(int, int, double*)\n   Matrix(int rows, int columns, double values[])\n   ^\nsource.cpp:14:3: note:   candidate expects 3 arguments, 0 provided\nsource.cpp:7:7: note: candidate: constexpr Matrix::Matrix(const Matrix&)\n class Matrix\n       ^\nsource.cpp:7:7: note:   candidate expects 1 argument, 0 provided\nIn file included from main.cpp:1:0:\nsource.cpp: In member function ‘Matrix Matrix::getColumn(int)’:\nsource.cpp:42:11: error: no matching function for call to ‘Matrix::Matrix()’\n    Matrix matrixn;\n           ^\nIn file included from main.cpp:1:0:\nsource.cpp:14:3: note: candidate: Matrix::Matrix(int, int, double*)\n   Matrix(int rows, int columns, double values[])\n   ^\nsource.cpp:14:3: note:   candidate expects 3 arguments, 0 provided\nsource.cpp:7:7: note: candidate: constexpr Matrix::Matrix(const Matrix&)\n class Matrix\n       ^\nsource.cpp:7:7: note:   candidate expects 1 argument, 0 provided\n"
        ],
        [
            "2.1 (C++)",
            "欧阳蓓",
            "#include<iostream>\nusing namespace std;\nclass Matrix\n{\n    public:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int rows, int columns)\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n\t\t\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tvalues[i][j] = 0;\n        }\n    }\n    ~Matrix()\n    {\n        for  (int i = 0; i < rows; i++)\n\t\t{\n\t\t\tif (values[i] != 0)\n\t\t\t\tdouble values[i];\n\t\t}\n\t\tif (values != 0)\n\t\t\tdouble values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n                cout<<values[ i][j]<<\"    \";\n \n            }\n            cout << endl;\n        }\n    }\n    private:\n    int rows;\n    int columns;\n    double ** values;\n};",
            1588851192.892372,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "麦子丰",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows,columns;\n        double* values;\n    public:\n        Matrix(int rows_,int columns_);\n        Matrix(int rows_,int columns_,double values_[]);\n        Matrix(const Matrix & matrix2);\n        ~Matrix();\n        void print();\n        Matrix getRow(int row);\n        Matrix getColumn(int column);\n};\n\nMatrix::Matrix(int rows_,int columns_):rows(rows_),columns(columns_){\n    values = new double[rows*columns];\n    memset(values,0,rows*columns*sizeof(double));\n}\n\nMatrix::Matrix(int rows_,int columns_,double values_[]):rows(rows_),columns(columns_){\n    values = new double[rows*columns];\n    memcpy(values,values_,rows*columns*sizeof(double));\n}\n\nMatrix::Matrix(const Matrix & matrix2){\n    this->rows = matrix2.rows;\n    this->columns = matrix2.columns;\n    values = new double[rows*columns];\n    memcpy(values,matrix2.values,rows*columns*sizeof(double));\n}\n\nMatrix::~Matrix(){\n    delete[] values;\n}\n\nvoid Matrix::print(){\n    for(int i = 0; i < rows; ++i){\n        for(int j = 0; j < columns; ++j){\n            cout << \"    \" << values[i*columns+j];\n        }\n        cout << endl;\n    }\n}\n\nMatrix Matrix::getRow(int row){\n    Matrix res(1, this->columns);\n    --row;\n    for(int i = 0; i < this->columns; ++i){\n        res.values[i] = values[this->columns*row+i];\n    }\n    return res;\n}\n\nMatrix Matrix::getColumn(int column){\n    Matrix res(this->rows, 1);\n    --column;\n    for(int i = 0; i < this->rows; ++i){\n        res.values[i] = values[i*this->columns + column];\n    }\n    return res;\n}",
            1588830792.4188359,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "欧阳蓓",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n    public:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int rows, int columns)\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n\t\t\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tvalues[i][j] = 0;\n        }\n    }\n\tMatrix(int rows, int columns, double v[] )\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = v[i * columns + j];\n        }\n    }\n    ~Matrix()\n    {\n        for  (int i = 0; i < rows; i++)\n\t\t{\n\t\t\tif (values[i] != 0)\n\t\t\t\tdouble values[i];\n\t\t}\n\t\tif (values != 0)\n\t\t\tdouble values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n\t\t\t\t\t\t\n                cout<< setw(5) <<values[ i][j] ;\n \n            }\n            cout << endl;\n        }\n    }\n    private:\n    int rows;\n    int columns;\n    double ** values;\n};",
            1588851518.24032,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "潘小健",
            "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <iomanip>\n#include <string>\nusing namespace std;\n\nclass Matrix\n{\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int _rows,int _columns):rows(_rows),columns(_columns){\n\t\tvalues=new double[_columns*_rows];\n\t\tmemset(values,0,sizeof(double)*_rows*_columns);\n\n\t}\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\tvoid print(){\n\t\tfor (int i = 0; i < rows; ++i)\n\t\t{\n\t\t\tfor (int j = 0; j <columns ; ++j)\n\t\t\t{\n\t\t\t\tcout<<\"    \"<<values[i*columns+j];\n\t\t\t}\n\t\t\tcout <<endl;\n\t\t}\n\t} \n\t\n};",
            1588831154.506712,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "向鼎",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double *values;\npublic:\n    Matrix(int rows,int columns){\n        this->values = new double[rows * columns];\n        this->rows = rows;\n        this->columns = columns;\n        for (int i = 0; i < rows * columns; ++i) {\n            values[i] = 0;\n        }\n    }\n    Matrix(int rows,int columns,double values[]){\n        this->values = new double[rows * columns];\n        this->rows = rows;\n        this->columns = columns;\n        for (int i = 0; i < rows * columns; ++i) {\n            this->values[i] = values[i];\n        }\n    }\n\n    Matrix(const Matrix &matrix2){\n        this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        this->values = new double[rows * columns];\n        for (int i = 0; i < rows*columns; ++i) {\n            this->values[i] = matrix2.values[i];\n        }\n    }\n\n    ~Matrix(){\n        delete []values;\n    }\n\n    void print(){\n        for (int i = 0; i < rows; ++i) {\n            for (int j = 0; j < columns; ++j) {\n                cout<<\"    \"<<values[i * columns + j];\n            }\n            cout<<endl;\n        }\n    }\n\n    Matrix concatenateColumns(const Matrix &matrix2){\n        int len = this->columns + matrix2.columns;\n        Matrix a(this->rows,len);\n        for (int i = 0; i < this->rows; ++i) {\n            for (int j = 0; j < this->columns; ++j) {\n                a.values[i * len + j] = this->values[i * this->columns + j];\n            }\n            for (int k = 0; k < matrix2.columns; ++k) {\n                a.values[i * len + this->columns + k] = matrix2.values[i * this->columns + k];\n            }\n        }\n        return a;\n    }\n    Matrix concatenateRows(const Matrix &matrix2){\n        Matrix a(this->rows + matrix2.rows,this->columns,this->values);\n        for (int i = this->rows * this->columns; i < this->rows * this->columns + matrix2.rows * matrix2.columns; ++i) {\n            a.values[i] = matrix2.values[i-this->rows * this->columns];\n        }\n        return a;\n    }\n};",
            1588831171.6796315,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "廖雨轩",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double *values;\n\npublic:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int r, int c, double val[])\n    {\n        this->rows = r;\n        this->columns = c;\n        this->values = new double[r * c + 1];\n        for (int i = 0; i < r * c; i++)\n            values[i] = val[i];\n    }\n    Matrix(const Matrix &matrix2)\n    {\n        int r = matrix2.rows;\n        int c = matrix2.columns;\n        this->rows = r;\n        this->columns = c;\n        this->values = new double[r * c + 1];\n        for (int i = 0; i < r * c; i++)\n            values[i] = matrix2.values[i];\n    }\n    ~Matrix()\n    {\n        delete[] values;\n    }\n    void print()\n    {\n        int ini = 0;\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n                cout << \"    \" << this->values[ini++];\n            }\n            cout << endl;\n        }\n    }\n    Matrix concatenateRows(const Matrix &matrix2) const;\n    Matrix concatenateColumns(const Matrix &matrix2) const;\n};\nMatrix Matrix::concatenateRows(const Matrix &matrix2) const\n{\n    //col 一样 r1 r2不一样\n    int r1 = this->rows;\n    int r2 = matrix2.rows;\n    int c = this->columns;\n    int sz = (r1 + r2) * c;\n    double *val = new double[sz + 2];\n    int sz1 = r1 * c;\n    for (int i = 0; i < sz1; i++)\n        val[i] = this->values[i];\n\n    // for (int i = 0; i < sz1; i++)\n    //     cout << val[i] << \" \";\n    int sz2 = r2 * c;\n    for (int i = sz1, j = 0; j < sz2; i++, j++)\n        val[i] = matrix2.values[j];\n    Matrix matrix3(r1 + r2, c, val);\n    return matrix3;\n}\nMatrix Matrix::concatenateColumns(const Matrix &matrix2) const\n{\n    //row一样 c1 c2 不一样\n    int c1 = this->columns;\n    int c2 = matrix2.columns;\n    int r = this->rows;\n    int sz = r * (c1 + c2);\n    double *val = new double[sz + 2];\n    for (int i = 0; i < r; i++)\n    {\n        for (int j = 0; j < c1; j++)\n            val[i * (c1 + c2) + j] = this->values[i * c1 + j];\n        for (int j = 0; j < c2; j++)\n            val[i * (c2 + c1) + c1 + j] = matrix2.values[i * c2 + j];\n    }\n    Matrix matrix3(r, c1 + c2, val);\n    return matrix3;\n}",
            1588908868.5208957,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王芯芸",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)this->values[i] = 0;\n\t}\n\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++)cout << \"    \" << values[i * columns + j];\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588832550.6528323,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "潘小健",
            "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <iomanip>\n#include <string>\nusing namespace std;\n\nclass Matrix\n{\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int _rows,int _columns,double*_values):rows(_rows),columns(_columns){\n\t\tvalues=new double[_columns*_rows];\n\t\tfor (int i = 0; i < _columns*_rows; ++i)\n\t\t{\n\t\t\tvalues[i]=_values[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\tvoid print(){\n\t\tfor (int i = 0; i < rows; ++i)\n\t\t{\n\t\t\tfor (int j = 0; j <columns ; ++j)\n\t\t\t{\n\t\t\t\tcout<<setw(5)<<values[i*columns+j];\n\t\t\t}\n\t\t\tcout <<endl;\n\t\t}\n\t} \n\t\n};\n",
            1588831752.2329297,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "邵震东",
            "#include <iostream>\n\nclass Matrix {\nprivate:\n    int rows;\n    int columns;\n    double * values;\npublic:\n    Matrix() = default;\n    Matrix(const Matrix & matrix2)\n    {\n        columns = matrix2.columns;\n        rows = matrix2.rows;\n        this->values = new double [matrix2.rows * matrix2.columns];\n        for (int i = 0; i < matrix2.rows * matrix2.columns; ++i) {\n            *(values + i) = *(matrix2.values + i);\n        }\n    }\n    Matrix(int row, int column, double * value)\n    {\n        rows = row;\n        columns = column;\n        this->values = new double [row * column];\n        for (int i = 0; i < row * column; ++i) {\n            *(values + i) = *(value + i);\n        }\n    }\n//    ~Matrix()\n//    {\n//        while (this->values) {\n//            delete[] values;\n//        }\n//    }\n    void print() const\n    {\n        for (int i = 0; i < rows * columns; ) {\n            for (int j = 0; j < columns; ++j) {\n                //std::cout << std::setw(5);\n                std::cout << \"    \" << *(values + i);\n                ++i;\n            }\n            std::cout << std::endl;\n        }\n    }\n};\n\nusing namespace std;",
            1588833669.16492,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "謝敏華",
            "#include<iostream>\nusing namespace std;\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=rows*columns; i++) this->values[i]=0;\n\t}\n\tMatrix(int rows, int columns, double *values){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=rows*columns; i++) this->values[i]=values[i];\n\t}\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows=matrix2.rows;\n\t\tthis->columns=matrix2.columns;\n\t\tthis->values=new double[rows*columns];\n\t\tfor(int i=0; i<=this->rows*this->columns; i++) \n\t\t\tthis->values[i]=matrix2.values[i];\n\t}\n\t~Matrix(){\n\t}\n\tvoid print(){\n\t\tfor(int i=0; i<this->rows*this->columns; i++){\n\t\t\tprintf(\"    %.0lf\",this->values[i]);\n\t\t\tif( (i+1)%this->columns==0) putchar('\\n');\n\t\t}\n\t}\n\tMatrix concatenateRows(const Matrix &matrix2){\n\t\tMatrix t(this->rows+matrix2.rows,this->columns);\n\t\tint k=0;\n\t\tfor(int i=0; i<this->rows*this->columns; i++) t.values[k++]=this->values[i];\n\t\tfor(int i=0; i<matrix2.rows*matrix2.columns; i++) t.values[k+i]=matrix2.values[i];\n\t\treturn t;\n\t}\n\t\n\tMatrix concatenateColumns(const Matrix &matrix2){\n\t\tMatrix t(this->rows,this->columns+matrix2.columns);\n\t\tint k=0;\n\t\tfor(int i=0; i<this->rows; i++){\n\t\t\tint sta1=i*this->columns,sta2=i*matrix2.columns;\n\t\t\tfor(int j=0; j<this->columns; j++)\n\t\t\t\tt.values[k++]=this->values[sta1+j];\n\t\t\tfor(int j=0; j<this->columns; j++)\n\t\t\t\tt.values[k++]=matrix2.values[sta2+j];\t\n\t\t}\n\t\treturn t;\n\t}\n}; ",
            1588831809.7040634,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "欧阳蓓",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n    public:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int rows, int columns)\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n\t\t\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tvalues[i][j] = 0;\n        }\n    }\n\tMatrix(int rows, int columns, double v[] )\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = v[i * columns + j];\n        }\n    }\n\t  Matrix(const Matrix & matrix2)\n\t  {\n\t\t\t this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n\t\t   for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = matrix2.values[i][j];\n        }\n\t  }\n    ~Matrix()\n    {\n        for  (int i = 0; i < rows; i++)\n\t\t{\n\t\t\tif (values[i] != 0)\n\t\t\t\tdouble values[i];\n\t\t}\n\t\tif (values != 0)\n\t\t\tdouble values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n\t\t\t\t\t\t\n                cout<< \"    \"<<values[ i][j] ;\n \n            }\n            cout << endl;\n        }\n    }\n    private:\n    int rows;\n    int columns;\n    double ** values;\n};",
            1588851624.8339987,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "潘小健",
            "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <iomanip>\n#include <string>\nusing namespace std;\n\nclass Matrix\n{\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int _rows,int _columns,double*_values):rows(_rows),columns(_columns){\n\t\tvalues=new double[_columns*_rows];\n\t\tfor (int i = 0; i < _columns*_rows; ++i)\n\t\t{\n\t\t\tvalues[i]=_values[i];\n\t\t}\n\t}\n\n\tMatrix(const Matrix & matrix2){\n\t\trows=matrix2.rows;\n\t\tcolumns=matrix2.columns;\n\t\tvalues=new double[rows*columns];\n\t\tmemcpy(values,matrix2.values,sizeof(double)*columns*rows);\n\t}\n\t\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\t\n\tvoid print(){\n\t\tfor (int i = 0; i < rows; ++i)\n\t\t{\n\t\t\tfor (int j = 0; j <columns ; ++j)\n\t\t\t{\n\t\t\t\tcout<<\"    \"<<values[i*columns+j];\n\t\t\t}\n\t\t\tcout <<endl;\n\t\t}\n\t}\n\n};",
            1588832207.728053,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "周琨曜",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint row;\n\tint column;\n\tdouble * values;\npublic:\n\tMatrix(void);\n\tMatrix(int rows,int columns);\n\tvoid print();\n\t~Matrix(void);\n};\nMatrix::Matrix(void)\n{\n\trow=0;\n\tcolumn=0;\n\tvalues=NULL;\n}\nMatrix::Matrix(int rows,int columns)\n{\n\trow=rows;\n\tcolumn=columns;\n\tvalues=new double[row*column];\n\tfor(int i=0;i<row*column;++i)\n\t\tvalues[i]=0;\n}\nMatrix::~Matrix(void)\n{\n\tdelete []values;\n}\nvoid Matrix::print()\n{\n\tfor(int i=0;i<row;++i){\n\t\tfor(int j=0;j<column;++j){\n\t\t\tcout<<\"    \"<<\"0\";\n\t\t}\n\t\tcout<<endl;\n\t}\n}",
            1588832084.0194309,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "王筝",
            "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows;\n        int columus;\n        double *values;\n\n    public:\n        Matrix(int r,int c,double value[]){\n            this->values = (double*)malloc(sizeof(double)*r*c);\n            memset(values, 0, sizeof(values)*r*c);\n            double *p = this->values;\n            this->rows = r;\n            this->columus = c;\n            for (int i = 0; i < r * c;i++){\n                *p = value[i];\n                p++;\n            }\n            \n        }\n        Matrix(int r, int c)\n        {\n            this->values = (double *)malloc(sizeof(double) * r * c);\n            memset(values, 0, sizeof(values) * r * c);\n            \n            this->rows = r;\n            this->columus = c;\n            \n        }\n        \n        Matrix getRow(int row){\n            int r = this->rows, c = this->columus;\n            double *p = this->values;\n            Matrix n(1,c);\n            double *p1 = n.values;\n            for (int i = 1*c; i < row * c;i++)\n                p++;\n            for (int i = 0; i < c;i++){\n                *p1 = *p;\n                p1++;\n                p++;\n            }\n            return n;\n        }\n        Matrix getColumn(int col){\n            int r = this->rows, c = this->columus;\n            double *p = this->values;\n            double v[100];\n            \n            for (int i = 1; i < col;i++){\n                p++;\n            }\n            for (int i = 0; i < r;i++){\n                v[i] = *p;\n                \n                for (int k = 0; k < c;k++)\n                    p++;\n            }\n            Matrix n(r, 1,v);\n            return n;\n        }\n        void print(){\n            double *p = this->values;\n            for (int i = 0; i < this->rows;i++){\n                for (int j = 0; j < this->columus;j++){\n                    cout << \"    \" << *(p++);\n                }\n                cout << endl;\n            }\n        }\n        ~Matrix(){\n           \n        }\n};",
            1588832231.5737998,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "容浩民",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double ** values;\npublic:\n    Matrix(int rows, int columns){\n        this->rows = rows;\n        this->columns = columns;\n        values = new double *[rows];\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = 0;\n            }\n        }\n    }\n\n    ~Matrix(){\n        for(int i = 0;i < rows;i++){\n            delete [] values[i];\n        }\n        delete [] values;\n    }\n\n    void print(){\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns; j++){\n                cout << \"    \"<<values[i][j] ;\n            }\n            cout << endl;\n        }\n    }\n};",
            1588832210.5212212,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "王芯芸",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns,double values[]){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)this->values[i] = values[i];\n\t}\n\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++)cout << setw(5) << values[i * columns + j];\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588832501.2681537,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "容浩民",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double ** values;\npublic:\n    Matrix(int rows, int columns, double value[]){\n        this->rows = rows;\n        this->columns = columns;\n        values = new double *[rows];\n        int cnt = 0;\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = value[cnt++];\n            }\n        }\n    }\n\n    ~Matrix(){\n        for(int i = 0;i < rows;i++){\n            delete [] values[i];\n        }\n        delete [] values;\n    }\n\n    void print(){\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns; j++){\n                cout <<setw(5) << values[i][j] ;\n            }\n            cout << endl;\n        }\n    }\n};",
            1588832541.1571147,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "容浩民",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double ** values;\npublic:\n    Matrix(int rows, int columns, double value[]){\n        this->rows = rows;\n        this->columns = columns;\n        values = new double *[rows];\n        int cnt = 0;\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = value[cnt++];\n            }\n        }\n    }\n\n    Matrix(const Matrix & m2){\n        this->rows = m2.rows;\n        this->columns = m2.columns;\n        values = new double *[rows];\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = m2.values[i][j];\n            }\n        }\n    }\n\n    ~Matrix(){\n        for(int i = 0;i < rows;i++){\n            delete [] values[i];\n        }\n        delete [] values;\n    }\n\n    void print(){\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns; j++){\n                cout << \"    \" << values[i][j] ;\n            }\n            cout << endl;\n        }\n    }\n};",
            1588832703.247383,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "王芯芸",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns,double values[]){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)this->values[i] = values[i];\n\t}\n\n\tMatrix(const Matrix & Matrix2){\n\t\trows = Matrix2.rows;\n\t\tcolumns = Matrix2.columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)values[i] = Matrix2.values[i];\n\t}\n\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++)cout << \"    \" << values[i * columns + j];\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588832816.9687777,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "孙奥远",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double **values;\n\npublic:\n    Matrix(int rows, int columns);\n    Matrix(int rows, int columns, double val[]);\n    ~Matrix();\n    Matrix getRow(int row);\n    Matrix getColumn(int column);\n    void print();\n};\n\nMatrix::Matrix(int rows, int columns)\n{\n    this->rows = rows;\n    this->columns = columns;\n    values = new double *[rows];\n    for (int i = 0; i < rows; i++)\n    {\n        values[i] = new double[columns];\n        memset(values[i], 0, sizeof(double) * columns);\n    }\n}\nMatrix::Matrix(int rows, int columns, double val[])\n{\n    this->rows = rows;\n    this->columns = columns;\n    this->values = new double *[rows];\n    for (int i = 0; i < rows; i++)\n    {\n        this->values[i] = new double[columns];\n        for (int j = 0; j < columns; j++)\n        {\n            values[i][j] = val[i * columns + j];\n        }\n    }\n}\n\nMatrix Matrix::getRow(int row)\n{\n    Matrix temp(1, columns);\n    for (int i = 0; i < columns; i++)\n    {\n        temp.values[0][i] = values[row - 1][i];\n    }\n    return temp;\n}\n\nMatrix Matrix::getColumn(int column)\n{\n    Matrix temp(rows, 1);\n    for (int i = 0; i < rows; i++)\n    {\n        temp.values[i][0] = values[i][column - 1];\n    }\n    return temp;\n}\nMatrix::~Matrix()\n{\n    for (int i = 0; i < rows; i++)\n    {\n        delete[] values[i];\n    }\n    delete[] values;\n}\n\nvoid Matrix::print()\n{\n    for (int i = 0; i < rows; i++)\n    {\n        for (int j = 0; j < columns; j++)\n        {\n            cout << \"    \" << values[i][j];\n        }\n        cout << endl;\n    }\n}",
            1588832961.660821,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "潘小健",
            "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <iomanip>\n#include <string>\nusing namespace std;\n\nclass Matrix\n{\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int _rows,int _columns):rows(_rows),columns(_columns){\n\t\tvalues=new double[_columns*_rows];\n\t\tmemset(values,0,sizeof(double)*rows*columns);\n\t}\n\n\tMatrix(int _rows,int _columns,double*_values):rows(_rows),columns(_columns){\n\t\tvalues=new double[_columns*_rows];\n\t\tfor (int i = 0; i < _columns*_rows; ++i)\n\t\t{\n\t\t\tvalues[i]=_values[i];\n\t\t}\n\t}\n\n\tMatrix(const Matrix & matrix2){\n\t\trows=matrix2.rows;\n\t\tcolumns=matrix2.columns;\n\t\tvalues=new double[rows*columns];\n\t\tmemcpy(values,matrix2.values,sizeof(double)*columns*rows);\n\t}\n\t\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\t\n\tvoid print(){\n\t\tfor (int i = 0; i < rows; ++i)\n\t\t{\n\t\t\tfor (int j = 0; j <columns ; ++j)\n\t\t\t{\n\t\t\t\tcout<<\"    \"<<values[i*columns+j];\n\t\t\t}\n\t\t\tcout <<endl;\n\t\t}\n\t}\n\n\tMatrix getRow(int row){\n\t\treturn Matrix(1,columns,values+columns*(row-1));\n\t}\n\n\tMatrix getColumn(int column){\n\t\tdouble tmp[rows];\n\t\tfor (int i = 0; i < rows; ++i)\n\t\t{\n\t\t\ttmp[i]=values[column-1+i*columns];\n\t\t}\n\t\treturn Matrix(rows,1,tmp);\n\t}\n\n};",
            1588833047.4191058,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "马淙升",
            "#include<iostream>\n#include<cstring>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows,columns;\n\tdouble *values;\n\tpublic:\n\tMatrix() {\n\t\trows = columns = 0;\n\t\tvalues = new double[1];\n\t}\n\tMatrix(int row,int col) {\n\t\trows = row;\n\t\tcolumns = col;\n\t\tdelete [] values;\n\t\tvalues = new double[row*col+1];\n\t\tmemset(values,0,sizeof(values));\n\t}\n\t~Matrix() {\n\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tfor(int i = 0;i < rows;++ i) {\n\t\t\tfor(int j = 0;j < columns;++ j) {\n\t\t\t\tcout << values[i*columns+j] << \"    \";\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588833300.6140604,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "容浩民",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double ** values;\npublic:\n    Matrix(int rows, int columns){\n        this->rows = rows;\n        this->columns = columns;\n        values = new double *[rows];\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = 0;\n            }\n        }\n    }\n\n    Matrix(int rows, int columns, double value[]){\n        this->rows = rows;\n        this->columns = columns;\n        values = new double *[rows];\n        int cnt = 0;\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = value[cnt++];\n            }\n        }\n    }\n\n    Matrix(const Matrix & m2){\n        this->rows = m2.rows;\n        this->columns = m2.columns;\n        values = new double *[rows];\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = m2.values[i][j];\n            }\n        }\n    }\n\n    ~Matrix(){\n        for(int i = 0;i < rows;i++){\n            delete [] values[i];\n        }\n        delete [] values;\n    }\n\n    Matrix getRow(int rows){\n        Matrix m1(1, this->columns);\n        for(int i = 0;i < this->columns;i++){\n            m1.values[0][i] = this->values[rows - 1][i];\n        }\n        return m1;\n    }\n\n    Matrix getColumn(int columns){\n        Matrix m1(this->rows, 1);\n        for(int i = 0;i < this->rows;i++){\n            m1.values[i][0] = this->values[i][columns - 1];\n        }\n        return m1;\n    }\n\n    void print(){\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns; j++){\n                cout << \"    \" << values[i][j] ;\n            }\n            cout << endl;\n        }\n    }\n};",
            1588833215.1641095,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "王筝",
            "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows;\n        int columus;\n        double *values;\n\n    public:\n        Matrix(int r,int c,double value[]){\n            this->values = (double*)malloc(sizeof(double)*r*c);\n            memset(values, 0, sizeof(values)*r*c);\n            double *p = this->values;\n            this->rows = r;\n            this->columus = c;\n            for (int i = 0; i < r * c;i++){\n                *p = value[i];\n                p++;\n            }\n            \n        }\n        Matrix(const Matrix & mat){\n            this->rows = mat.rows, this->columus = mat.columus;\n            this->values = (double *)malloc(sizeof(double) * mat.rows * mat.columus);\n            double *p = this->values, *p1 = mat.values;\n            for (int i = 0; i < mat.rows * mat.columus;i++){\n                *p = *p1;\n                p1++, p++;\n            }\n        }\n        Matrix(int r, int c)\n        {\n            this->values = (double *)malloc(sizeof(double) * r * c);\n            memset(values, 0, sizeof(values) * r * c);\n            \n            this->rows = r;\n            this->columus = c;\n            \n        }\n        Matrix concatenateRows(const Matrix &mat)const{\n            int r = this->rows, c = this->columus;\n            double *p1 = this->values,*p2=mat.values;\n            double v[2 * r * c];\n            for (int i = 0; i < c * r;i++){\n                v[i] = *p1, p1++;\n            }\n            for (int j = 0; j < c * r;j++){\n                v[c * r + j] = *p2, p2++;\n            }\n            Matrix n(r * 2, c, v);\n            return n;\n        }\n        Matrix concatenateColumns(const Matrix&mat)const{\n            int r = this->rows, c = this->columus;\n            double *p1 = this->values, *p2 = mat.values;\n            double v[2 * r * c];\n            int point = 0;\n            for (int i = 0; i < r;i++){\n                for (int j = 0; j < 2 * c;j++){\n                    if(j<c){\n                        v[point++] = *(p1++);\n                    }else{\n                        v[point++] = *(p2++);\n                    }\n                }\n            }\n            Matrix n(r, c * 2, v);\n            return n;\n        } \n        void print()\n        {\n            double *p = this->values;\n            for (int i = 0; i < this->rows;i++){\n                for (int j = 0; j < this->columus;j++){\n                    cout << \"    \" << *(p++);\n                }\n                cout << endl;\n            }\n        }\n        ~Matrix(){\n           \n        }\n};",
            1588833284.6166012,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "容浩民",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\nprivate:\n    int rows;\n    int columns;\n    double ** values;\npublic:\n    Matrix(int rows, int columns){\n        this->rows = rows;\n        this->columns = columns;\n        values = new double *[rows];\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = 0;\n            }\n        }\n    }\n\n    Matrix(int rows, int columns, double value[]){\n        this->rows = rows;\n        this->columns = columns;\n        values = new double *[rows];\n        int cnt = 0;\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = value[cnt++];\n            }\n        }\n    }\n\n    Matrix(const Matrix & m2){\n        this->rows = m2.rows;\n        this->columns = m2.columns;\n        values = new double *[rows];\n        for(int i = 0;i < rows;i++){\n            values[i] = new double[columns];\n        }\n\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns;j++){\n                values[i][j] = m2.values[i][j];\n            }\n        }\n    }\n\n    ~Matrix(){\n        for(int i = 0;i < rows;i++){\n            delete [] values[i];\n        }\n        delete [] values;\n    }\n\n    Matrix getRow(int rows){\n        Matrix m1(1, this->columns);\n        for(int i = 0;i < this->columns;i++){\n            m1.values[0][i] = this->values[rows - 1][i];\n        }\n        return m1;\n    }\n\n    Matrix getColumn(int columns){\n        Matrix m1(this->rows, 1);\n        for(int i = 0;i < this->rows;i++){\n            m1.values[i][0] = this->values[i][columns - 1];\n        }\n        return m1;\n    }\n\n    Matrix concatenateRows(const Matrix & m2){\n        Matrix m1(rows + m2.rows, columns);\n        for(int i = 0;i < m1.rows;i++){\n            for(int j = 0;j < columns;j++){\n                if(i < rows){\n                    m1.values[i][j] = this->values[i][j];\n                }\n                else{\n                    m1.values[i][j] = m2.values[i - rows][j];\n                }\n            }\n        }\n        return m1;\n    }\n\n    Matrix concatenateColumns(const Matrix & m2){\n        Matrix m1(rows, columns + m2.columns);\n        for(int i = 0;i < m1.rows;i++){\n            for(int j = 0;j < m1.columns;j++){\n                if(j < columns){\n                    m1.values[i][j] = this->values[i][j];\n                }\n                else{\n                    m1.values[i][j] = m2.values[i][j - columns];\n                }\n            }\n        }\n        return m1;\n    }\n\n    void print(){\n        for(int i = 0;i < rows; i++){\n            for(int j = 0;j < columns; j++){\n                cout << \"    \" << values[i][j] ;\n            }\n            cout << endl;\n        }\n    }\n};",
            1588833655.5386689,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "王振恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\n    private:\n        int rows;\n        int columns;\n        double * values;\n    public:\n        Matrix(int rows,int columns)\n        {\n            this->rows = rows;\n            this->columns = columns;\n           double* map = NULL; \n\t\t\t\tmap = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = 0;\n            }\n            this->values = map;\n        }\n\t\t\tMatrix(int rows,int columns,double* values)\n        {\n            this->rows = rows;\n            this->columns = columns;\n           double* map = NULL; \n\t\t\t\tmap = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = values[i];\n            }\n            this->values = map;\n        }\n\t\t  Matrix(const Matrix & matrix2)\n\t\t  {\n\t\t\t  this->rows = matrix2.rows;\n           this->columns = matrix2.columns;\n\t\t\t  double* map = NULL; \n\t\t\t  map = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = matrix2.values[i];\n            }\n            this->values = map;\n\t\t  }\n        Matrix getRow(int row)\n\t\t{\n\t\t\tMatrix myMatrix(1,this->columns);\n\t\t\tdouble* map = NULL; \n\t\t\t map = new double[this->columns];\n\t\t\tfor(int i=0;i<this->columns;++i)\n\t\t\t{\n\t\t\t\tmap[i]=this->values[(row-1)*this->columns+i];\n\t\t\t}\n\t\t\tmyMatrix.values = map;\n\t\t\treturn myMatrix;\n\t\t};\n\t\tMatrix getColumn(int column)\n\t\t{\n\t\t\tMatrix myMatrix(this->rows,1);\n\t\t\tdouble* map = NULL; \n\t\t\t map = new double[this->columns];\n\t\t\tfor(int i=0;i<this->rows;++i)\n\t\t\t{\n\t\t\t\tmap[i]=this->values[column-1+i*this->columns];\n\t\t\t}\n\t\t\tmyMatrix.values = map;\n\t\t\treturn myMatrix;\n\t\t};\n\t\t\tvoid print()\n        {\n            for(int i=0;i<this->rows;++i){\n                for(int j=0;j<this->columns;++j)\n                {\n                if(this->values[i*this->columns+j]<10)    \n\t\t\t\t\t\t\tcout<<\"    \"<<this->values[i*this->columns+j];\n\t\t\t\t\t\telse cout<<\"    \"<<this->values[i*this->columns+j];\n                }\n                cout<<endl;\n            }\n        }\n        ~Matrix()\n        {\n            delete [] this->values;\n        }\n};",
            1588834795.2323418,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "潘小健",
            "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <iomanip>\n#include <string>\nusing namespace std;\n\nclass Matrix\n{\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int _rows,int _columns):rows(_rows),columns(_columns){\n\t\tvalues=new double[_columns*_rows];\n\t\tmemset(values,0,sizeof(double)*rows*columns);\n\t}\n\n\tMatrix(int _rows,int _columns,double*_values):rows(_rows),columns(_columns){\n\t\tvalues=new double[_columns*_rows];\n\t\tfor (int i = 0; i < _columns*_rows; ++i)\n\t\t{\n\t\t\tvalues[i]=_values[i];\n\t\t}\n\t}\n\n\tMatrix(const Matrix & matrix2){\n\t\trows=matrix2.rows;\n\t\tcolumns=matrix2.columns;\n\t\tvalues=new double[rows*columns];\n\t\tmemcpy(values,matrix2.values,sizeof(double)*columns*rows);\n\t}\n\t\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\t\n\tvoid print(){\n\t\tfor (int i = 0; i < rows; ++i)\n\t\t{\n\t\t\tfor (int j = 0; j <columns ; ++j)\n\t\t\t{\n\t\t\t\tcout<<\"    \"<<values[i*columns+j];\n\t\t\t}\n\t\t\tcout <<endl;\n\t\t}\n\t}\n\n\tMatrix getRow(int row){\n\t\treturn Matrix(1,columns,values+columns*(row-1));\n\t}\n\n\tMatrix getColumn(int column){\n\t\tdouble tmp[rows];\n\t\tfor (int i = 0; i < rows; ++i)\n\t\t{\n\t\t\ttmp[i]=values[column-1+i*columns];\n\t\t}\n\t\treturn Matrix(rows,1,tmp);\n\t}\n\n\tMatrix concatenateColumns(const Matrix & matrix2) const{\n\t\tdouble tmp[(columns+matrix2.columns)*rows];\n\t\tfor (int i = 0; i < rows; ++i)\n\t\t{\n\t\t\tfor (int j = 0; j < columns; ++j)\n\t\t\t{\n\t\t\t\ttmp[i*(columns+matrix2.columns)+j]=values[i*columns+j];\n\t\t\t}\n\t\t\tfor (int j = 0; j < matrix2.columns; ++j)\n\t\t\t{\n\t\t\t\ttmp[i*(columns+matrix2.columns)+j+columns]=matrix2.values[i*matrix2.columns+j];\n\t\t\t}\n\t\t}\n\t\treturn Matrix(rows,columns+matrix2.columns,tmp);\n\t}\n\n\tMatrix concatenateRows(const Matrix & matrix2) const{\n\t\tdouble tmp[(rows+matrix2.rows)*columns];\n\t\tmemcpy(tmp,values,sizeof(double)*columns*rows);\n\t\tmemcpy(tmp+columns*rows,matrix2.values,sizeof(double)*matrix2.columns*matrix2.rows);\n\t\treturn Matrix(rows+matrix2.rows,columns,tmp);\n\t}\n\t\n\n};\n",
            1588833863.451695,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "麦子丰",
            "#include <cstring>\n#include <iostream>\nusing namespace std;\n\nclass Matrix{\n    private:\n        int rows,columns;\n        double* values;\n    public:\n        Matrix(int rows_,int columns_,double values_[]);\n        Matrix(const Matrix & matrix2);\n        ~Matrix();\n        void print();\n        Matrix concatenateRows(const Matrix & matrix2)const;\n        Matrix concatenateColumns(const Matrix & matrix2)const;\n};\n\nMatrix::Matrix(int rows_,int columns_,double values_[]):rows(rows_),columns(columns_){\n    values = new double[rows*columns];\n    memcpy(values,values_,rows*columns*sizeof(double));\n}\n\nMatrix::Matrix(const Matrix & matrix2){\n    this->rows = matrix2.rows;\n    this->columns = matrix2.columns;\n    values = new double[rows*columns];\n    memcpy(values,matrix2.values,rows*columns*sizeof(double));\n}\n\nMatrix::~Matrix(){\n    delete[] values;\n}\n\nvoid Matrix::print(){\n    for(int i = 0; i < rows; ++i){\n        for(int j = 0; j < columns; ++j){\n            cout << \"    \" << values[i*columns+j];\n        }\n        cout << endl;\n    }\n}\n\nMatrix Matrix::concatenateRows(const Matrix & matrix2)const{\n    int row = this->rows + matrix2.rows;\n    int col = this->columns;\n    double value[row*col];\n    for(int i = 0; i < row; ++i){\n        for(int j = 0; j < col; ++j){\n            if(i < this->rows){//this\n                value[i*col+j] = this->values[i*this->columns+j];\n            }\n            else{//matrix2\n                value[i*col+j] = matrix2.values[(i-this->rows)*matrix2.columns+j];\n            }\n        }\n    }\n    Matrix res(row,col,value);\n    return res;\n}\n\nMatrix Matrix::concatenateColumns(const Matrix & matrix2) const{\n    int row = this->rows;\n    int col = this->columns + matrix2.columns;\n    double value[row*col];\n    for(int i = 0; i < row; ++i){\n        for(int j = 0; j < col; ++j){\n            if(j < this->columns){//this\n                value[i*col+j] = this->values[i*this->columns+j];\n            }\n            else{//matrix2\n                value[i*col+j] = matrix2.values[i*matrix2.columns+j-this->columns];\n            }\n        }\n    }\n    Matrix res(row,col,value);\n    return res;\n}",
            1588834019.6954849,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "周琨曜",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint row;\n\tint column;\n\tdouble * values;\npublic:\n\tMatrix(void);\n\tMatrix(int rows,int columns,double * arr);\n\tvoid print();\n\t~Matrix(void);\n};\nMatrix::Matrix(void)\n{\n\trow=0;\n\tcolumn=0;\n\tvalues=NULL;\n}\nMatrix::Matrix(int rows,int columns,double* arr)\n{\n\trow=rows;\n\tcolumn=columns;\n\tvalues=new double[row*column];\n\tfor(int i=0;i<row*column;++i)\n\t\tvalues[i]=arr[i];\n}\nMatrix::~Matrix(void)\n{\n\tdelete []values;\n}\nvoid Matrix::print()\n{\n\tfor(int k=0;k<row*column;){\n\t\tfor(int i=0;i<row;++i){\n\t\t\tfor(int j=0;j<column;++j){\n\t\t\t\tif(values[k]/10<1)\n\t\t\t\t\tcout<<\"    \"<<values[k];\n\t\t\t\telse if(values[k]/10<10)\n\t\t\t\t\tcout<<\"   \"<<values[k];\n\t\t\t\telse if(values[k]/10<100)\n\t\t\t\t\tcout<<\"  \"<<values[k];\n\t\t\t\telse if(values[k]/10<1000)\n\t\t\t\t\tcout<<\" \"<<values[k];\n\t\t\t\telse if(values[k]/10<10000)\n\t\t\t\t\tcout<<values[k];\n\t\t\t\t++k;\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}\n",
            1588834695.2289708,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "马淙升",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows,columns;\n\tdouble *values;\n\tpublic:\n\tMatrix(int row,int col,double *p) {\n\t\trows = row;\n\t\tcolumns = col;\n\t\tint elem = row*col;\n\t\tvalues = new double[elem];\n\t\tfor(int i = 0;i < elem;++ i) {\n\t\t\tvalues[i] = p[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tfor(int i = 0;i < rows;++ i) {\n\t\t\tfor(int j = 0;j < columns;++ j) {\n\t\t\t\tcout.width(5);\n\t\t\t\tcout << values[i*columns+j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588834953.3892195,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "潘思晗",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int rows, int columns, double values[]){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tint sizes=this->rows*this->columns;\n\t\tthis->values=new double [sizes];\n\t\tfor(int i=0;i<sizes;i++) this->values[i]=values[i];\n\t}\n\t~Matrix(){\n\t\t//delete []values;\n\t}\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows=matrix2.rows;\n\t\tthis->columns=matrix2.columns;\n\t\tthis->values=matrix2.values;\n\t}\n\tvoid print(){\n\t\tint index;\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tindex=i*columns+j;\n\t\t\t\tcout<<' '<<' '<<' '<<' '<<this->values[index];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n};",
            1588907228.3884857,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "王芯芸",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)this->values[i] = 0;\n\t}\n\n\tMatrix(int rows, int columns,double values[]){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)this->values[i] = values[i];\n\t}\n\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++)cout << \"    \" << values[i * columns + j];\n\t\t\tcout << endl;\n\t\t}\n\t}\n\n\tMatrix getRow(int row){\n\t\tMatrix newmatrix(1, this->columns);\n\t\tfor(int i = 0; i < newmatrix.columns; i++)newmatrix.values[i] = this->values[i + (row - 1) * this->columns];\n\t\treturn newmatrix;\n\t}\n\n\tMatrix getColumn(int row){\n\t\tMatrix newmatrix(this->rows, 1);\n\t\tfor(int i = 0; i < newmatrix.rows; i++)newmatrix.values[i] = this->values[i * this->columns + row - 1];\n\t\treturn newmatrix;\n\t}\n};",
            1588834687.0011663,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "唐晨轩",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\tint r;//heng\n\tint c;//zhong\n\tdouble v[1000];\n\tMatrix(int rows,int columns,double values[]){\n\t\tr = rows;\n\t\tc = columns;\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tv[i] = values[i];\n\t\t}\n\t}\n\tMatrix concatenateRows(Matrix &other);\n\tMatrix concatenateColumns(Matrix &other);\n\tvoid print();\n};\nMatrix Matrix::concatenateColumns(Matrix &other){\n\tdouble x[2000];\n\tint cnt = 0;\n\tfor(int i = 0; i < r; i++){\n\t\tfor(int j = 0; j < c; j++){\n\t\t\tx[cnt] = v[i*c+j];\n\t\t\tcnt ++;\n\t\t}\n\t\tfor(int j = 0; j < c; j++){\n\t\t\tx[cnt] = other.v[i*c+j];\n\t\t\tcnt ++;\n\t\t}\n\t}\n\tMatrix cR(r,c*2,x);\n\treturn cR;\n}\nMatrix Matrix::concatenateRows(Matrix &other){\n\tdouble x[2000];\n\tint cnt = 0;\n\tfor(int i = 0; i < r*c; i++){\n\t\tx[cnt] = v[i];\n\t\tcnt ++;\n\t}\n\tfor(int i = 0; i < r*c; i++){\n\t\tx[cnt] = other.v[i];\n\t\tcnt ++;\n\t}\n\tMatrix cC(2*r,c,x);\n\treturn cC;\n}\nvoid Matrix::print(){\n\tint y = 0;\n\tfor(int i = 0; i < r; i++){\n\t\tfor(int j = 0; j < c; j++){\n\t\t\tcout << \"    \" << v[y];\n\t\t\ty++;\n\t\t}\n\t\tcout << endl;\n\t}\n}",
            1588835497.244544,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "欧阳蓓",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n    public:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int rows, int columns)\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n\t\t\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tvalues[i][j] = 0;\n        }\n    }\n\tMatrix(int rows, int columns, double v[] )\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = v[i * columns + j];\n        }\n    }\n\t  Matrix(const Matrix & matrix2)\n\t  {\n\t\t\t this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n\t\t   for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = matrix2.values[i][j];\n        }\n\t  }\n\t Matrix getRow(int row)\n\t {\n\t\tMatrix a (1, columns);\n\t\t for(int i = 0; i < columns; i++)\n\t\t {\n\t\t\ta.values[0][i] = this->values[row - 1][i];\n\t\t }\n\t\t return a;\n\t }\n\t Matrix getColumn(int col)\n\t {\n\t\tMatrix a (rows, 1);\n\t\t for (int i = 0; i < rows; i++)\n\t\t {\n\t\t\ta.values[i][0] = this->values[i][col - 1];\n\t\t }\n\t\t return a;\n\t\t \n\t\t \n\t }\n    ~Matrix()\n    {\n        for  (int i = 0; i < rows; i++)\n\t\t{\n\t\t\tif (values[i] != 0)\n\t\t\t\tdouble values[i];\n\t\t}\n\t\tif (values != 0)\n\t\t\tdouble values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n\t\t\t\t\t\t\n                cout<< \"    \"<<values[ i][j] ;\n \n            }\n            cout << endl;\n        }\n    }\n    private:\n    int rows;\n    int columns;\n    double ** values;\n};",
            1588851900.1000023,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "马淙升",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows,columns;\n\tdouble *values;\n\tpublic:\n\tMatrix(int row,int col,double *p) {\n\t\trows = row;\n\t\tcolumns = col;\n\t\tint elem = row*col;\n\t\tvalues = new double[elem];\n\t\tfor(int i = 0;i < elem;++ i) {\n\t\t\tvalues[i] = p[i];\n\t\t}\n\t}\n\tMatrix(const Matrix & matrix2) {\n\t\trows = matrix2.rows;\n\t\tcolumns = matrix2.columns;\n\t\tvalues = new double[rows*columns];\n\t\tfor(int i = 0;i < columns*rows;++ i) {\n\t\t\tvalues[i] = matrix2.values[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tfor(int i = 0;i < rows;++ i) {\n\t\t\tfor(int j = 0;j < columns;++ j) {\n\t\t\t\tcout << \"    \" << values[i*columns+j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588835493.2275798,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "周琨曜",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint row;\n\tint column;\n\tint size;\n\tdouble * values;\npublic:\n\tMatrix(void);\n\tMatrix(int rows,int columns,double * arr);\n\tMatrix(const Matrix& Matrix);\n\tvoid print();\n\t~Matrix(void);\n};\nMatrix::Matrix(void)\n{\n\trow=0;\n\tcolumn=0;\n\tvalues=NULL;\n}\nMatrix::Matrix(int rows,int columns,double* arr)\n{\n\trow=rows;\n\tcolumn=columns;\n\tsize=row*column;\n\tvalues=new double[row*column];\n\tfor(int i=0;i<row*column;++i)\n\t\tvalues[i]=arr[i];\n}\nMatrix::Matrix(const Matrix& M)\n{\n\tcolumn=M.column;\n\trow=M.row;\n\tsize=M.size;\n\tvalues=new double[M.size];\n\tfor(int i=0;i<M.size;++i)\n\t\tvalues[i]=M.values[i];\n}\nMatrix::~Matrix(void)\n{\n\tdelete []values;\n}\nvoid Matrix::print()\n{\n\tfor(int k=0;k<row*column;){\n\t\tfor(int i=0;i<row;++i){\n\t\t\tfor(int j=0;j<column;++j){\n\t\t\t\tcout<<\"    \"<<values[k];\n\t\t\t\t++k;\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}",
            1588835230.1542497,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王著",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows;\n\tint columns;\n\tdouble **values;\n\tpublic:\n\tMatrix(int rows, int column){\n\t\tint i,j;\n\t\tthis->rows=rows;\n\t\tthis->columns=column;\n\t\tvalues=new double*[rows];\n\t\tfor(i=0;i<rows;i++) values[i]=new double[column];\n\t\tfor(i=0;i<rows;i++){\n\t\t\tfor(j=0;j<column;j++){\n\t\t\t\tvalues[i][j]=0;\n\t\t\t}\n\t\t}\n\t}\n\t~Matrix(){\n\t\tint i,j;\n\t\tfor(i=0;i<this->rows;i++) delete values[i];\n\t\tdelete values;\n\t}\n\tvoid print(){\n\t\tint i,j;\n\t\tfor(i=0;i<rows;i++){\n\t\t\tfor(j=0;j<columns;j++){\n\t\t\t\tprintf(\"%5.0f\",values[i][j]);\n\t\t\t}\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n};",
            1588835515.011859,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "王振恺",
            "#include <iostream>\n\nusing namespace std;\n\nclass Matrix\n{\n    private:\n        int rows;\n        int columns;\n        double * values;\n    public:\n        Matrix(int rows,int columns)\n        {\n            this->rows = rows;\n            this->columns = columns;\n           double* map = NULL; \n\t\t\t\tmap = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = 0;\n            }\n            this->values = map;\n        }\n\t\t\tMatrix(int rows,int columns,double* values)\n        {\n            this->rows = rows;\n            this->columns = columns;\n           double* map = NULL; \n\t\t\t\tmap = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = values[i];\n            }\n            this->values = map;\n        }\n\t\t  Matrix(const Matrix & matrix2)\n\t\t  {\n\t\t\t  this->rows = matrix2.rows;\n           this->columns = matrix2.columns;\n\t\t\t  double* map = NULL; \n\t\t\t  map = new double[rows*columns];\n            for(int i=0;i<rows*columns;++i)\n            {\n                    map[i] = matrix2.values[i];\n            }\n            this->values = map;\n\t\t  }\n        Matrix concatenateRows(const Matrix & matrix2)\n\t\t{\n\t\t\tMatrix myMatrix(this->rows+matrix2.rows,this->columns);\n\t\t\tdouble* map = NULL; \n\t\t\t map = new double[(this->rows+matrix2.rows)*this->columns];\n\t\t\tint i=0;\n\t\t\tfor(;i<this->rows*this->columns;++i) map[i] = this->values[i];\n\t\t\tfor(int j=0;j<matrix2.rows*matrix2.columns;++j) map[i++] = matrix2.values[j];\n\t\t\tmyMatrix.values = map;\n\t\t\treturn myMatrix;\n\t\t}\n\t\n\t\tMatrix concatenateColumns(const Matrix & matrix2)\n\t\t{\n\t\t\tMatrix myMatrix(this->rows,this->columns+matrix2.columns);\n\t\t\tdouble* map = NULL; \n\t\t\t map = new double[this->rows*(this->columns+matrix2.columns)];\n\t\t\tint c=0;\n\t\t\tfor(int i=0;i<this->rows;++i)\n\t\t\t{\n\t\t\t\tfor(int j=0;j<this->columns;++j)map[c++] = this->values[i*columns+j];\n\t\t\t\tfor(int j=0;j<matrix2.columns;++j)map[c++] = matrix2.values[i*columns+j];\n\t\t\t}\n\t\t\tmyMatrix.values = map;\n\t\t\treturn myMatrix;\n\t\t}\n\t\t\tvoid print()\n        {\n            for(int i=0;i<this->rows;++i){\n                for(int j=0;j<this->columns;++j)\n                {\n                if(this->values[i*this->columns+j]<10)    \n\t\t\t\t\t\t\tcout<<\"    \"<<this->values[i*this->columns+j];\n\t\t\t\t\t\telse cout<<\"    \"<<this->values[i*this->columns+j];\n                }\n                cout<<endl;\n            }\n        }\n        ~Matrix()\n        {\n            delete [] this->values;\n        }\n};",
            1588836876.0048378,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "孙奥远",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n    int rows;\n    int columns;\n    double **values;\n\npublic:\n    Matrix(int rows, int columns, double val[]);\n    Matrix(const Matrix &matrix2);\n    ~Matrix();\n    void print();\n    Matrix concatenateRows(const Matrix &matrix2) const;\n    Matrix concatenateColumns(const Matrix &matrix2) const;\n};\n\nMatrix::Matrix(int rows, int columns, double val[])\n{\n    this->rows = rows;\n    this->columns = columns;\n    values = new double *[this->rows];\n    for (int i = 0; i < rows; i++)\n    {\n        values[i] = new double[columns];\n        for (int j = 0; j < columns; j++)\n            values[i][j] = val[i * columns + j];\n    }\n}\n\nMatrix::Matrix(const Matrix &matrix2)\n{\n    this->rows = matrix2.rows;\n    this->columns = matrix2.columns;\n    values = new double *[this->rows];\n    for (int i = 0; i < this->rows; i++)\n    {\n        values[i] = new double[this->columns];\n        for (int j = 0; j < this->columns; j++)\n        {\n            values[i][j] = matrix2.values[i][j];\n        }\n    }\n}\n\nMatrix::~Matrix()\n{\n    for (int i = 0; i < rows; i++)\n        delete[] values[i];\n    delete[] values;\n}\n\nvoid Matrix::print()\n{\n    for (int i = 0; i < rows; i++)\n    {\n        for (int j = 0; j < columns; j++)\n        {\n            cout << \"    \" << values[i][j];\n        }\n        cout << endl;\n    }\n}\n\nMatrix Matrix::concatenateRows(const Matrix &matrix2) const\n{\n    double val[(rows + matrix2.rows) * columns];\n    int index;\n    for (int i = 0; i < rows; i++)\n    {\n        for (int j = 0; j < columns; j++)\n        {\n            val[i * columns + j] = values[i][j];\n            index = i * columns + j;\n        }\n    }\n    for (int i = 0; i < matrix2.rows; i++)\n    {\n        for (int j = 0; j < matrix2.columns; j++)\n        {\n            val[index + 1 + i * matrix2.columns + j] = matrix2.values[i][j];\n        }\n    }\n    return Matrix(rows + matrix2.rows, columns, val);\n}\n\nMatrix Matrix::concatenateColumns(const Matrix &matrix2) const\n{\n    double val[rows*(columns+matrix2.columns)];\n    double matrix[rows][columns+matrix2.columns];\n    for(int i = 0;i < rows;i++)\n    {\n        for (int j = 0; j < columns; j++)\n            matrix[i][j] = values[i][j];\n    }\n    for(int i = 0;i < rows;i++)\n    {\n        for (int j = 0; j < matrix2.columns; j++)\n        {\n            matrix[i][columns + j] = matrix2.values[i][j];\n        }\n    }\n    for(int i = 0;i < rows;i++)\n    {\n        for (int j = 0; j < columns + matrix2.columns; j++)\n        {\n            val[i * (columns + matrix2.columns) + j] = matrix[i][j];\n        }\n    }\n    return Matrix(rows,columns+matrix2.columns,val);\n}",
            1588851825.531116,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "潘思晗",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=NULL;\n\t}\n\tMatrix(int rows, int columns, double values[]){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tint sizes=this->rows*this->columns;\n\t\tthis->values=new double [sizes];\n\t\tfor(int i=0;i<sizes;i++) this->values[i]=values[i];\n\t}\n\t~Matrix(){\n\t\t//delete []values;\n\t}\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows=matrix2.rows;\n\t\tthis->columns=matrix2.columns;\n\t\tthis->values=matrix2.values;\n\t}\n\tvoid print(){\n\t\tint index;\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tindex=i*columns+j;\n\t\t\t\tcout<<' '<<' '<<' '<<' '<<this->values[index];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\tMatrix getRow(int row){\n\t\trow=row-1;\n\t\tdouble *ro=new double[columns];\n\t\tint index;\n\t\tfor(int i=0;i<columns;i++){\n\t\t\tindex=row*columns+i;\n\t\t\tro[i]=this->values[index];\n\t\t}\n\t\tMatrix rowmat(1,this->columns,ro);\n\t\treturn rowmat;\n\t}\n\tMatrix getColumn(int column){\n\t\tcolumn=column-1;\n\t\tdouble *col=new double[rows];\n\t\tint index=column;\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tcol[i]=this->values[index];\n\t\t\tindex+=columns;\n\t\t}\n\t\tMatrix colmat(this->rows,1,col);\n\t\treturn colmat;\n\t}\n};",
            1588907991.929273,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "王著",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\n\tpublic:\n\tMatrix(int row,int column,double *value){\n\t\tint i;\n\t\trows=row;\n\t\tcolumns=column;\n\t\tthis->values=new double[row*column];\n\t\tfor(i=0;i<row*column;i++){\n\t\t\tthis->values[i]=value[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\tvoid print(){\n\t\tint i;\n\t\tint cnt=0;\n\t\tfor(i=0;i<rows*columns;i++){\n\t\t\tprintf(\"%5.0f\",values[i]);\n\t\t\tcnt++;\n\t\t\tif(cnt%columns==0) {\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\n};",
            1588836261.7848744,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "王芯芸",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)this->values[i] = 0;\n\t}\n\n\tMatrix(int rows, int columns,double values[]){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)this->values[i] = values[i];\n\t}\n\n\tMatrix(const Matrix & Matrix2){\n\t\trows = Matrix2.rows;\n\t\tcolumns = Matrix2.columns;\n\t\tthis->values = new double[rows * (columns + 1)];\n\t\tfor(int i = 0; i < rows * columns; i++)values[i] = Matrix2.values[i];\n\t}\n\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++)cout << \"    \" << values[i * columns + j];\n\t\t\tcout << endl;\n\t\t}\n\t}\n\n\tMatrix concatenateRows(const Matrix & matrix2){\n\t\tMatrix newmatrix(this->rows + matrix2.rows, matrix2.columns);\n\t\tfor(int i = 0; i < this->rows * this->columns; i++)newmatrix.values[i] = this->values[i];\n\t\tfor(int i = 0; i < matrix2.rows * matrix2.columns; i++)newmatrix.values[i + this->rows * this->columns] = matrix2.values[i];\n\t\treturn newmatrix;\n\t}\n\n\tMatrix concatenateColumns(const Matrix & matrix2){\n\t\tMatrix newmatrix(matrix2.rows, matrix2.columns + matrix2.columns);\n\t\tfor(int i = 0; i < this->rows + matrix2.rows; i++){\n\t\t\tif(i % 2 == 0)for(int j = 0; j < this->columns; j++)newmatrix.values[j + i * this->columns] = this->values[j + (i / 2) * this->columns];\n\t\t\telse for(int j = 0; j < matrix2.columns; j++)newmatrix.values[j + i * this->columns] = matrix2.values[j + (i / 2) * matrix2.columns];\n\t\t}\n\t\treturn newmatrix;\n\t}\n};",
            1588836396.696969,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "王著",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\n\tpublic:\n\tMatrix(int row,int column,double *value){\n\t\tint i;\n\t\trows=row;\n\t\tcolumns=column;\n\t\tthis->values=new double[row*column];\n\t\tfor(i=0;i<row*column;i++){\n\t\t\tthis->values[i]=value[i];\n\t\t}\n\t}\n\tMatrix(const Matrix &s2){\n\t\tthis->rows=s2.rows;\n\t\tthis->columns=s2.columns;\n\t\tthis->values=new double[this->rows*this->columns];\n\t\tint i;\n\t\tfor(i=0;i<this->rows*this->columns;i++){\n\t\t\tthis->values[i]=s2.values[i];\n\t\t}\n\t\t\n\t}\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\tvoid print(){\n\t\tint i;\n\t\tint cnt=0;\n\t\tfor(i=0;i<rows*columns;i++){\n\t\t\tprintf(\"    %0.0f\",values[i]);\n\t\t\tcnt++;\n\t\t\tif(cnt%columns==0) {\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\n};",
            1588836564.1532013,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "欧阳蓓",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\npublic:\n    Matrix()\n    {\n        matrix = nullptr;\n        row = 0;\n        col = 0;\n    }\n    Matrix(int row, int col)\n    {\n        this -> row = row;\n        this -> col = col; \n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n\n    Matrix(int row, int col, const double *value)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = value[i * col + j];\n            }\n        }\n    }\n\n    Matrix (const Matrix & matrix1)\n    {\n        row = matrix1.row;\n        col = matrix1.col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = matrix1.matrix[i][j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            if (matrix[i] != nullptr) delete [] matrix[i];\n        }\n        if (matrix != nullptr) delete [] matrix;\n    }\n\n   \n    Matrix concatenateRows(Matrix & matrix1)\n    {\n        Matrix t(row  * 2 , col);\n        for(int i = 0; i < row * 2; ++i)\n        {\n            for(int j = 0; j < col; ++j)\n            {\n\t\t\t\t\t\tif ( i < row)\n                t.matrix[i][j] = matrix[i][j];\n\t\t\t\telse\n\t\t\t\t\t t.matrix[i][j] = matrix1.matrix[i - row][j];\n            }\n        }\n        \n        return t;\n    }\n\n    Matrix concatenateColumns(Matrix & matrix1)\n    {\n        Matrix t(row, col + matrix1.col);\n        for(int i = 0; i < row ; ++i)\n        {\n            for(int j = 0; j < col * 2; ++j)\n            {\n\t\t\t\t\t\tif (j < col)\n                t.matrix[i][j] = matrix[i][j];\n\t\t\t\t\t\telse\n\t\t\t\t\t  t.matrix[i][j] = matrix1.matrix[i][j - col];\n            }\n        }\n         \n        return t;\n    }\n\n   \n\n    \n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < col; ++j)\n            {\n                cout << \"    \" << matrix[i][j]  ;\n            }\n            cout << endl;\n        }\n    }\n \n   \n     \n \n \n\nprivate:\n    double **matrix;\n    int row;\n    int col;\n};\n",
            1588896275.3768895,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "马淙升",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows,columns;\n\tdouble *values;\n\tpublic:\n\tMatrix(int row,int col,double *p) {\n\t\trows = row;\n\t\tcolumns = col;\n\t\tint elem = row*col;\n\t\tvalues = new double[elem];\n\t\tfor(int i = 0;i < elem;++ i) {\n\t\t\tvalues[i] = p[i];\n\t\t}\n\t}\n\tMatrix(const Matrix & matrix2) {\n\t\trows = matrix2.rows;\n\t\tcolumns = matrix2.columns;\n\t\tvalues = new double[rows*columns];\n\t\tfor(int i = 0;i < columns*rows;++ i) {\n\t\t\tvalues[i] = matrix2.values[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete [] values;\n\t}\n\tMatrix getRow(int row) {\n\t\tdouble temp[columns];\n\t\trow -= 1;\n\t\tfor(int i = 0;i < columns;++ i) {\n\t\t\ttemp[i] = values[row*columns+i];\n\t\t}\n\t\tMatrix res(1,columns,temp);\n\t\treturn res;\n\t}\n\tMatrix getColumn(int column) {\n\t\tdouble temp[rows];\n\t\tcolumn -= 1;\n\t\tfor(int i = 0;i < rows;++ i) {\n\t\t\ttemp[i] = values[i*columns+column];\n\t\t}\n\t\tMatrix res(rows,1,temp);\n\t\treturn res;\n\t}\n\tvoid print() {\n\t\tfor(int i = 0;i < rows;++ i) {\n\t\t\tfor(int j = 0;j < columns;++ j) {\n\t\t\t\tcout << \"    \" << values[i*columns+j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588837179.6127462,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "彭瑞洲",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows,int columns){\n\t\t\t\n\t\t}\n\t\t~Matrix(){\n\t\t\t\n\t\t}\n\t\tvoid print(){\n\t\t\t\n\t\t}\n};",
            1588838741.9771209,
            0,
            "# 答案不正确\n\n# 随机输入:\n5\n3\n\n\n# 参考答案:\n    0    0    0\n    0    0    0\n    0    0    0\n    0    0    0\n    0    0    0\n\n\n# 我的答案:\n"
        ],
        [
            "2.6 (C++)",
            "潘思晗",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tthis->values=NULL;\n\t}\n\tMatrix(int rows, int columns, double values[]){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tint sizes=this->rows*this->columns;\n\t\tthis->values=new double [sizes];\n\t\tfor(int i=0;i<sizes;i++) this->values[i]=values[i];\n\t}\n\t~Matrix(){\n\t\t//delete []values;\n\t}\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows=matrix2.rows;\n\t\tthis->columns=matrix2.columns;\n\t\tthis->values=matrix2.values;\n\t}\n\tvoid print(){\n\t\tint index;\n\t\tfor(int i=0;i<rows;i++){\n\t\t\tfor(int j=0;j<columns;j++){\n\t\t\t\tindex=i*columns+j;\n\t\t\t\tcout<<' '<<' '<<' '<<' '<<this->values[index];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\tMatrix concatenateRows(const Matrix & matrix2) const{\n\t\tint size=this->rows*this->columns+matrix2.rows*matrix2.columns;\n\t\tint ro=this->rows+matrix2.rows;\n\t\tdouble *spanrow=new double[size];\n\t\tint k=0,index;\n\t\tfor(int i=0;i<this->rows;i++){\n\t\t\tfor(int j=0;j<this->columns;j++){\n\t\t\t\tindex=i*columns+j;\n\t\t\t\tspanrow[k++]=this->values[index];\n\t\t\t}\n\t\t}\n\t\tfor(int i=0;i<this->rows;i++){\n\t\t\tfor(int j=0;j<this->columns;j++){\n\t\t\t\tindex=i*columns+j;\n\t\t\t\tspanrow[k++]=matrix2.values[index];\n\t\t\t}\n\t\t}\n\t\tMatrix rowconcatenation(ro,this->columns,spanrow);\n\t\treturn rowconcatenation;\n\t}\n\tMatrix concatenateColumns(const Matrix & matrix2) const{\n\t\tint size=this->rows*this->columns+matrix2.rows*matrix2.columns;\n\t\tint co=this->columns+matrix2.columns;\n\t\tdouble *spancol=new double[size];\n\t\tint k=0,index;\n\t\tfor(int i=0;i<this->rows;i++){\n\t\t\tfor(int j=0;j<co;j++){\n\t\t\t\tif(j<this->columns){\n\t\t\t\t\tindex=i*this->columns+j;\n\t\t\t\t\tspancol[k++]=this->values[index];\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tindex=i*this->columns+j-this->columns;\n\t\t\t\t\tspancol[k++]=matrix2.values[index];\t\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tMatrix colconcatenation(this->rows,co,spancol);\n\t\treturn colconcatenation;\n\t}\n};",
            1588908726.9963596,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "覃浩南",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nstruct Matrix{\nprivate:\n    int rows;\n    int columns;\n    double **values;\npublic:\n    Matrix(int r, int c) :rows(r), columns(c)\n    {\n        this->values = new double*[rows]();\n        for(int i = 0; i != rows; ++i){\n            values[i] = new double[columns]();\n        }\n    }\n\n    ~Matrix()\n    {\n        for(int i = 0; i != rows; ++i){\n            delete [] values[i];\n        }\n        delete values;\n    }\n\n    void print();\n};\n\nvoid Matrix::print(){\n    for(int i = 0; i != rows; ++i){\n        for(int j = 0; j != columns; ++j){\n            cout << setw(5) << values[i][j];\n        }\n        cout << endl;\n    }\n}\n",
            1588838146.729649,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "韦媛馨",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix {\nprivate:\n\tint rows, columns;\n\tdouble* values;\npublic:\n\tMatrix(int rows, int columns, double values[]) {\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor (int i = 0; i < rows * columns; ++i) this->values[i] = values[i];\n\t}\n\tMatrix(int rows,int columns){\n\t\tthis->rows=rows;\n\t\tthis->columns=columns;\n\t\tvalues=new double[rows*columns];\n\t\tfor(int i=0;i<rows*columns;++i) values[i]=0;\n\t}\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows =matrix2.rows;\n\t\tthis->columns = matrix2.columns;\n\t\tthis->values = new double[matrix2.rows*matrix2.columns];\n\t\tfor (int i = 0; i < matrix2.rows *matrix2.columns; ++i) this->values[i] = matrix2.values[i];\n\t}\n\t~Matrix() {\n\t\tdelete[]values;\n\t}\n\tvoid print() {\n\t\tfor (int i = 0; i < rows; ++i) {\n\t\t\tfor (int j = 0; j < columns; ++j) {\n\t\t\t\tcout <<\"    \"<<values[i * columns + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n\tMatrix concatenateRows(const Matrix & matrix2) const;\n\tMatrix concatenateColumns(const Matrix & matrix2) const;\n};\n Matrix Matrix::concatenateRows(const Matrix & matrix2) const{\n\tMatrix res(rows+matrix2.rows,columns);\n\tres.values=new double[(rows+matrix2.rows)*columns];\n\tint i=0;\n\tfor(;i<rows*columns;++i) res.values[i]=values[i];\n\tfor(int j=0;j<matrix2.rows*matrix2.columns;++j) res.values[i++]=matrix2.values[j];\n\treturn res;\n}\n Matrix Matrix::concatenateColumns(const Matrix & matrix2) const{\n\tMatrix res(rows,matrix2.columns+columns);\n\tres.values=new double[(columns+matrix2.columns)*rows];\n\tint index=0;\n\tfor(int i=0;i<rows;++i){\n\t\tfor(int j=0;j<columns;++j) res.values[index++]=values[i*columns+j];\n\t\tfor(int j=0;j<matrix2.columns;++j) res.values[index++]=matrix2.values[i*columns+j];\n\t}\n\treturn res;\n}",
            1588838187.5767424,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "覃浩南",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nstruct Matrix{\nprivate:\n    int rows;\n    int columns;\n    double **values;\npublic:\n    Matrix(int r, int c, double values[]) :rows(r), columns(c)\n    {\n        this->values = new double*[rows]();\n        for(int i = 0; i != rows; ++i){\n            this->values[i] = new double[columns]();\n        }\n        \n        int k = 0;\n        for(int i = 0; i != rows; ++i){\n            for(int j = 0; j != columns; ++j){\n                this->values[i][j] = values[k++];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for(int i = 0; i != rows; ++i){\n            delete [] values[i];\n        }\n        delete values;\n    }\n\n    void print();\n};\n\nvoid Matrix::print(){\n    for(int i = 0; i != rows; ++i){\n        for(int j = 0; j != columns; ++j){\n            cout << setw(5) << values[i][j];\n        }\n        cout << endl;\n    }\n}",
            1588838467.9814665,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "王著",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\n\tpublic:\n\tMatrix(){\n\t\trows=0;\n\t\tcolumns=0;\n\t}\n\tMatrix(int row,int column,double *value){\n\t\tint i;\n\t\trows=row;\n\t\tcolumns=column;\n\t\tthis->values=new double[row*column];\n\t\tfor(i=0;i<row*column;i++){\n\t\t\tthis->values[i]=value[i];\n\t\t}\n\t}\n\tMatrix(const Matrix &s2){\n\t\tthis->rows=s2.rows;\n\t\tthis->columns=s2.columns;\n\t\tthis->values=new double[this->rows*this->columns];\n\t\tint i;\n\t\tfor(i=0;i<this->rows*this->columns;i++){\n\t\t\tthis->values[i]=s2.values[i];\n\t\t}\n\t\t\n\t}\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\tvoid print(){\n\t\tif(rows==1){\n\t\t\tint i;\n\t\t\tfor(i=0;i<columns;i++) printf(\"    %0.0f\",values[i]);\n\t\t\tprintf(\"\\n\");\n\t\t\treturn ;\n\t\t}\n\t\tif(columns==1){\n\t\t\tint i;\n\t\t\tfor(i=0;i<rows;i++) {\n\t\t\t\tprintf(\"    %0.0f\\n\",values[i]);\n\t\t\t}\n\t\t\treturn ;\n\t\t}\n\t\tint i;\n\t\tint cnt=0;\n\t\tfor(i=0;i<rows*columns;i++){\n\t\t\tprintf(\"    %0.0f\",values[i]);\n\t\t\tcnt++;\n\t\t\tif(cnt%columns==0) {\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\n\tMatrix getRow(int row){\n\t\tMatrix ret;\n\t\tret.rows=1;\n\t\tret.columns=this->columns;\n\t\tint i,j;\n\t\tret.values=new double[this->columns];\n\t\ti=row;\n\t\tfor(j=0;j<this->columns;j++){\n\t\t\tret.values[j]=this->values[j+(i-1)*this->columns];\n\t\t}\n\t\treturn ret;\n\t\t\n\t}\n\tMatrix getColumn(int column){\n\t\tMatrix ret;\n\t\tret.rows=this->rows;\n\t\tret.columns=1;\n\t\tint i,j;\n\t\tret.values=new double[this->rows];\n\t\tj=column;\n\t\tfor(i=0;i<this->rows;i++){\n\t\t\tret.values[i]=this->values[j-1+i*this->columns];\n\t\t}\n\t\treturn ret;\n\t}\n};",
            1588838979.52603,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "覃浩南",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nstruct Matrix{\nprivate:\n    int rows;\n    int columns;\n    double **values;\npublic:\n    Matrix(int r, int c, double values[]) :rows(r), columns(c)\n    {\n        this->values = new double*[rows]();\n        for(int i = 0; i != rows; ++i){\n            this->values[i] = new double[columns]();\n        }\n        \n        int k = 0;\n        for(int i = 0; i != rows; ++i){\n            for(int j = 0; j != columns; ++j){\n                this->values[i][j] = values[k++];\n            }\n        }\n    }\n    \n    Matrix(const Matrix & matrix2){\n        this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        this->values = new double*[rows]();\n        for(int i = 0; i != rows; ++i){\n            this->values[i] = new double[columns]();\n        }\n        for(int i = 0; i != rows; ++i){\n            for(int j = 0; j != columns; ++j){\n                this->values[i][j] = matrix2.values[i][j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for(int i = 0; i != rows; ++i){\n            delete [] values[i];\n        }\n        delete values;\n    }\n\n    void print();\n};\n\nvoid Matrix::print(){\n    for(int i = 0; i != rows; ++i){\n        for(int j = 0; j != columns; ++j){\n            cout << \"    \" << values[i][j];\n        }\n        cout << endl;\n    }\n}",
            1588839179.1123695,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王志文",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tdouble mat[50][50];\n\t\tMatrix(int rows, int columns){\n\t\t\tthis -> rows = rows;\n\t\t\tthis -> columns = columns;\n\t\t\tfor(int i = 0; i < rows; ++i){\n\t\t\t\tfor(int j = 0; j < columns; ++j){\n\t\t\t\t\tmat [i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i = 0; i < rows; ++i){\n\t\t\t\tfor(int j = 0; j < columns; ++j){\n\t\t\t\t\tcout << mat[i][j] << \"    \";\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t\t~Matrix(){\n\t\t\t\n\t\t}\n};",
            1588843284.4168348,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "邵震东",
            "#include <iostream>\n#include <iomanip>\n\nclass Matrix {\nprivate:\n    int rows;\n    int columns;\n    double * values;\npublic:\n    Matrix() = default;\n    Matrix(int row, int column)\n    {\n        rows = row;\n        columns = column;\n        this->values = new double [row * column];\n        for (int i = 0; i < row * column; ++i) {\n            *(values + i) = 0;\n        }\n    }\n    Matrix(int row, int column, double * value)\n    {\n        rows = row;\n        columns = column;\n        this->values = new double [row * column];\n        for (int i = 0; i < row * column; ++i) {\n            *(values + i) = *(value + i);\n        }\n    }\n    ~Matrix()\n    {\n        delete[] values;\n    }\n    void print() const\n    {\n        for (int i = 0; i < rows * columns; ) {\n            for (int j = 0; j < columns; ++j) {\n                //std::cout << std::setw(5);\n                std::cout << \"    \" << this->values[i];\n                ++i;\n            }\n            std::cout << std::endl;\n        }\n    }\n    Matrix getRow(int row)\n    {\n        Matrix print;\n        double *elem = new double [this->columns];\n        for (int i = 0; i < this->columns; ++i) {\n            *(elem + i) = *(this->values + i + (row - 1) * this->columns);\n        }\n        print.rows = 1;\n        print.columns = this->columns;\n        print.values = elem;\n        return print;\n    }\n    Matrix getColumn(int column)\n    {\n        Matrix print;\n        double *elem = new double [this->columns];\n        for (int i = 0; i < this->rows; ++i) {\n            *(elem + i) = *(this->values + (this->columns * i) + column - 1);\n        }\n        print.rows = this->rows;\n        print.columns = 1;\n        print.values = elem;\n        return print;\n    }\n};\n\nusing namespace std;",
            1588843033.1287405,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "王志文",
            "#include <iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tdouble mat[40][40];\n\tMatrix(int rows, int columns, double values[]){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tint count = 0;\n\t\tfor (int i = 0; i < rows; ++ i){\n\t\t\tfor(int j = 0; j < columns; ++j){\n\t\t\t\tmat[i][j] = values[count];\n\t\t\t\t++count;\n\t\t\t}\n\t\t} \n\t}\n\tvoid print(){\n\t\tfor (int i = 0; i < this-> rows; ++ i){\n\t\t\tfor(int j = 0; j < this->columns; ++j){\n\t\t\t\tcout << setw(5) << mat[i][j] ;\n\t\t\t}\n\t\t\tcout << endl;\n\t\t} \n\t}\n\t~Matrix(){\n\t\t\n\t}\n};",
            1588845194.0345926,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "汪艺凡",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\nprivate：\n\tint rows；\n\tint columns；\n\tdouble * values = 0；\npublic:\n\tMatrax matrix1(int rows, int columns){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\t\n\t\t\n\t\tvoid print(){\n\t\t\tfor (int i = 1; i <= rows ; ++ i) {\n\t\t\t\tfor (int j = 1; j < columns ; ++ i) {\n\t\t\t\t\tcout<<this->values<<'    ';\n\t\t\t\t}\n\t\t\t\tcout<<this->values<<endl;\n\t\t\t\t\n\t\t\t}\n\t\t\n\t}\n};\n",
            1588847980.7877772,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:5:1: error: stray ‘\\357’ in program\n private：\n ^\nsource.cpp:5:1: error: stray ‘\\274’ in program\nsource.cpp:5:1: error: stray ‘\\232’ in program\nsource.cpp:6:2: error: stray ‘\\357’ in program\n  int rows；\n  ^\nsource.cpp:6:2: error: stray ‘\\274’ in program\nsource.cpp:6:2: error: stray ‘\\233’ in program\nsource.cpp:7:2: error: stray ‘\\357’ in program\n  int columns；\n  ^\nsource.cpp:7:2: error: stray ‘\\274’ in program\nsource.cpp:7:2: error: stray ‘\\233’ in program\nsource.cpp:8:2: error: stray ‘\\357’ in program\n  double * values = 0；\n  ^\nsource.cpp:8:2: error: stray ‘\\274’ in program\nsource.cpp:8:2: error: stray ‘\\233’ in program\nsource.cpp:18:26: warning: multi-character character constant [-Wmultichar]\n      cout<<this->values<<'    ';\n                          ^\nsource.cpp:6:2: error: expected ‘:’ before ‘int’\n  int rows；\n  ^\nsource.cpp:6:6: error: expected ‘;’ at end of member declaration\n  int rows；\n      ^\nsource.cpp:7:6: error: expected ‘;’ at end of member declaration\n  int columns；\n      ^\nmain.cpp:9:1: error: expected ‘}’ at end of input\n }\n ^\nIn file included from main.cpp:1:0:\nsource.cpp:9:1: error: expected ‘;’ before ‘public’\n public:\n ^\nmain.cpp: In member function ‘int Matrix::main()’:\nmain.cpp:7:30: error: no matching function for call to ‘Matrix::Matrix(int&, int&)’\n  Matrix matrix1(rows, columns);\n                              ^\nIn file included from main.cpp:1:0:\nsource.cpp:3:7: note: candidate: Matrix::Matrix()\n class Matrix\n       ^\nsource.cpp:3:7: note:   candidate expects 0 arguments, 2 provided\nsource.cpp:3:7: note: candidate: constexpr Matrix::Matrix(const Matrix&)\nsource.cpp:3:7: note:   candidate expects 1 argument, 2 provided\nsource.cpp:3:7: note: candidate: constexpr Matrix::Matrix(Matrix&&)\nsource.cpp:3:7: note:   candidate expects 1 argument, 2 provided\nmain.cpp:8:10: error: ‘class Matrix’ has no member named ‘print’\n  matrix1.print();\n          ^\nmain.cpp: At global scope:\nmain.cpp:9:1: error: expected unqualified-id at end of input\n }\n ^\n"
        ],
        [
            "2.5 (C++)",
            "谢扬",
            "#include<iostream>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nclass Matrix  \n{\n\tprivate:\n\t\tint rows,columns;\n\t\tdouble*values;\n\t\t//析构函数/复制构造函数/重载赋值运算府\n\tpublic:\n\tMatrix(int m_rows=0, int m_columns=0,double*m_values=nullptr);\n\tMatrix(const Matrix&copy);\n\t~Matrix(){delete[]values;}\n\tbool print();\n\tMatrix getRow(int row);\n\tMatrix getColumn(int col);\n};\nMatrix::Matrix(int m_rows, int m_columns,double*m_values):rows(m_rows),columns(m_columns)\n{\n\tif(rows>0&&columns>0)\n\t{values=new double[rows*columns];\n\tfor(int i=0;i<rows*columns;++i)values[i]=m_values[i];\n\t }\n\telse values=nullptr;\n}\nMatrix::Matrix(const Matrix&copy):rows(copy.rows),columns(copy.columns)\n{\n\tvalues=new double[rows*columns];\n\tfor(int i=0;i<rows*columns;++i)values[i]=copy.values[i];\n}\nbool Matrix::print()\n{\n\tif(rows<0||columns<0)return false;\n\tfor(int row=0;row<rows*columns;++row)\n\t{\n\t\tcout<<values[row]<<\"    \";\n\t\tif(row%columns==columns-1)cout<<endl;\n\t}\n\treturn true;\n}\n\nMatrix Matrix::getRow(int row)\n{\n\tif(row<=0)return Matrix();\n\treturn Matrix(1,columns,values+columns*(row-1));\n}\nMatrix Matrix::getColumn(int col)\n{\n\tif(col<=0)return Matrix();\n\tdouble*temp=new double[rows];\n\tfor(int i=0;i<rows;++i)temp[i]=(values+columns*i)[col-1];\n\treturn Matrix(rows,1,temp);\n}",
            1588851133.5956624,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "潘文轩",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int row, columns;\n    double * values;\npublic:\n    Matrix(int row, int columns) {\n        this -> row = row;\n        this -> columns = columns;\n        values = (double *) new double[row * columns];\n        memset(values, 0, sizeof(double) * row * columns);\n    }\n    ~Matrix() {\n        delete[] values;\n    }\n    void print() {\n        for(int i = 0; i < row; i ++) {\n            for(int j = 0; j < columns; j ++) {\n                cout << \"    \" << values[i * row + columns];\n            }\n            cout << endl;\n        }\n    }\n};",
            1588851978.818506,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "潘文轩",
            "#include <iostream>\n#include <cstring>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows, columns;\n    double * values;\npublic:\n    Matrix(int row, int columns, double * v) {\n        this -> rows = row;\n        this -> columns = columns;\n        this -> values = (double *) new double[rows * columns];\n        memcpy(this -> values, v, sizeof(double) * rows * columns);\n    }\n    ~Matrix() {\n        delete[] values;\n    }\n    void print() {\n        for(int i = 0; i < rows; i ++) {\n            for(int j = 0; j < columns; j ++) {\n                cout << setw(5) << setfill(' ') << right << values[i * columns + j];\n            }\n        cout << endl;\n        }\n    }\n};",
            1588852616.4284356,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "潘文轩",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows, columns;\n    double * values;\npublic:\n    Matrix(int row, int columns, double * v) {\n        this -> rows = row;\n        this -> columns = columns;\n        this -> values = (double *) new double[rows * columns];\n        memcpy(this -> values, v, sizeof(double) * rows * columns);\n    }\n    Matrix(const Matrix & m) {\n        this -> rows = m.rows;\n        this -> columns = m.columns;\n\t\tthis -> values = (double *) new double[rows * columns];\n        memcpy(this -> values, m.values, sizeof(double) * this -> rows * this -> columns);\n    }\n    ~Matrix() {\n        delete[] values;\n    }\n    void print() {\n        for(int i = 0; i < rows; i ++) {\n            for(int j = 0; j < columns; j ++) {\n                cout << \"    \" << values[i * columns + j];\n            }\n            cout << endl;\n        }\n    }\n};",
            1588853238.2993143,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "谢扬",
            "#include<iostream>\nusing std::cin;\nusing std::cout;\nusing std::endl;\nclass Matrix  \n{\n\tprivate:\n\t\tint rows,columns;\n\t\tdouble*values;\n\t\t//析构函数/复制构造函数/重载赋值运算府\n\tpublic:\n\tMatrix(int m_rows=0, int m_columns=0,double*m_values=nullptr);\n\tMatrix(const Matrix&copy);\n\t~Matrix(){delete[]values;}\n\tbool print();\n\tMatrix concatenateRows(const Matrix & matrix2) const;\n\t Matrix concatenateColumns(const Matrix & matrix2) const;\n\tMatrix getRow(int row);\n\tMatrix getColumn(int col);\n};\nMatrix Matrix::concatenateRows(const Matrix & matrix2) const\n{\n\tdouble*temp=new double[rows*columns*2];\n\tint i;\n\tfor(i=0;i<rows*columns;++i)temp[i]=values[i];\n\tfor(i=0;i<rows*columns;++i)(temp+rows*columns)[i]=matrix2.values[i];\n\treturn Matrix(rows*2,columns,temp);\n}\nMatrix Matrix::concatenateColumns(const Matrix & matrix2) const\n{\n\tdouble*temp=new double[rows*columns*2];\n\tint j;\n\tfor(int i=0;i<rows;++i)\n\t{\n\t\tfor( j=0;j<columns;++j)(temp+columns*2*i)[j]=(values+columns*i)[j];\n\t\tfor( j=0;j<columns;++j)(temp+columns*2*i+columns)[j]=(matrix2.values+columns*i)[j];\n\t}\n\treturn Matrix(rows,columns*2,temp);\n}\nMatrix::Matrix(int m_rows, int m_columns,double*m_values):rows(m_rows),columns(m_columns)\n{\n\tif(rows>0&&columns>0)\n\t{values=new double[rows*columns];\n\tfor(int i=0;i<rows*columns;++i)values[i]=m_values[i];\n\t }\n\telse values=nullptr;\n}\nMatrix::Matrix(const Matrix&copy):rows(copy.rows),columns(copy.columns)\n{\n\tvalues=new double[rows*columns];\n\tfor(int i=0;i<rows*columns;++i)values[i]=copy.values[i];\n}\nbool Matrix::print()\n{\n\tif(rows<0||columns<0)return false;\n\tfor(int row=0;row<rows*columns;++row)\n\t{\n\t\tcout<<values[row]<<\"    \";\n\t\tif(row%columns==columns-1)cout<<endl;\n\t}\n\treturn true;\n}\n\nMatrix Matrix::getRow(int row)\n{\n\tif(row<=0)return Matrix();\n\treturn Matrix(1,columns,values+columns*(row-1));\n}\nMatrix Matrix::getColumn(int col)\n{\n\tif(col<=0)return Matrix();\n\tdouble*temp=new double[rows];\n\tfor(int i=0;i<rows;++i)temp[i]=(values+columns*i)[col-1];\n\treturn Matrix(rows,1,temp);\n}",
            1588853820.034561,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "魏星月",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\t\tMatrix(int a, int b) {\n\t\t\trows = a;\n\t\t\tcolumns = b;\n\t\t}\n\t\tvoid print() {\n\t\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\t\tcout << \"0    \";\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t} \n\t\t}\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble *values;\n};",
            1588854004.5566301,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "魏星月",
            "#include <iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\t\tMatrix(int a, int b, double v[]) {\n\t\t\trows = a;\n\t\t\tcolumns = b;\n\t\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\t\tvalues[i] = v[i];\n\t\t\t}\n\t\t}\n\t\tvoid print() {\n\t\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\t\tcout << setw(5) << values[i * columns + j];\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t} \n\t\t}\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble values[1000];\n};",
            1588855114.0637388,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "潘文轩",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows, columns;\n    double * values;\npublic:\n    Matrix(int r, int c) {\n        this -> rows = r;\n        this -> columns = c;\n        this -> values = (double *) new double[rows * columns];\n        memset(this -> values, 0, sizeof(double) * r * c);\n    }\n    Matrix(int row, int columns, double * v) {\n        this -> rows = row;\n        this -> columns = columns;\n        this -> values = (double *) new double[rows * columns];\n        memcpy(this -> values, v, sizeof(double) * rows * columns);\n    }\n    Matrix(const Matrix & m) {\n        this -> rows = m.rows;\n        this -> columns = m.columns;\n        memcpy(this -> values, m.values, sizeof(double) * (rows) * (columns));\n    }\n    ~Matrix() {\n        delete[] values;\n    }\n    void print() {\n        for(int i = 0; i < rows; i ++) {\n            for(int j = 0; j < columns; j ++) {\n                cout << \"    \" << values[i * columns + j];\n            }\n            cout << endl;\n        }\n    }\n    Matrix getRow(int r) {\n        Matrix m(1, columns);\n        memcpy(m.values, this -> values + (r - 1) * (columns), sizeof(double) * (this -> columns));\n        return m;\n    }\n    Matrix getColumn(int c) {\n        Matrix m(rows, 1);\n        for(int i = 0; i < rows; i ++) {\n            m.values[i] = this -> values[columns * i + c - 1];\n        }\n        return m;\n    }\n};",
            1588855415.8874283,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "魏星月",
            "#include <iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\t\tMatrix(int a, int b, double v[]) {\n\t\t\trows = a;\n\t\t\tcolumns = b;\n\t\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\t\tvalues[i] = v[i];\n\t\t\t}\n\t\t}\n\t\tvoid print() {\n\t\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\t\tcout << values[i * columns + j] << \"    \";\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t} \n\t\t}\n\t\tMatrix(const Matrix & matrix2) {\n\t\t\tthis->rows = matrix2.rows;\n\t\t\tthis->columns = matrix2.columns;\n\t\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\t\tthis->values[i] = matrix2.values[i];\n\t\t\t}\n\t\t}\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble values[1000];\n};",
            1588855662.6392763,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "潘文轩",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nclass Matrix {\nprivate:\n    int rows, columns;\n    double * values;\npublic:\n    Matrix(int r, int c) {\n        this -> rows = r;\n        this -> columns = c;\n        this -> values = (double *) new double[rows * columns];\n        memset(this -> values, 0, sizeof(double) * r * c);\n    }\n    Matrix(int row, int columns, double * v) {\n        this -> rows = row;\n        this -> columns = columns;\n        this -> values = (double *) new double[rows * columns];\n        memcpy(this -> values, v, sizeof(double) * rows * columns);\n    }\n    Matrix(const Matrix & m) {\n        this -> rows = m.rows;\n        this -> columns = m.columns;\n        memcpy(this -> values, m.values, sizeof(double) * (rows) * (columns));\n    }\n    ~Matrix() {\n        delete[] values;\n    }\n    void print() {\n        for(int i = 0; i < rows; i ++) {\n            for(int j = 0; j < columns; j ++) {\n                cout << \"    \" << values[i * columns + j];\n            }\n            cout << endl;\n        }\n    }\n    Matrix concatenateRows(const Matrix & matrix2) const {\n        Matrix m(rows + matrix2.rows, columns);\n        m.values = (double *) new double[m.rows * m.columns];\n        memcpy(m.values, values, sizeof(double) * rows * columns);\n        memcpy(m.values + rows * columns, matrix2.values, sizeof(double) * matrix2.rows * matrix2.columns);\n        return m;\n    }\n    Matrix concatenateColumns(const Matrix & matrix2) const {\n        Matrix m(rows, columns + matrix2.columns);\n        m.values = (double *) new double[m.rows * m.columns];\n        for(int i = 0; i < rows; i ++) {\n            memcpy(m.values + i * m.columns, values + i * columns, sizeof(double) * columns);\n            memcpy(m.values + i * m.columns + columns,\n            matrix2.values + i * matrix2.columns, sizeof(double) * matrix2.columns);\n        }\n        return m;\n    }\n};",
            1588856272.9556487,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "裴江博",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\n\tprivate:\n\t\tint rows;\n \t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows,int columns){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tvalues = new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;++i){\n\t\t\t\tvalues[i] = 0;\n\t\t\t}\n\t\t}\n\t\t~Matrix(){\n\t\t\tdelete []values;\n\t\t\tthis->values = 0;\n\t\t\tthis->columns = 0;\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=0;i<rows*columns;++i){\n\t\t\t\tif( (i+1) % columns == 0) cout << values[i] << endl;\n\t\t\t\telse cout << values[i] << \"    \";\n\t\t\t}\n\t\t}\n};\n",
            1588856904.4012654,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "马淙升",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows,columns;\n\tdouble *values;\n\tpublic:\n\tMatrix(int row,int col,double *p) {\n\t\trows = row;\n\t\tcolumns = col;\n\t\tint elem = row*col;\n\t\tvalues = new double[elem];\n\t\tfor(int i = 0;i < elem;++ i) {\n\t\t\tvalues[i] = p[i];\n\t\t}\n\t}\n\tMatrix(const Matrix & matrix2) {\n\t\trows = matrix2.rows;\n\t\tcolumns = matrix2.columns;\n\t\tvalues = new double[rows*columns];\n\t\tfor(int i = 0;i < columns*rows;++ i) {\n\t\t\tvalues[i] = matrix2.values[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete [] values;\n\t}\n\tMatrix concatenateRows(const Matrix & matrix2) const {\n\t\tdouble temp[rows*columns+matrix2.rows*matrix2.columns];\n\t\tint i = 0;\n\t\tfor(;i < rows*columns;++ i) temp[i] = values[i];\n\t\tint elem = rows*columns+matrix2.rows*matrix2.columns;\n\t\tfor(;i < elem;++ i) temp[i] = matrix2.values[i - rows*columns];\n\t\tMatrix res(rows+matrix2.rows,columns,temp);\n\t\treturn res;\n\t}\n\tMatrix concatenateColumns(const Matrix & matrix2) const {\n\t\tdouble temp[rows*columns+matrix2.rows*matrix2.columns];\n\t\tint index = 0;\n\t\tfor(int i = 0;i < rows;++ i) {\n\t\t\tfor(int j = 0;j < columns;++ j) \n\t\t\t\ttemp[index++] = values[i*columns+j];\n\t\t\tfor(int j = 0;j < columns;++ j)\n\t\t\t\ttemp[index++] = matrix2.values[i*columns+j];\n\t\t}\n\t\tMatrix res(rows,columns+matrix2.columns,temp);\n\t\treturn res;\n\t}\n\tvoid print() {\n\t\tfor(int i = 0;i < rows;++ i) {\n\t\t\tfor(int j = 0;j < columns;++ j) {\n\t\t\t\tcout << \"    \" << values[i*columns+j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588856915.2815623,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "魏星月",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\t\tMatrix(int a, int b) {\n\t\t\trows = a;\n\t\t\tcolumns = b;\n\t\t}\n\t\tMatrix(int a, int b, double v[]) {\n\t\t\trows = a;\n\t\t\tcolumns = b;\n\t\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\t\tvalues[i] = v[i];\n\t\t\t}\n\t\t}\n\t\tvoid print() {\n\t\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\t\tcout << \"    \" << values[i * columns + j];\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t} \n\t\t}\n\t\tMatrix(const Matrix & matrix2) {\n\t\t\tthis->rows = matrix2.rows;\n\t\t\tthis->columns = matrix2.columns;\n\t\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\t\tthis->values[i] = matrix2.values[i];\n\t\t\t}\n\t\t}\n\t\tMatrix getRow(int row) {\n\t\t\tMatrix temp(1, this->columns);\n\t\t\tfor (int i = 0; i < this->columns; ++ i) {\n\t\t\t\ttemp.values[i] = this->values[(row - 1) * this->columns + i];\n\t\t\t}\n\t\t\treturn temp;\n\t\t}\n\t\tMatrix getColumn(int column) {\n\t\t\tMatrix temp(this->rows, 1);\n\t\t\tfor (int i = 0; i < this->rows; ++ i) {\n\t\t\t\ttemp.values[i] = this->values[i * this->columns + column - 1];\n\t\t\t}\n\t\t\treturn temp;\n\t\t}\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble values[1000];\n};",
            1588858181.4133978,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "裴江博",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\n\tprivate:\n\t\tint rows;\n \t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows,int columns,double values[]){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tthis->values = new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;++i){\n\t\t\t\tthis->values[i] = values[i];\n\t\t\t}\n\t\t}\n\t\t~Matrix(){\n\t\t\tdelete []values;\n\t\t\tthis->values = 0;\n\t\t\tthis->columns = 0;\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=0;i<rows*columns;++i){\n\t\t\t\tif( (i+1) % columns == 0) cout << setw(5) << values[i] << endl;\n\t\t\t\telse cout << setw(5) << values[i];\n\t\t\t}\n\t\t}\n};\n",
            1588859592.783455,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王浩歌",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows, int columns){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tdouble * p = NULL;\n\t\t\tp = new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;i++){\n\t\t\t\tp[i]=0;\n\t\t\t}\n\t\t\tthis->values = p;\n\t\t}\n\t\t~Matrix(){\n\t\t\tdelete [] this->values;\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=1;i<rows*columns+1;i++){\n\t\t\t\tif(i % columns == 0){\n\t\t\t\t\tcout << \"    \"<< this->values[i-1] << endl;\n\t\t\t\t}\n\t\t\t\telse cout<<\"    \" << this->values[i-1] ;\n\t\t\t}\n\t\t}\n};",
            1588862940.9331455,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "莫振威",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble* values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tvalues[i * columns + j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tcout << \"    \" <<values[i * columns + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588859187.7858977,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "莫振威",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble* values;\npublic:\n\tMatrix(int rows, int columns, double values[]){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tthis->values[i * columns + j] = values[i * columns + j];\n\t\t\t}\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tcout << setw(5)<< values[i * columns + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588859757.9427006,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "莫振威",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble* values;\npublic:\n\tMatrix(int rows, int columns, double values[]){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tthis->values[i * columns + j] = values[i * columns + j];\n\t\t\t}\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tMatrix(const Matrix & m){\n\t\tthis->rows = m.rows;\n\t\tthis->columns = m.columns;\n\t\tthis->values = new double[m.rows * m.columns];\n\t\tfor(int i = 0; i < m.rows; i++){\n\t\t\tfor(int j = 0; j < m.columns; j++){\n\t\t\t\tthis->values[i * m.columns + j] = m.values[i * m.columns + j];\n\t\t\t}\n\t\t}\n\t}\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tcout << \"    \"<< values[i * columns + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588861373.3549168,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "裴江博",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\n\tprivate:\n\t\tint rows;\n \t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows,int columns,double values[]){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tthis->values = new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;++i){\n\t\t\t\tthis->values[i] = values[i];\n\t\t\t}\n\t\t}\n\t\t~Matrix(){\n\t\t\tdelete []values;\n\t\t\tthis->values = 0;\n\t\t\tthis->columns = 0;\n\t\t}\n\t\tMatrix(const Matrix & matrix2){\n\t\t\tthis->rows = matrix2.rows;\n\t\t\tthis->columns = matrix2.columns;\n\t\t\tthis->values = new double[this->rows*this->columns];\n\t\t\tfor(int i=0;i<rows*columns;++i){\n\t\t\t\tthis->values[i] = matrix2.values[i];\n\t\t\t}\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=0;i<rows*columns;++i){\n\t\t\t\tif( (i+1) % columns == 0) cout << \"    \" << values[i] << endl;\n\t\t\t\telse cout << \"    \" << values[i];\n\t\t\t}\n\t\t}\n};\n",
            1588859942.844894,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "覃浩南",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nstruct Matrix{\nprivate:\n    int rows;\n    int columns;\n    double **values;\npublic:\n    Matrix(int r, int c, double values[]) :rows(r), columns(c)\n    {\n        this->values = new double*[rows]();\n        for(int i = 0; i != rows; ++i){\n            this->values[i] = new double[columns]();\n        }\n        \n        int k = 0;\n        for(int i = 0; i != rows; ++i){\n            for(int j = 0; j != columns; ++j){\n                this->values[i][j] = values[k++];\n            }\n        }\n    }\n    \n    Matrix(const Matrix & matrix2){\n        this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        this->values = new double*[rows]();\n        for(int i = 0; i != rows; ++i){\n            this->values[i] = new double[columns]();\n        }\n        for(int i = 0; i != rows; ++i){\n            for(int j = 0; j != columns; ++j){\n                this->values[i][j] = matrix2.values[i][j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for(int i = 0; i != rows; ++i){\n            delete [] values[i];\n        }\n        delete values;\n    }\n\n    void print();\n    Matrix getRow(int row);\n    Matrix getColumn(int column);\n};\n\nvoid Matrix::print(){\n    for(int i = 0; i != rows; ++i){\n        for(int j = 0; j != columns; ++j){\n            cout << \"    \" << values[i][j];\n        }\n        cout << endl;\n    }\n}\n\nMatrix Matrix::getRow(int row){\n    Matrix tmp(1, this->columns, this->values[row - 1]);\n    return tmp;\n}\n\nMatrix Matrix::getColumn(int column){\n    \n    double d[20];\n    for(int i = 0; i != rows; ++i){\n        d[i] = values[i][column - 1];\n    }\n\n    Matrix tmp(this->rows, 1, d);\n    return tmp;\n}\n",
            1588860297.992582,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "魏星月",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\n\tpublic:\n\t\tMatrix(int a, int b) {\n\t\t\trows = a;\n\t\t\tcolumns = b;\n\t\t}\n\t\tMatrix(int a, int b, double v[]) {\n\t\t\trows = a;\n\t\t\tcolumns = b;\n\t\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\t\tvalues[i] = v[i];\n\t\t\t}\n\t\t}\n\t\tvoid print() {\n\t\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\t\tcout << \"    \" << values[i * columns + j];\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t} \n\t\t}\n\t\tMatrix(const Matrix & matrix2) {\n\t\t\tthis->rows = matrix2.rows;\n\t\t\tthis->columns = matrix2.columns;\n\t\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\t\tthis->values[i] = matrix2.values[i];\n\t\t\t}\n\t\t}\n\t\tMatrix concatenateRows(const Matrix & matrix2);\n\t\tMatrix concatenateColumns(const Matrix & matrix2);\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble values[1000];\n};\n\nMatrix Matrix::concatenateRows(const Matrix & matrix2) {\n\tMatrix temp(this->rows + matrix2.rows, this->columns);\n\tfor (int i = 0; i < this->rows * this->columns; ++ i) {\n\t\ttemp.values[i] = this->values[i];\n\t}\n\tfor (int i = 0; i < matrix2.rows * matrix2.columns; ++ i) {\n\t\ttemp.values[this->rows * this->columns + i] = matrix2.values[i];\n\t} \n\treturn temp;\n}\n\nMatrix Matrix::concatenateColumns(const Matrix & matrix2) {\n\tMatrix temp(this->rows, this->columns + matrix2.columns);\n\tfor (int i = 0; i < this->rows; ++ i) {\n\t\tfor (int j = 0; j < this->columns; ++ j) {\n\t\t\ttemp.values[i * (this->columns + matrix2.columns) + j] = this->values[i * this->columns + j];\n\t\t} \n\t\tfor (int j = 0; j < matrix2.columns; ++ j) {\n\t\t\ttemp.values[i * (this->columns + matrix2.columns) + this->columns + j] = matrix2.values[i * this->columns + j];\n\t\t} \n\t}\n\treturn temp;\n}",
            1588861603.6189299,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "test",
            "\n#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix \n{\npublic:\n\tint r;\n\tint w;\n\tdouble * v;\n\tMatrix(int r, int w, double v[]) {\n\t\tthis->r = r;\n\t\tthis->w = w;\n\t\tthis->v = v;\n\t}\n\tvoid print() {\n\t\tfor (int i = 0; i < this->r; ++ i) {\n\t\t\tfor (int j = 0; j < this->w; ++ j) {\n\t\t\t\tcout << setw(5) << this->v[i*this->w + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};\n",
            1588861987.4466214,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "谭鸿鑫",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int x, int y){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = 0;\n        }\n\t}\n    ~Matrix(){\n        delete [] values;\n    }\n    void print(){\n        int i;\n        for(i = 0;i < rows*columns;i ++){\n            cout << values[i];\n            if((i+1) % columns == 0){\n                cout << endl;\n            }\n            else{\n                cout << \"    \";\n            }\n        }\n    }\n};",
            1588861626.4109752,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "谭鸿鑫",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int x, int y){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = 0;\n        }\n\t}Matrix(int x, int y, double n[]){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = n[i];\n        }\n\t}\n    ~Matrix(){\n        delete [] values;\n    }\n    void print(){\n        int i;\n        for(i = 0;i < rows*columns;i ++){\n            cout.width(5);\n            cout << values[i];\n            if((i+1) % columns == 0){\n                cout << endl;\n            }\n        }\n    }\n};",
            1588861980.561752,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "王浩歌",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows, int columns,double values[]){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tdouble * p = 0;\n\t\t\tp = new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;i++){\n\t\t\t\tp[i]= values[i];\n\t\t\t}\n\t\t\tthis->values=p;\n\t\t}\n\t\t~Matrix(){\n\t\t\tdelete [] this->values;\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=1;i<rows*columns+1;i++){\n\t\t\t\tif(i % columns == 0){\n\t\t\t\t\tcout << setw(5)<< this->values[i-1] << endl;\n\t\t\t\t}\n\t\t\t\telse cout<< setw(5) << this->values[i-1] ;\n\t\t\t}\n\t\t}\n};\n",
            1588863323.795984,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "谭鸿鑫",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int x, int y){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = 0;\n        }\n\t}\n    Matrix(int x, int y, double n[]){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = n[i];\n        }\n\t}\n    Matrix(Matrix & x){\n        this->rows = x.rows;\n        this->columns = x.columns;\n        values = (double*)new double[x.rows * x.columns];\n        int i;\n        for(i = 0;i < x.rows * x.columns;i ++){\n            values[i] = x.values[i];\n        }\n    }\n    ~Matrix(){\n        delete [] values;\n    }\n    void print(){\n        int i;\n        for(i = 0;i < rows*columns;i ++){\n            cout << \"    \";\n            cout << values[i];\n            if((i+1) % columns == 0){\n                cout << endl;\n            }\n        }\n    }\n};",
            1588862340.0954592,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "谭鸿鑫",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int x, int y){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = 0;\n        }\n\t}\n    Matrix(int x, int y, double n[]){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = n[i];\n        }\n\t}\n    Matrix(Matrix & x){\n        this->rows = x.rows;\n        this->columns = x.columns;\n        values = (double*)new double[x.rows * x.columns];\n        int i;\n        for(i = 0;i < x.rows * x.columns;i ++){\n            values[i] = x.values[i];\n        }\n    }\n    ~Matrix(){\n        delete [] values;\n    }\n    void print(){\n        int i;\n        for(i = 0;i < rows*columns;i ++){\n            cout << \"    \";\n            cout << values[i];\n            if((i+1) % columns == 0){\n                cout << endl;\n            }\n        }\n    }\n    Matrix getRow(int x){\n        Matrix res(1, columns);\n        int i;\n        for(i = 0;i < columns;i ++){\n            res.values[i] = this->values[i + columns*(x-1)];\n        }\n        return res;\n    }\n    Matrix getColumn(int x){\n        Matrix res(rows, 1);\n        int i;\n        for(i = 0;i < rows;i ++){\n            res.values[i] = this->values[i * rows + x - 1];\n        }\n        return res;\n    }\n};",
            1588862948.3557708,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "莫振威",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble* values;\npublic:\n\tMatrix(int rows, int columns){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tthis->values[i * columns + j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix(int rows, int columns, double values[]){\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tthis->values = new double[rows * columns];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tthis->values[i * columns + j] = values[i * columns + j];\n\t\t\t}\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tMatrix(const Matrix & m){\n\t\tthis->rows = m.rows;\n\t\tthis->columns = m.columns;\n\t\tthis->values = new double[m.rows * m.columns];\n\t\tfor(int i = 0; i < m.rows; i++){\n\t\t\tfor(int j = 0; j < m.columns; j++){\n\t\t\t\tthis->values[i * m.columns + j] = m.values[i * m.columns + j];\n\t\t\t}\n\t\t}\n\t}\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tcout << \"    \" << values[i * columns + j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n\tMatrix getRow(int row){\n\t\tMatrix m1(1, this->columns);\n\t\tfor(int i = 0; i < this->columns; i++){\n\t\t\tm1.values[i] = this->values[i + (row-1) * this->columns];\n\t\t}\n\t\treturn m1;\n\t}\n\tMatrix getColumn(int column){\n\t\tMatrix m2(this->rows, 1);\n\t\tfor(int j = 0; j < this->rows; j++){\n\t\t\tm2.values[j] = this->values[j * this->columns + column - 1];\n\t\t}\n\t\treturn m2;\n\t}\n};",
            1588863390.7233465,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "王浩歌",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int rows, int columns,double values[]){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tdouble * p = 0;\n\t\t\tp = new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;i++){\n\t\t\t\tp[i]= values[i];\n\t\t\t}\n\t\t\tthis->values=p;\n\t\t}\n\t\t~Matrix(){\n\t\t\tdelete [] this->values;\n\t\t}\n\t    Matrix(const Matrix & matrix2){\n\t\t\tthis->rows = matrix2.rows;\n\t\t\tthis->columns = matrix2.columns;\n\t\t\tdouble * p = 0;\n\t\t\tp = new double[matrix2.rows*matrix2.columns];\n\t\t\tfor(int i=0;i<matrix2.rows*matrix2.columns;i++){\n\t\t\t\tp[i]= matrix2.values[i];\n\t\t\t}\n\t\t\tthis->values=p;\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=1;i<rows*columns+1;i++){\n\t\t\t\tif(i % columns == 0){\n\t\t\t\t\tcout <<\"    \"<< this->values[i-1] << endl;\n\t\t\t\t}\n\t\t\t\telse cout<<\"    \"<< this->values[i-1] ;\n\t\t\t}\n\t\t}\n};",
            1588863985.7795436,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "谭鸿鑫",
            "#include<iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int x, int y){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = 0;\n        }\n\t}\n    Matrix(int x, int y, double n[]){\n\t\trows = x;\n\t\tcolumns = y;\n\t\tvalues = (double*)new double[x * y];\n        int i;\n        for(i = 0;i < x*y;i ++){\n            values[i] = n[i];\n        }\n\t}\n    Matrix(const Matrix & x){\n        this->rows = x.rows;\n        this->columns = x.columns;\n        values = (double*)new double[x.rows * x.columns];\n        int i;\n        for(i = 0;i < x.rows * x.columns;i ++){\n            values[i] = x.values[i];\n        }\n    }\n    ~Matrix(){\n        delete [] values;\n    }\n    void print(){\n        int i;\n        for(i = 0;i < rows*columns;i ++){\n            cout << \"    \";\n            cout << values[i];\n            if((i+1) % columns == 0){\n                cout << endl;\n            }\n        }\n    }\n    Matrix getRow(int x){\n        Matrix res(1, columns);\n        int i;\n        for(i = 0;i < columns;i ++){\n            res.values[i] = this->values[i + columns*(x-1)];\n        }\n        return res;\n    }\n    Matrix getColumn(int x){\n        Matrix res(rows, 1);\n        int i;\n        for(i = 0;i < rows;i ++){\n            res.values[i] = this->values[i * rows + x - 1];\n        }\n        return res;\n    }\n    Matrix concatenateRows(const Matrix & x) const{\n        Matrix res(rows+x.rows, columns);\n        int i;\n        for(i = 0;i < rows*columns;i ++){\n            res.values[i] = this->values[i];\n        }\n        for(i = 0;i < x.rows*x.columns;i ++){\n            res.values[i + rows*columns] = x.values[i];\n        }\n\t\t  return res;\n    }\n    Matrix concatenateColumns(const Matrix & x) const{\n        Matrix res(rows, columns + x.columns);\n        int i,j;\n        for(i = 0;i < rows;i ++){\n            for(j = 0;j < columns;j ++){\n                res.values[i*res.columns + j] = this->values[i*this->columns + j];\n            }\n        }\n        for(i = 0;i < rows;i ++){\n            for(j = 0;j < columns;j ++){\n                res.values[i*res.columns + j + this->columns] = x.values[i * x.columns + j];\n            }\n        }\n\t\t  return res;\n    }\n};",
            1588864747.788779,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "王浩歌",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n        Matrix(int rows, int columns){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tdouble * p = NULL;\n\t\t\tp = new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;i++){\n\t\t\t\tp[i]=0;\n\t\t\t}\n\t\t\tthis->values = p;\n\t\t}\n\t\tMatrix(int rows, int columns,double values[]){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tdouble * p = 0;\n\t\t\tp = new double[rows*columns];\n\t\t\tfor(int i=0;i<rows*columns;i++){\n\t\t\t\tp[i]= values[i];\n\t\t\t}\n\t\t\tthis->values=p;\n\t\t}\n\t\t~Matrix(){\n\t\t\tdelete [] this->values;\n\t\t}\n\t    Matrix getRow(int row){\t\t\t\n\t\t\tdouble p[this->columns];\n\t\t\tfor(int i=0;i<this->columns;i++){\n\t\t\t\tp[i]= this->values[this->columns*(row-1)+i];\n\t\t\t}\n\t\t\treturn Matrix(1,this->columns,p);\n\t\t}\n\t\tMatrix getColumn(int column){\n\t\t\tdouble p[this->rows];\n\t\t\tfor(int i=0;i<this->rows;i++){\n\t\t\t\tp[i]= this->values[column-1+this->columns*i];\n\t\t\t}\n\t\t\treturn Matrix(this->rows,1,p);\n\t\t}\n\t\tvoid print(){\n\t\t\tfor(int i=1;i<rows*columns+1;i++){\n\t\t\t\tif(i % columns == 0){\n\t\t\t\t\tcout <<\"    \"<< this->values[i-1] << endl;\n\t\t\t\t}\n\t\t\t\telse cout<<\"    \"<< this->values[i-1] ;\n\t\t\t}\n\t\t}\n};",
            1588902490.6007013,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "邵震东",
            "#include <iostream>\n#include <iomanip>\n\nclass Matrix {\nprivate:\n    int rows;\n    int columns;\n    double * values;\npublic:\n    Matrix() = default;\n    Matrix(int row, int column)\n    {\n        rows = row;\n        columns = column;\n        this->values = new double [row * column];\n        for (int i = 0; i < row * column; ++i) {\n            *(values + i) = 0;\n        }\n    }\n    Matrix(int row, int column, double * value)\n    {\n        rows = row;\n        columns = column;\n        this->values = new double [row * column];\n        for (int i = 0; i < row * column; ++i) {\n            *(values + i) = *(value + i);\n        }\n    }\n    ~Matrix()\n    {\n        delete[] values;\n    }\n    void print() const\n    {\n        for (int i = 0; i < rows * columns; ) {\n            for (int j = 0; j < columns; ++j) {\n                //std::cout << std::setw(5);\n                std::cout << \"    \" << this->values[i];\n                ++i;\n            }\n            std::cout << std::endl;\n        }\n    }\n    Matrix concatenateColumns(const Matrix &mtr) const\n    {\n        Matrix print;\n        print.columns = this->columns + mtr.columns;\n        print.rows = this->rows;\n        double *elem = new double [(this->columns + mtr.columns) * this->rows];\n        for (int i = 0, i1 = 0, i2 = 0; i < ((this->columns + mtr.columns) * this->rows); ) {\n            for (int j = 0; j < this->columns; ++j) {\n                elem[i] = this->values[i1];\n                ++i;\n                ++i1;\n            }\n            for (int j = 0; j < mtr.columns; ++j) {\n                elem[i] = mtr.values[i2];\n                ++i;\n                ++i2;\n            }\n        }\n        print.values = elem;\n        return print;\n    }\n    Matrix concatenateRows(const Matrix &mtr) const\n    {\n        Matrix print;\n        int i;\n        print.columns = this->columns;\n        print.rows = this->rows + mtr.rows;\n        double *elem = new double [this->columns * (this->rows + mtr.rows)];\n        for (i = 0; i < (this->columns * this->rows); ++i) {\n            elem[i] = this->values[i];\n        }\n        for (int j = 0; j < (this->columns * mtr.rows); ++j) {\n            elem[i + j] = mtr.values[j];\n        }\n        print.values = elem;\n        return print;\n    }\n};\n\nusing namespace std;",
            1588866926.2868676,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "青悦",
            "#include <iostream>\n\nusing namespace std;\nclass Matrix\n{\nprivate:\n\tint rows, columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows_, int columns_):rows(rows_),columns(columns_){\n\t\tvalues = new double[rows*columns];\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tvalues[i] = 0;\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tcout << \"    \" << values[i*rows+columns];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588897724.124786,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "青悦",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\nprivate:\n\tint rows, columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows_, int columns_, double values[]):rows(rows_),columns(columns_){\n\t\tthis->values = new double[rows*columns];//\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tthis->values[i] = values[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\t//占五个空格\n\t\t\t\tcout << setw(5) << values[i*columns+j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588899473.666652,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "覃浩南",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nstruct Matrix{\nprivate:\n    int rows;\n    int columns;\n    double **values;\npublic:\n    Matrix(int r, int c, double values[]) :rows(r), columns(c)\n    {\n        this->values = new double*[rows]();\n        for(int i = 0; i != rows; ++i){\n            this->values[i] = new double[columns]();\n        }\n        \n        int k = 0;\n        for(int i = 0; i != rows; ++i){\n            for(int j = 0; j != columns; ++j){\n                this->values[i][j] = values[k++];\n            }\n        }\n    }\n    \n    Matrix(const Matrix & matrix2){\n        this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        this->values = new double*[rows]();\n        for(int i = 0; i != rows; ++i){\n            this->values[i] = new double[columns]();\n        }\n        for(int i = 0; i != rows; ++i){\n            for(int j = 0; j != columns; ++j){\n                this->values[i][j] = matrix2.values[i][j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for(int i = 0; i != rows; ++i){\n            delete [] values[i];\n        }\n        delete values;\n    }\n\n    void print();\n    Matrix getRow(int row);\n    Matrix getColumn(int column);\n    Matrix concatenateRows(const Matrix & matrix2) const;\n    Matrix concatenateColumns(const Matrix & matrix2) const;\n};\n\nvoid Matrix::print(){\n    for(int i = 0; i != rows; ++i){\n        for(int j = 0; j != columns; ++j){\n            cout << \"    \" << values[i][j];\n        }\n        cout << endl;\n    }\n}\n\nMatrix Matrix::getRow(int row){\n    Matrix tmp(1, this->columns, this->values[row - 1]);\n    return tmp;\n}\n\nMatrix Matrix::getColumn(int column){    \n    double d[20];\n    for(int i = 0; i != rows; ++i){\n        d[i] = values[i][column - 1];\n    }\n\n    Matrix tmp(this->rows, 1, d);\n    return tmp;\n}\n\nMatrix Matrix::concatenateRows(const Matrix & matrix2) const{\n    double st[100];    \n    int k = 0;\n    for(int i = 0; i != this->rows + matrix2.rows; ++i){\n        for(int j = 0; j != this->columns; ++j){\n            if(i < this->rows) st[k++] = this->values[i][j];\n            else st[k++] = matrix2.values[i - this->rows][j];\n        }\n    }\n    Matrix tmp(this->rows + matrix2.rows, this->columns, st);\n    return tmp;\n}\n\nMatrix Matrix::concatenateColumns(const Matrix & matrix2) const{\n    double st[100];    \n    int k = 0;\n    for(int i = 0; i != this->rows; ++i){\n        for(int j = 0; j != this->columns + matrix2.columns; ++j){\n            if(j < this->columns) st[k++] = this->values[i][j];\n            else st[k++] = matrix2.values[i][j - this->columns];\n        }\n    }\n    Matrix tmp(this->rows, this->columns + matrix2.columns, st);\n    return tmp;\n}",
            1588899251.5230098,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "青悦",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\nprivate:\n\tint rows, columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows_, int columns_, double values[]):rows(rows_),columns(columns_){\n\t\tthis->values = new double[rows*columns];\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tthis->values[i] = values[i];\n\t\t}\n\t}\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows = matrix2.rows;\n\t\tthis->columns = matrix2.columns;\n\t\tthis->values = new double[rows*columns];\n\t\tfor (int i = 0; i < rows*columns; ++ i) {\n\t\t\tvalues[i] = matrix2.values[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tcout << \"    \" << values[i*columns+j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n};",
            1588899863.8662806,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "青悦",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\nprivate:\n\tint rows, columns;\n\tdouble *values;\npublic:\n\tMatrix(int rows_, int columns_, double values[]):rows(rows_),columns(columns_){\n\t\tthis->values = new double[rows*columns];\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tthis->values[i] = values[i];\n\t\t}\n\t}\n\tMatrix(int rows_, int columns_):rows(rows_),columns(columns_){\n\t\tvalues = new double[rows*columns];\n\t\tfor(int i = 0; i < rows*columns; i++){\n\t\t\tvalues[i] = 0;\n\t\t}\n\t}\t\n\tMatrix(const Matrix & matrix2){\n\t\tthis->rows = matrix2.rows;\n\t\tthis->columns = matrix2.columns;\n\t\tthis->values = new double[rows*columns];\n\t\tfor (int i = 0; i < rows*columns; ++ i) {\n\t\t\tvalues[i] = matrix2.values[i];\n\t\t}\n\t}\n\t~Matrix(){\n\t\tdelete [] values;\n\t}\n\tvoid print(){\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tfor(int j = 0; j < columns; j++){\n\t\t\t\tcout << \"    \" << values[i*columns+j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n\tMatrix getRow(int row){\n\t\tMatrix m(1, this->columns);\n\t\tm.values = new double[columns];\n\t\tfor(int i = 0; i < columns; i++){\n\t\t\tm.values[i] = this->values[(row-1)*columns+i];\n\t\t}\n\t\treturn m;\n\t}\n\tMatrix getColumn(int column){\n\t\tMatrix m(this->rows, 1);\n\t\tm.values = new double[rows];\n\t\tfor(int i = 0; i < rows; i++){\n\t\t\tm.values[i] = this->values[i*columns+column-1];\n\t\t}\n\t\treturn m;\n\t}\n};",
            1588900761.4202535,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "王著",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\n\tpublic:\n\tMatrix(){\n\t\trows=0;\n\t\tcolumns=0;\n\t}\n\tMatrix(int row,int column,double *value){\n\t\tint i;\n\t\trows=row;\n\t\tcolumns=column;\n\t\tthis->values=new double[row*column];\n\t\tfor(i=0;i<row*column;i++){\n\t\t\tthis->values[i]=value[i];\n\t\t}\n\t}\n\tMatrix(const Matrix &s2){\n\t\tthis->rows=s2.rows;\n\t\tthis->columns=s2.columns;\n\t\tthis->values=new double[this->rows*this->columns];\n\t\tint i;\n\t\tfor(i=0;i<this->rows*this->columns;i++){\n\t\t\tthis->values[i]=s2.values[i];\n\t\t}\n\t\t\n\t}\n\t~Matrix(){\n\t\tdelete values;\n\t}\n\tvoid print(){\n\t\tint i;\n\t\tint cnt=0;\n\t\tfor(i=0;i<rows*columns;i++){\n\t\t\tprintf(\"    %0.0f\",values[i]);\n\t\t\tcnt++;\n\t\t\tif(cnt%columns==0) {\n\t\t\t\tprintf(\"\\n\");\n\t\t\t}\n\t\t}\n\t}\n\tMatrix concatenateRows(const Matrix & matrix2){\n\tMatrix ret;\n\t\tret.values=new double[this->rows*this->columns+matrix2.rows*matrix2.columns];  \n\t\t\tret.rows=this->rows+matrix2.rows;\n\t\tret.columns=this->columns;\n\t\tint i;\n\t\tfor(i=0;i<this->rows*this->columns;i++){\n\t\t\tret.values[i]=this->values[i];\n\t\t}\n\t\tfor(i=this->rows*this->columns;i<this->rows*this->columns+matrix2.rows*matrix2.columns;i++){\n\t\t\tret.values[i]=matrix2.values[i-this->rows*this->columns];\n\t\t}\n\t\treturn ret;\n\t}\n\tMatrix concatenateColumns(const Matrix & matrix2){\n\t\tMatrix ret;\n\t\tret.values=new double[this->rows*this->columns+matrix2.rows*matrix2.columns];\n\t\tret.rows=this->rows;\n\t\tret.columns=this->columns+matrix2.columns;\n\t\tint i;\n\t\tint j;\n\t\tfor(i=0;i<this->rows;i++){\n\t\t\tfor(j=i*ret.columns;j<(i+1)*ret.columns;j++){\n\t\t\t\tif(j-i*ret.columns<this->columns){\n\t\t\t\t\tret.values[j]=this->values[j-matrix2.columns*i];\n\t\t\t\t}\n\t\t\t\telse ret.values[j]=matrix2.values[j-this->columns*(i+1)];\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n};",
            1588901808.2173831,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "test",
            "#include <cstring>\n#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * data;\n\t\n\tvoid __copy(int rows, int columns, const double * data=NULL) {\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\tint num_data = rows * columns;\n\t\tthis->data = new double[num_data];\n\t\tif (data == NULL)\n\t\t\tmemset(this->data, 0, num_data * sizeof(double));\n\t\telse\n\t\t\tmemcpy(this->data, data, num_data * sizeof(double));\n\t}\n\t\n\tdouble & __get(int row, int col) const {\n\t\tint index = row * this->columns + col;\n\t\treturn this->data[index];\n\t}\n\t\npublic:\n\tMatrix(int rows, int columns, const double * data=NULL) {\n\t\tthis->__copy(rows, columns, data);\n\t}\n\t\n\t~Matrix() {\n\t\tdelete [] this->data;\n\t}\n\t\n\tMatrix(const Matrix & m) {\n\t\tthis->__copy(m.rows, m.columns, m.data);\n\t}\n\t\n\tMatrix & operator = (const Matrix & m) {\n\t\tdelete [] this->data;\n\t\tthis->__copy(m.rows, m.columns, m.data);\n\t}\n\t\n\tvoid print(ostream & out=cout, const char * spaces = \"    \") const {\n\t\tfor (int i = 0; i < this->rows; ++ i) {\n\t\t\tfor (int j = 0; j < this->columns; ++ j) {\n\t\t\t\tout << spaces << this->__get(i, j);\n\t\t\t}\n\t\t\tout << endl;\n\t\t}\n\t}\n\t\n\tMatrix concatenateRows(const Matrix & matrix2) const {\n\t\tMatrix res(this->rows + matrix2.rows, this->columns);\n\t\t/*\n\t\tfor (int i = 0; i < this->rows; ++ i) \n\t\t\tfor (int j = 0; j < this->columns; ++ j)\n\t\t\t\tres.__get(i, j) = this->__get(i, j);\n\t\tfor (int i = 0; i < matrix2.rows; ++ i) \n\t\t\tfor (int j = 0; j < matrix2.columns; ++ j)\n\t\t\t\tres.__get(this->rows + i, j) = matrix2.__get(i, j);\n\t\t*/\n\t\tmemcpy(res.data, this->data, this->rows * this->columns * sizeof(double));\n\t\tmemcpy(res.data + this->rows * this->columns, matrix2.data, matrix2.rows * matrix2.columns * sizeof(double));\t\t\n\t\treturn res;\n\t}\n\t\n\tMatrix concatenateColumns(const Matrix & matrix2) const {\n\t\tMatrix res(this->rows, this->columns + matrix2.columns);\n\t\tfor (int i = 0; i < this->rows; ++ i) \n\t\t\tfor (int j = 0; j < this->columns; ++ j)\n\t\t\t\tres.__get(i, j) = this->__get(i, j);\n\t\tfor (int i = 0; i < matrix2.rows; ++ i) \n\t\t\tfor (int j = 0; j < matrix2.columns; ++ j)\n\t\t\t\tres.__get(i, this->columns + j) = matrix2.__get(i, j);\n\t\treturn res;\n\t}\n\t\n};",
            1588902760.8415635,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "吴浩岚",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble values[100][100];\n\tpublic:\n\t\tMatrix(int rows, int columns){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\t\tvalues[i][j] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvoid print(){\n\t\t\tfor (int i = 0; i < this->rows; ++ i) {\n\t\t\t\tfor (int j = 0; j < this->columns; ++ j) {\n\t\t\t\t\tprintf(\"    %d\",(int)values[i][j] );\n\t\t\t\t}\n\t\t\t\tif(i!=this->rows-1)putchar('\\n');\n\t\t\t}\n\t\t}\n};",
            1588908295.4803033,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "马超",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tif(x3==-1&&x2==-1) return data[x0*4+x1];\n\tif(x3==-1&&x2!=-1) return data[x0*20+x1*4+x2];\n\tif(x3!=-1) return data[x0*120+x1*20+x2*4+x3];\n}",
            1588909189.2663655,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "test",
            "",
            1588905152.726975,
            0,
            "main.cpp: In member function ‘double& Tensor::get(int, int, int, int)’:\nmain.cpp:68:78: error: ‘Tensor_get’ was not declared in this scope\n   return Tensor_get(this->dimensions, this->sizes, this->data, x0, x1, x2, x3);\n                                                                              ^\n"
        ],
        [
            "2020/05/08",
            "王子豪",
            " double & Tensor_get(int dimensions, const int sizes[],  double data[], int x0, int x1, int x2, int x3){\n\tif(dimensions==1){\n\t\t\n\t\treturn data[x0];\n}else if(dimensions==2){\n\t\tint num=sizes[0]*x1+x0;\n\t\treturn data[num];\n\t}else if(dimensions==3){\n\t\tint num=sizes[0]*x1+sizes[0]*sizes[1]*x2+x0;\n\t\treturn data[num];\n\t}else{\n\t\tint num=sizes[0]*x1+sizes[0]*sizes[1]*x2+sizes[0]*sizes[1]*sizes[2]*x3+x0;\n\t\treturn data[num];\n\t}\n}",
            1588907486.7201242,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "谭鸿鑫",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tint res;\n\tif(dimensions == 1) res = x0;\n\telse if(dimensions == 2) res = x0 * sizes[1] + x1;\n\telse if(dimensions == 3) res = x0 * sizes[1]*sizes[2] + x1 * sizes[2] + x2;\n\telse if(dimensions == 4) res = x0 * sizes[1]*sizes[2]*sizes[3] + x1 * sizes[2]*sizes[3] + x2 * sizes[3] + x3;\n\treturn data[res];\n}",
            1588904801.1148174,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "潘文轩",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3) {\n\tint pos = x0;\n\tif(dimensions == 2) pos = x1 + x0 * sizes[1];\n\telse if(dimensions == 3) pos = x2 + x1 * sizes[1] + x0 * sizes[1] * sizes[2];\n\telse if(dimensions == 4) pos = x3 + x2 * sizes[1] + x1 * sizes[1] * sizes[2] + x0 * sizes[1] * sizes[2] * sizes[3];\n\treturn data[pos];\n}",
            1588906451.2307854,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "潘小健",
            "\ndouble & Tensor_get(int dimensions, int* sizes, double* data, int x0, int x1, int x2, int x3){\n\tint position=0;\n\tposition+=x0;\n\tif(x1!=-1)\n\t\tposition+=x1*sizes[0];\n\tif(x2!=-1)\n\t\tposition+=x2*sizes[0]*sizes[1];\n\tif(x3!=-1)\n\t\tposition+=x3*sizes[0]*sizes[1]*sizes[2];\n\treturn data[position];\n}",
            1588905492.830254,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "周琨曜",
            "double & Tensor_get(int dimensions, const int sizes[], const double data[], int x0, int x1, int x2, int x3){\n\t\n} ",
            1588904505.3448215,
            0,
            "Segmentation fault (core dumped)\n"
        ],
        [
            "2020/05/08",
            "马浩宇",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3) {\n\tif(dimensions == 1) {\n\t\treturn data[x0];\n\t}\n\tif(dimensions == 2) {\n\t\treturn data[x0*sizes[1]+x1];\n\t}\n\tif(dimensions == 3) {\n\t\treturn data[x0*sizes[1]*sizes[2] + x1*sizes[2] + x2];\n\t}\n\tif(dimensions == 4) {\n\t\treturn data[x0*sizes[1]*sizes[2]*sizes[3] + x1*sizes[2]*sizes[3] + x2*sizes[3] + x3];\n\t}\n}",
            1588905549.9092903,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "谢浩林",
            "#include <iostream>\nusing namespace std;\ndouble & Tensor_get(int di, const int size[], double data[], int x0, int x1, int x2, int x3) {\n\tint all[] = {1,1,1,1} ;\n\tfor(int i = 0 ; i < di ; i ++) {\n\t\tfor(int k = i + 1 ; k < di ; k ++) {\n\t\t\tall[i] *= size[k] ;\n\t\t}\n\t}\n\tint count = 0 ;\n\tint wei[] = {x0,x1,x2,x3} ;\n\tfor(int i = 0 ; i < di ; i ++) {\n\t\tcount += wei[i]*all[i] ;\n\t}\n\treturn data[count] ;\n}",
            1588907623.9641654,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王志文",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0 , int x1 = -1, int x2 = -1, int x3 = -1){\n\tdata[0] = x0;\n\tdata[1] = x1 + data[0] * 10;\n\tdata[2] = x2 + data[1] * 10;\n\tdata[3] = x3 + data[2] * 10;\n\t\n\tif(x1 == -1)return data[0];\n\telse if(x2 == -1)return data[1];\n\telse if(x3 == -1)return data[2];\n\telse return data[3];\n}",
            1588905968.8014078,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "欧阳蓓",
            "double & Tensor_get(int dimensions, const int sizes[],   double data[], int x0, int x1, int x2, int x3)\n{\n\tif (dimensions == 1)\n\t\treturn   data[x0];\n\tif (dimensions == 2)\n\t\treturn data[x0 * sizes[1] +  x1];\n\tif (dimensions == 3)\n\t\treturn data[x0 * sizes[1] * sizes[2] +  x1 * sizes[2] + x2  ];\n\tif (dimensions == 4)\n\t\treturn data[x0 * sizes[1] * sizes[2] * sizes[3]+  x1 * sizes[2]  * sizes[3]+ x2 * sizes[3] + x3  ];\n}",
            1588905869.25102,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "苏比努尔·玉山江",
            "#include<iostream>\nusing namespace std;\nclass Matrix\n{\n    public:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int rows, int columns)\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n\t\t\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tvalues[i][j] = 0;\n        }\n    }\n    ~Matrix()\n    {\n        for  (int i = 0; i < rows; i++)\n\t\t{\n\t\t\tif (values[i] != 0)\n\t\t\t\tdouble values[i];\n\t\t}\n\t\tif (values != 0)\n\t\t\tdouble values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n                cout<<values[ i][j]<<\"    \";\n \n            }\n            cout << endl;\n        }\n    }\n    private:\n    int rows;\n    int columns;\n    double ** values;\n};",
            1588904739.4001372,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "青悦",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tint tmp = x1 * sizes[0] + x0;\n\tif(dimensions > 2)tmp += x2 * sizes[1] * sizes[0];\n\tif(dimensions > 3)tmp += x3 * sizes[1] * sizes[0] * sizes[2];\n\treturn data[tmp];\n}",
            1588907395.324805,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "苏比努尔·玉山江",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n    public:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int rows, int columns)\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n\t\t\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tvalues[i][j] = 0;\n        }\n    }\n\tMatrix(int rows, int columns, double v[] )\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = v[i * columns + j];\n        }\n    }\n    ~Matrix()\n    {\n        for  (int i = 0; i < rows; i++)\n\t\t{\n\t\t\tif (values[i] != 0)\n\t\t\t\tdouble values[i];\n\t\t}\n\t\tif (values != 0)\n\t\t\tdouble values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n\t\t\t\t\t\t\n                cout<< setw(5) <<values[ i][j] ;\n \n            }\n            cout << endl;\n        }\n    }\n    private:\n    int rows;\n    int columns;\n    double ** values;\n};",
            1588904764.6444314,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "苏比努尔·玉山江",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n    public:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int rows, int columns)\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n\t\t\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tvalues[i][j] = 0;\n        }\n    }\n\tMatrix(int rows, int columns, double v[] )\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = v[i * columns + j];\n        }\n    }\n\t  Matrix(const Matrix & matrix2)\n\t  {\n\t\t\t this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n\t\t   for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = matrix2.values[i][j];\n        }\n\t  }\n    ~Matrix()\n    {\n        for  (int i = 0; i < rows; i++)\n\t\t{\n\t\t\tif (values[i] != 0)\n\t\t\t\tdouble values[i];\n\t\t}\n\t\tif (values != 0)\n\t\t\tdouble values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n\t\t\t\t\t\t\n                cout<< \"    \"<<values[ i][j] ;\n \n            }\n            cout << endl;\n        }\n    }\n    private:\n    int rows;\n    int columns;\n    double ** values;\n};",
            1588904788.6369596,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "苏比努尔·玉山江",
            "#include<iostream>\n#include <iomanip>\nusing namespace std;\nclass Matrix\n{\n    public:\n    Matrix()\n    {\n        rows = 0;\n        columns = 0;\n        values = nullptr;\n    }\n    Matrix(int rows, int columns)\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n\t\t\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tvalues[i][j] = 0;\n        }\n    }\n\tMatrix(int rows, int columns, double v[] )\n    {\n        this->rows = rows;\n        this->columns = columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n        for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = v[i * columns + j];\n        }\n    }\n\t  Matrix(const Matrix & matrix2)\n\t  {\n\t\t\t this->rows = matrix2.rows;\n        this->columns = matrix2.columns;\n        if (values != nullptr)\n        delete values;\n        values = new  double * [ rows];\n\t\t   for(int i = 0; i < rows; i++)\n        {\n            values[i] = new double [columns];\n\t\t\t\t\tfor (int j = 0; j < columns; j++)\n\t\t\t\t\t\tthis-> values[i][j] = matrix2.values[i][j];\n        }\n\t  }\n\t Matrix getRow(int row)\n\t {\n\t\tMatrix a (1, columns);\n\t\t for(int i = 0; i < columns; i++)\n\t\t {\n\t\t\ta.values[0][i] = this->values[row - 1][i];\n\t\t }\n\t\t return a;\n\t }\n\t Matrix getColumn(int col)\n\t {\n\t\tMatrix a (rows, 1);\n\t\t for (int i = 0; i < rows; i++)\n\t\t {\n\t\t\ta.values[i][0] = this->values[i][col - 1];\n\t\t }\n\t\t return a;\n\t\t \n\t\t \n\t }\n    ~Matrix()\n    {\n        for  (int i = 0; i < rows; i++)\n\t\t{\n\t\t\tif (values[i] != 0)\n\t\t\t\tdouble values[i];\n\t\t}\n\t\tif (values != 0)\n\t\t\tdouble values;\n    }\n    void print()\n    {\n        for (int i = 0; i < rows; i++)\n        {\n            for (int j = 0; j < columns; j++)\n            {\n\t\t\t\t\t\t\n                cout<< \"    \"<<values[ i][j] ;\n \n            }\n            cout << endl;\n        }\n    }\n    private:\n    int rows;\n    int columns;\n    double ** values;\n};",
            1588904813.959441,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "麦子丰",
            "double& Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n    int a,b,c,d;\n    a = sizes[0];b = sizes[1];\n    c = sizes[2];d = sizes[3];\n    int index;\n    if(dimensions == 4) \n        index = x0*b*c*d + x1*c*d + x2*d + x3;\n    else if(dimensions == 3) \n        index = x0*b*c + x1*c + x2;\n    else if(dimensions == 2) \n        index = x0*b + x1;\n    else \n        index = x0;\n    return data[index];\n}",
            1588905536.987507,
            100,
            "# 答案正确"
        ],
        [
            "2.6 (C++)",
            "苏比努尔·玉山江",
            "#include <iostream>\nusing namespace std;\nclass Matrix\n{\npublic:\n    Matrix()\n    {\n        matrix = nullptr;\n        row = 0;\n        col = 0;\n    }\n    Matrix(int row, int col)\n    {\n        this -> row = row;\n        this -> col = col; \n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = 0;\n            }\n        }\n    }\n\n    Matrix(int row, int col, const double *value)\n    {\n        this -> row = row;\n        this -> col = col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = value[i * col + j];\n            }\n        }\n    }\n\n    Matrix (const Matrix & matrix1)\n    {\n        row = matrix1.row;\n        col = matrix1.col;\n        matrix = new double*[row];\n        for (int i = 0; i < row; ++i)\n        {\n            matrix[i] = new double [col];\n            for (int j = 0; j < col; ++j)\n            {\n                matrix[i][j] = matrix1.matrix[i][j];\n            }\n        }\n    }\n\n    ~Matrix()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            if (matrix[i] != nullptr) delete [] matrix[i];\n        }\n        if (matrix != nullptr) delete [] matrix;\n    }\n\n   \n    Matrix concatenateRows(Matrix & matrix1)\n    {\n        Matrix t(row  * 2 , col);\n        for(int i = 0; i < row * 2; ++i)\n        {\n            for(int j = 0; j < col; ++j)\n            {\n\t\t\t\t\t\tif ( i < row)\n                t.matrix[i][j] = matrix[i][j];\n\t\t\t\telse\n\t\t\t\t\t t.matrix[i][j] = matrix1.matrix[i - row][j];\n            }\n        }\n        \n        return t;\n    }\n\n    Matrix concatenateColumns(Matrix & matrix1)\n    {\n        Matrix t(row, col + matrix1.col);\n        for(int i = 0; i < row ; ++i)\n        {\n            for(int j = 0; j < col * 2; ++j)\n            {\n\t\t\t\t\t\tif (j < col)\n                t.matrix[i][j] = matrix[i][j];\n\t\t\t\t\t\telse\n\t\t\t\t\t  t.matrix[i][j] = matrix1.matrix[i][j - col];\n            }\n        }\n         \n        return t;\n    }\n\n   \n\n    \n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < col; ++j)\n            {\n                cout << \"    \" << matrix[i][j]  ;\n            }\n            cout << endl;\n        }\n    }\n \n   \n     \n \n \n\nprivate:\n    double **matrix;\n    int row;\n    int col;\n};\n",
            1588904840.6151698,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "吴浩岚",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3)\n{\n if (dimensions == 1)\n  return data[x0];\n if (dimensions == 2)\n  return data[x0 * sizes[1] + x1];\n if (dimensions == 3)\n  return data[x0 * sizes[1] * sizes[2] + x1 * sizes[2] + x2];\n if (dimensions == 4)\n  return data[x0 * sizes[1] * sizes[2] * sizes[3]+ x1 * sizes[2] * sizes[3]+ x2 * sizes[3] + x3];\n}",
            1588906176.070483,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王郅成",
            "#include <iostream>\n#include <cmath>\nusing namespace std;\n\ndouble & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n    int a[4];\n    a[0]=x0;\n    a[1]=x1;\n    a[2]=x2;\n    a[3]=x3;\n    int num=0;\n    for (int i = 0; i < dimensions; i++)\n    {\n        num=num*10+a[i];\n    }\n    data[0]=num;\n    return *data;\n}\n\n",
            1588906172.7995152,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "肖澧寅",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n    int sum[4] = {1,1,1,1};\n    for(int i = 0;i < dimensions;i++){\n        for(int j = i + 1;j < dimensions;j++){\n            sum[i] *= sizes[j];\n        }\n    }\n    int cnt = 0;\n    int di[4] = {x0,x1,x2,x3};\n    for(int i = 0;i < dimensions;i++){\n        cnt += di[i] * sum[i];\n    }\n    return data[cnt];\n}",
            1588907676.3374934,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "涂涵",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3){\n\tdata[0]=x0;\n\tif(x1!=-1) data[0]=data[0]*10+x1;\n\tif(x2!=-1) data[0]=data[0]*10+x2;\n\tif(x3!=-1) data[0]=data[0]*10+x3;\n\treturn *data;\n}",
            1588909126.1287894,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "魏星月",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3) {\n\t\n\tif (dimensions == 1) {\n\t\treturn data[x0];\n\t}\n\telse if (dimensions == 2) {\n\t\treturn data[x1 * sizes[0] + x0];\n\t}\n\telse if (dimensions == 3) {\n\t\treturn data[x1 * sizes[0] + x0 + x2 * sizes[0] * sizes[1]];\n\t}\n\telse {\n\t\treturn data[x3 * sizes[0] * sizes[1] * sizes[2] + x2 * sizes[1] * sizes[0] + x1 * sizes[0] + x0];\n\t}\n\t\n}",
            1588908035.2907853,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王子佳",
            "double & Tensor_get(int dimensions,int sizes[],double data[], int x0, int x1, int x2, int x3){\n\tint number = 1;\n\tif(dimensions == 1) return data[x0];\n\telse if(dimensions == 2){\n\t\tnumber = sizes[0] * x1 + x0;\n\t\treturn data[number];\n\t}\n\telse if(dimensions == 3){\n\t\tnumber = sizes[0] * sizes[1] * x2 + sizes[0] * x1 + x0;\n\t\treturn data[number];\n\t}\n\telse if(dimensions == 4){\n\t\tnumber = sizes[0] * sizes[1] * sizes[2] * x3 + sizes[0] * sizes[1] * x2 + sizes[0] * x1 + x0;\n\t\treturn data[number];\n\t}\n} ",
            1588906002.912887,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "韦媛馨",
            "double & Tensor_get(int dimensions, const int sizes[],  double data[], int x0, int x1, int x2, int x3){\n\tif(dimensions==1) return data[x0];\n\telse if(dimensions==2) return data[x1*sizes[0]+x0];\n\telse if(dimensions==3) return data[x2*sizes[1]*sizes[0]+x1*sizes[0]+x0];\n\telse if(dimensions==4) return data[x3*sizes[2]*sizes[1]*sizes[0]+x2*sizes[1]*sizes[0]+x1*sizes[0]+x0];\n}\n",
            1588905392.0810301,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "向鼎",
            "    double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3){\n        if(dimensions == 2){\n            return data[x0 * sizes[1] + x1];\n        }\n        if(dimensions == 3){\n            return data[x0 * sizes[1] * sizes[2] + x1 * sizes[2] + x2];\n        }\n        if(dimensions == 4){\n            return data[x0 * sizes[1] * sizes[2] * sizes[3] + x1 * sizes[2] * sizes[3] + x2 * sizes[3] + x3];\n        }\n    }\n\n",
            1588906498.6457748,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "宋力舟",
            "double & Tensor_get(int dimensions, const int sizes[],   double data[], int x0, int x1, int x2, int x3)\n{\n\tif (dimensions == 1)\n\t\treturn   data[x0];\n\tif (dimensions == 2)\n\t\treturn data[x0 * sizes[1] +  x1];\n\tif (dimensions == 3)\n\t\treturn data[x0 * sizes[1] * sizes[2] +  x1 * sizes[2] + x2  ];\n\tif (dimensions == 4)\n\t\treturn data[x0 * sizes[1] * sizes[2] * sizes[3]+  x1 * sizes[2] * sizes[3]+ x2 * sizes[3] + x3  ];\n}",
            1588905421.565697,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王彬",
            "#include <iostream>\n\nusing namespace std;\n\ndouble & Tensor_get(int dimensions,int sizes[], double data[], int x0, int x1, int x2, int x3)\n{\n\tdata[0] = x0;\n\tdata[1] = data[0] * 10 + x1;\n\tdata[2] = data[1] * 10 + x2;\n\tdata[3] = data[2] * 10 + x3;\n\tif (x1 == -1) return data[0];\n\telse if (x2 == -1) return data[1];\n\telse if (x3 == -1) return data[2];\n\telse return data[3];\n}",
            1588908550.669604,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "唐杰",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tint z = 0;\n\tint x[4];\n\tx[0] = x0;\n\tx[1] = x1;\n\tx[2] = x2;\n\tx[3] = x3;\n\tfor(int i = 0;i < 4;i ++){\n\t\tif(x[i] >0){\n\t\t\tint temp = 1;\n\t\t\tfor(int j = dimensions;j > i;j --){\n\t\t\t\ttemp *= sizes[j];\n\t\t\t}\n\t\t\tz += x[i]*temp;\n\t\t}\n\t\tif(x[i] == -1)\n\t\tbreak;\n\t}\n\treturn data[z];\n}",
            1588908261.8448257,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "孙奥远",
            "double &Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3)\n{\n    if (dimensions == 1)\n        return data[x0];\n    if (dimensions == 2)\n        return data[x0 * sizes[1] + x1];\n    if (dimensions == 3)\n        return data[x0 * sizes[2] * sizes[1] + x1 * sizes[2] + x2];\n    if (dimensions == 4)\n        return data[x0 * sizes[3] * sizes[2] * sizes[1] + x1 * sizes[3] * sizes[2] + x2 * sizes[3] + x3];\n}",
            1588906286.0529304,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王著",
            "double & Tensor_get(int dimensions, const int sizes[],  double data[], int x0, int x1, int x2, int x3){\n\tif(dimensions==1) {\n\t\treturn data[x0];\n\t}\n\telse if(dimensions==2) {\n\t\tint index=x0*sizes[1]+x1;\n\t\treturn data[index];\n\t\t\n\t}\n\telse if(dimensions==3){\n\t\tint index=x0*sizes[1]*sizes[2]+x1*sizes[2]+x2;\n\t\treturn data[index];\n\t}\n\telse if(dimensions==4){\n\t\tint index=x0*sizes[1]*sizes[2]*sizes[3]+x1*sizes[2]*sizes[3]+x2*sizes[3]+x3;\n\t\treturn data[index];\n\t}\n}",
            1588906088.9810266,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "覃浩南",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n    switch(dimensions){\n        case 1:\n            return data[x0]; \n            break;\n        case 2:\n            return data[x1 * sizes[0] + x0];\n            break;\n        case 3:\n            return data[x2 * sizes[1] * sizes[0] + x1 * sizes[0] + x0];\n            break;\n        case 4:\n            return data[x3 * sizes[2] * sizes[1] * sizes[0] + x2 * sizes[1] * sizes[0] + x1 * sizes[0] + x0];\n            break;\n    }\n\n    return data[0];\n}",
            1588905748.613063,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王筝",
            "double & Tensor_get(int dimensions, const int sizes[],  double data[], int x0, int x1, int x2, int x3)\n{\n    int posi = x0;\n    if(dimensions>=2){\n        posi += x1 * sizes[0];\n    }\n    if(dimensions>=3){\n        posi += x2 * sizes[0] * sizes[1];\n    }\n    if(dimensions>=4){\n        posi += x3 * sizes[0] * sizes[1] * sizes[2];\n    }\n    return data[posi];\n}",
            1588905605.1549702,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "夏丕浪",
            "double & Tensor_get(int dimensions, int sizes[],double data[], int x0, int x1, int x2, int x3)\n{\n\treturn x1;\n}\n\t",
            1588908455.3627076,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In function ‘double& Tensor_get(int, int*, double*, int, int, int, int)’:\nsource.cpp:3:9: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double’\n  return x1;\n         ^\n"
        ],
        [
            "2020/05/08",
            "王浩歌",
            "#include <iostream>\n#include <cmath>\nusing namespace std;\n\ndouble & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n    int q[4];\n    q[0]=x0;\n    q[1]=x1;\n    q[2]=x2;\n    q[3]=x3;\n    int w=0;\n    for (int i = 0; i < dimensions; i++)\n    {\n        w=w*10+q[i];\n    }\n    data[0]=w;\n    return *data;\n}",
            1588908433.4130168,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "马淙升",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3) {\n\tint index = 0;\n\tint k[4] = {x0,x1,x2,x3};\n\tfor(int i = dimensions;i > 0;-- i) {\n\t\tindex = k[i-1]+index*sizes[i-1];\n\t}\n\treturn data[index];\n}",
            1588906360.9709783,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "许遵楠",
            "double &Tensor_get(int dimensions, const int sizes[], const double data[], int x0, int x1, int x2, int x3) {\n    int index = 0;\n    if (dimensions == 1)\n        index = x0;\n    if (dimensions == 2)\n        index = x0 * sizes[1] + x1;\n    if (dimensions == 3)\n        index = x0 * (sizes[2] * sizes[1]) + x1 * sizes[2] + x2;\n    if (dimensions == 4)\n        index = x0 * (sizes[3] * sizes[2] * sizes[1]) + x1 * (sizes[3] * sizes[2]) + x2 * sizes[3] + x3;\n    return (double &) data[index];\n}",
            1588907626.5532377,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "欧培华",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3)\n{\n    int index = x0;\n    if(x1 != -1)\n        index = index * sizes[1] + x1;\n    if(x2 != -1)\n        index = index * sizes[2] + x2;\n    if(x3 != -1)\n        index = index * sizes[3] + x3;\n    return data[index];\n}",
            1588905883.1092641,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "唐晨轩",
            "#include<string>\ndouble & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tif(dimensions == 1){\n\t\tdata[0] = x0;\n\t}\n\tif(dimensions == 2){\n\t\tdata[0] = x0*10+x1;\n\t}\n\tif(dimensions == 3){\n\t\tdata[0] = x0*100+x1*10+x2;\n\t}\n\tif(dimensions == 4){\n\t\tdata[0] = x0*1000+x1*100+x2*10+x3;\n\t}\n\treturn *data;\n}\t",
            1588907297.9264421,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "伍嘉俊",
            "",
            1588908161.7236865,
            0,
            "main.cpp: In member function ‘double& Tensor::get(int, int, int, int)’:\nmain.cpp:68:78: error: ‘Tensor_get’ was not declared in this scope\n   return Tensor_get(this->dimensions, this->sizes, this->data, x0, x1, x2, x3);\n                                                                              ^\n"
        ],
        [
            "2020/05/08",
            "米仁沙·纳斯尔",
            "double &Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3)  {\n\tif(dimensions==2)\n\t  return data[x0];\n\tif(dimensions==3)\n\t\treturn data[x0*x1];\n\tif(dimensions==4)\n\t\treturn data[x0*x1*x2];\n\tif(dimensions==5)\n\t\treturn data[x0*x1*x2*x3];\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}",
            1588909037.381035,
            66,
            "# 答案不正确\n\n# 随机输入:\n0 2\n2 3\n2 1\n\n1 1 2\n1 1 2\n2 1 2\n\n2 3 2 0\n1 3 0 2\n0 2 1 5\n\n\n\n# 参考答案:\n2\n23\n21\n\n112\n112\n212\n\n2320\n1302\n215\n\n\n# 我的答案:\n3\n23\n23\n\n114\n114\n214\n\n2325\n2305\n2305\n"
        ],
        [
            "2020/05/08",
            "杨宗恺",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3)\n{\n\tif (dimensions == 1)\n\t{\n\t\treturn   data[x0];\n\t}\n\t\tif (dimensions == 2)\n\t\t{\n\t\t\t\treturn data[x0 * sizes[1] +  x1];\n\t\t}\n\t\t\n\t\tif (dimensions == 3)\n\t\t{\n\t\t\treturn data[x0 * sizes[1] * sizes[2] +  x1 * sizes[2] + x2  ];\n\t\t}\n\t\t\t\n\t\telse\n\t\t\treturn data[x0 * sizes[1] * sizes[2] * sizes[3]+  x1 * sizes[2]  * sizes[3]+ x2 * sizes[3] + x3  ];\n}",
            1588909171.033078,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "湯仙兒",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3) {\n\tif(sizes[1] == -1 && sizes[2] == -1 && sizes[3] == -1) {\n\t\tdata[0] = x0;\n\t}\n\tif(sizes[1] != -1 && sizes[2] == -1 && sizes[3] == -1) {\n\t\tdata[0] = x1;\n\t\tdata[1] = x0 * 10 + data[0];\n\t}\n\tif(sizes[1] != -1 && sizes[2] != -1 && sizes[3] == -1) {\n\t\tdata[0] = x2;\n\t\tdata[1] = x1 * 10 + data[0];\n\t\tdata[2] = x0 * 100 + data [1];\n\t}\n\tif(sizes[1] != -1 && sizes[2] != -1 && sizes[3] != -1) {\n\t\tdata[0] = x3;\n\t\tdata[1] = x2 * 10 + data[0];\n\t\tdata[2] = x1 * 100 + data [1];\n\t\tdata[3] = x0 * 1000 + data[2];\n\t}\n}",
            1588909139.4474366,
            50,
            "# 答案不正确\n\n# 随机输入:\n1 1\n2 3\n2 1\n\n1 0 4\n1 3 3\n0 3 2\n\n1 1 0 3\n0 2 0 3\n1 3 2 1\n\n\n\n# 参考答案:\n11\n23\n21\n\n104\n133\n32\n\n1103\n203\n1321\n\n\n# 我的答案:\n1089\n2289\n2089\n\n1039\n1329\n319\n\n1103\n203\n1321\n"
        ],
        [
            "2020/05/08",
            "万金诚",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tint cnt=0;\n\tint x[4];\n\tx[0]=x0;\n\tx[1]=x1;\n\tx[2]=x2;\n\tx[3]=x3;\n\tfor(int i=0;i<4;i++){\n\t\tif(x[i]>0){\n\t\t\tint temp=1;\n\t\t\tfor(int j=dimensions;j>i;j--){\n\t\t\t\ttemp*=sizes[j];\n\t\t\t}\n\t\t\tcnt+=x[i]*temp;\n\t\t}\n\t\tif(x[i]==-1)\n\t\tbreak;\n\t}\n\treturn data[cnt];\n}",
            1588907660.249439,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "容浩民",
            "#include <iostream>\nusing namespace std;\ndouble & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n        if(dimensions == 1){\n            return data[x0];\n        }else if(dimensions == 2){\n            return data[x0 * sizes[1] + x1];\n        }else if(dimensions == 3){\n            return data[x0 * sizes[1] * sizes[2] + x1 * sizes[2] + x2];\n        }else{\n            return data[x0 * sizes[1]  * sizes[2] * sizes[3] + x1 *  sizes[2]  * sizes[3] + x2 * sizes[3] + x3];\n        }\n    }",
            1588907144.7592657,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "施天予",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1,int x2, int x3){\n    switch(dimensions){\n        case 1:\n            return data[x0];\n            break;\n        case 2:\n            return data[x1*sizes[0]+x0];\n            break;\n        case 3:\n            return data[x2*sizes[1]*sizes[0]+x1*sizes[0]+x0];\n            break;\n        case 4:\n            return data[x3*sizes[2]*sizes[1]*sizes[0]+x2*sizes[1]*sizes[0]+x1*sizes[0]+x0];\n            break;\n    }\n}",
            1588908818.2590892,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "潘思晗",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tint index;\n\tif(dimensions==1) index=x0;;\n\tif(dimensions==2){\n\t\tindex=x0*sizes[1]+x1;\n\t}\n\tif(dimensions==3){\n\t\tindex=x0*sizes[1]*sizes[2]+x1*sizes[2]+x2;\n\t}\n\tif(dimensions==4){\n\t\tindex=x0*sizes[1]*sizes[2]*sizes[3]+x1*sizes[2]*sizes[3]+x2*sizes[3]+x3;\n\t}\n\treturn data[index];\n}",
            1588906581.6960847,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "苏比努尔·玉山江",
            "double & Tensor_get(int dimensions, const int sizes[],   double data[], int x0, int x1, int x2, int x3)\n{\n\tif (dimensions == 1)\n\t\treturn   data[x0];\n\tif (dimensions == 2)\n\t\treturn data[x0 * sizes[1] +  x1];\n\tif (dimensions == 3)\n\t\treturn data[x0 * sizes[1] * sizes[2] +  x1 * sizes[2] + x2  ];\n\tif (dimensions == 4)\n\t\treturn data[x0 * sizes[1] * sizes[2] * sizes[3]+  x1 * sizes[2]  * sizes[3]+ x2 * sizes[3] + x3  ];\n}",
            1588906404.0903926,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "肖浩慧",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3){\n\tint arr[4] = {x0,x1,x2,x3};\n\tint pos = 0;\n\tfor(int i = 0;i < dimensions;i++){//3     3 4 5\n\t\tdouble temp = 1;\n\t\tfor(int j = i + 1;j < dimensions;j++){//1 \n\t\t\t temp *= sizes[j];\n\t\t}\n\t\tpos += arr[i]*temp; \n\t}\n\treturn  data[pos];\n}",
            1588906495.295357,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "唐浩",
            "#include<iostream>\nusing namespace std;\ndouble &Tensor_get(int dimensions,int sizes[],double *data, int x0,int x1 = 1, int x2 = 1, int x3=1){\n\treturn &data[x0*x1*x2*x3];\n}",
            1588908039.1440337,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In function ‘double& Tensor_get(int, int*, double*, int, int, int, int)’:\nsource.cpp:4:26: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double*’\n  return &data[x0*x1*x2*x3];\n                          ^\n"
        ],
        [
            "2020/05/08",
            "王振恺",
            "#include <iostream>\n#include <cmath>\nusing namespace std;\n\ndouble & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n    int a[4];\n    a[0]=x0;\n    a[1]=x1;\n    a[2]=x2;\n    a[3]=x3;\n    int num=0;\n    for (int i = 0; i < dimensions; i++)\n    {\n        num=num*10+a[i];\n    }\n    data[0]=num;\n    return *data;\n}\n",
            1588906648.919835,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "謝敏華",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3){\n\t\tint ans;\n\t\tif(dimensions==1) ans=x0;\n\t\tif(dimensions==2) ans=x0*sizes[1]+x1;\n\t\tif(dimensions==3) ans=x0*sizes[1]*sizes[2]+x1*sizes[2]+x2;\n\t\tif(dimensions==4) ans=x0*sizes[1]*sizes[2]*sizes[3]+x1*sizes[2]*sizes[3]+x2*sizes[3]+x3;\n\t\treturn data[ans];\n} ",
            1588908157.7426674,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "裴江博",
            "double & Tensor_get(int dimensions,int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tint index = -1;\n\tif(dimensions == 2) index = x0 * sizes[1] + x1;\n\tif(dimensions == 3) index = x0 * sizes[1] * sizes[2 ]+ x1 * sizes[2] + x2;\n\tif(dimensions == 4) index = x0 * sizes[1] * sizes[2] * sizes[3] + x1 * sizes[2] * sizes[3] + x2 * sizes[3] + x3;\n\treturn data[index];\n}",
            1588907431.172718,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "谢程凯",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n    int sum[4] = {1,1,1,1};\n    for(int i = 0;i < dimensions;i++){\n        for(int j = i + 1;j < dimensions;j++){\n            sum[i] *= sizes[j];\n        }\n    }\n    int cnt = 0;\n    int di[4] = {x0,x1,x2,x3};\n    for(int i = 0;i < dimensions;i++){\n        cnt += di[i] * sum[i];\n    }\n    return data[cnt];\n}",
            1588907004.5706165,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王冠权",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1 = -1, int x2 = -1, int x3 = -1) {\n\tdata[0] = x0;\n\tdata[1] = data[0] * 10 + x1;\n\tdata[2] = data[1] * 10 + x2;\n\tdata[3] = data[2] * 10 + x3;\n\tif (x1 == -1) {\n\t\treturn data[0];\n\t}\n\telse if (x2 == -1) {\n\t\treturn data[1];\n\t}\n\telse if (x3 == -1) {\n\t\treturn data[2];\n\t}\n\telse return data[3];\n}",
            1588908832.3453512,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王芯芸",
            "double & Tensor_get(int dim, int size[], double * data, int x0, int x1=-1, int x2=-1, int x3=-1){\n\tif (dim == 2) data[1] = x0 * 10 + x1;\n\telse if (dim == 3) data[2] = x0 * 100 + x1 * 10 + x2;\n\telse if (dim == 4)data[3] = x0 * 1000 + x1 * 100 + x2 * 10 + x3;\n\treturn data[dim - 1];\n}",
            1588907327.0714517,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王晶",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3) {\n\tif (dimensions == 1) {\n\t\treturn data[x0];\n\t}\n\telse if (dimensions == 2) {\n\t\treturn data[x1 * sizes[0] + x0];\n\t}\n\telse if (dimensions == 3) {\n\t\treturn data[x1 * sizes[0] + x0 + x2 * sizes[0] * sizes[1]];\n\t}\n\telse {\n\t\treturn data[x3 * sizes[0] * sizes[1] * sizes[2] + x2 * sizes[1] * sizes[0] + x1 * sizes[0] + x0];\n\t}\t\n}",
            1588908166.8239224,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "邵震东",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3)\n{\n    if (dimensions == 1) {\n        return data[x0];\n    }\n    else if (dimensions == 2) {\n        return data[x0 * sizes[1] + x1];\n    }\n    else if (dimensions == 3) {\n        return data[x0 * sizes[1] * sizes[2] + x1 * sizes[2] + x2];\n    }\n    else if (dimensions == 4) {\n        return data[x0 * sizes[1] * sizes[2] * sizes[3] + x1 * sizes[2] * sizes[3] + x2 * sizes[3] + x3];\n    }\n}\n",
            1588907413.0378602,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "吴浩冬",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1,int x2, int x3){\n    switch(dimensions){\n        case 1:\n            return data[x0];\n            break;\n        case 2:\n            return data[x1*sizes[0]+x0];\n            break;\n        case 3:\n            return data[x2*sizes[1]*sizes[0]+x1*sizes[0]+x0];\n            break;\n        case 4:\n            return data[x3*sizes[2]*sizes[1]*sizes[0]+x2*sizes[1]*sizes[0]+x1*sizes[0]+x0];\n            break;\n    }\n    return data[0];\n}",
            1588907418.4259958,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "廖雨轩",
            "double &Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3)\n{\n    int index = 0;\n    if (dimensions == 1)\n        index = x0;\n    if (dimensions == 2)\n        index = x0 * sizes[1] + x1;\n    if (dimensions == 3)\n        index = x0 * sizes[2] * sizes[1] + x1 * sizes[2] + x2;\n    if (dimensions == 4)\n        index = x0 * sizes[3] * sizes[2] * sizes[1] + x1 * sizes[3] * sizes[2] + x2 * sizes[2] + x3;\n    return data[index];\n}",
            1588908246.836021,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "吴渝峰",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3) {\n    if(dimensions == 2) {\n        int ptr = x0 * sizes[1] + x1;\n        double num = x0 * 10 + x1;\n        data[ptr] = num;\n        return data[ptr];\n    }\n    if(dimensions == 3) {\n        int ptr = x0 * sizes[1] * sizes[2] + x1 * sizes[2] + x2;\n        double num = x0 * 100 + x1 * 10 + x2;\n        data[ptr] = num;\n        return data[ptr];\n    }\n    if(dimensions == 4) {\n        int ptr = x0 * sizes[1] * sizes[2] + sizes[3] + x1 * sizes[2] * sizes[3] + x2 * sizes[3] + x3;\n        double num = x0 * 1000 + x1 * 100 + x2 * 10 + x3;\n        data[ptr] = num;\n        return data[ptr];\n    }\n}",
            1588909085.5318942,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王晓龙",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0 , int x1 = -1, int x2 = -1, int x3 = -1){\n\tdata[0] = x0;\n\tdata[1] = x1 + data[0] * 10;\n\tdata[2] = x2 + data[1] * 10;\n\tdata[3] = x3 + data[2] * 10;\n\t\n\tif(x1 == -1)return data[0];\n\telse if(x2 == -1)return data[1];\n\telse if(x3 == -1)return data[2];\n\telse return data[3];\n}",
            1588907571.0597131,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "南麟星",
            "double & Tensor_get(int dimensions,int sizes[],double data[], int x0, int x1, int x2, int x3){\n\tif(dimensions == 2){\n\t\treturn data[x0 * 4 + x1];\n\t}\n\tif(dimensions == 3){\n\t\treturn data[x0 * 20 + x1 * 5 + x2];\n\t}\n\tif(dimensions == 4){\n\t\treturn data[x0 * 120 + x1 * 30 + x2 * 6 + x3];\n\t}\n}\n",
            1588907859.0275538,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "汪艺凡",
            "double & Tensor_get(int dim, int size[], double * data, int x0, int x1=-1, int x2=-1, int x3=-1){\n\tif (dim == 2) data[1] = x0 * 10 + x1;\n\telse if (dim == 3) data[2] = x0 * 100 + x1 * 10 + x2;\n\telse if (dim == 4)data[3] = x0 * 1000 + x1 * 100 + x2 * 10 + x3;\n\treturn data[dim - 1];\n}",
            1588907809.5522227,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "伍海珊",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n    int a[4];\n    a[0]=x0;\n    a[1]=x1;\n    a[2]=x2;\n    a[3]=x3;\n    int num=0;\n    \n    for (int i = 0; i < dimensions; i++){\n        num=num*10+a[i];\n    }\n    \n    data[0]=num;\n    return *data;\n}",
            1588907813.2466846,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "施昊成",
            "double & Tensor_get(int dimensions,  int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tswitch(dimensions){\n\t\tcase 1:\n\t\t\treturn data[x0];\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\treturn data[x1*sizes[0]+x0];\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\treturn data[x2*sizes[1]*sizes[0]+x1*sizes[0]+x0];\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\treturn data[x3*sizes[2]*sizes[1]*sizes[0]+x2*sizes[1]*sizes[0]+x1*sizes[0]+x0];\n\t\t\tbreak;\n\t}\n\t} \n",
            1588907886.7741978,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "吴婷婷",
            "#include<iostream>\nusing namespace std;\ndouble  &Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3){\n\tif(x0!=-1)\n\t{\n\t   for(int i=0;i<sizes[0];++i) data[i]=x0;\n    }\n    if(x1!=-1)\n    {\n       for(int i=0;i<sizes[1];++i) \n       {\n       \t data[i]*=10;\n       \t data[i]+=x1;\n\t   }\n\t}\n\tif(x2!=-1)\n    {\n       for(int i=0;i<sizes[2];++i) \n       {\n       \t data[i]*=10;\n       \t data[i]+=x2;\n\t   }\n\t}\n    if(x3!=-1)\n    {\n       for(int i=0;i<sizes[3];++i) \n       {\n       \t data[i]*=10;\n       \t data[i]+=x3;\n\t   }\n\t}\n\t\n\treturn *data;\n}",
            1588907885.0355694,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "谢扬",
            "double & Tensor_get(int dimensions, const int sizes[],  double data[], int x0, int x1, int x2, int x3)\n{\n\tswitch(dimensions)\n\t{\n\t\tcase 1:return data[x0];\n\t\tcase 2:return (data+x0*sizes[1])[x1];\n\t\tcase 3:return (data+x0*sizes[1]*sizes[2]+x1*sizes[2])[x2];\n\t\tcase 4:return (data+x0*sizes[1]*sizes[2]*sizes[3]+x1*sizes[2]*sizes[3]+x2*sizes[3])[x3];\n\t}\n}",
            1588908102.5276015,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王锡铭",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0 , int x1 = -1, int x2 = -1, int x3 = -1){\n \tdata[0] = x0;\n \tdata[1] = data[0] * 10 + x1;\n \tdata[2] = data[1] * 10 + x2;\n \tdata[3] = data[2] * 10 + x3;\n \tif(x1 == -1)\n\t \treturn data[0];\n\telse if(x2 == -1)\n\t \treturn data[1];\n \telse if(x3 == -1)\n\t \treturn data[2];\n \telse \n\t \treturn data[3];\n}",
            1588908352.5052016,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "莫振威",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n        int temp = x0;\n        if(dimensions == 2) temp = x1 + x0 * sizes[1];\n        else if(dimensions == 3) temp = x2 + x1 * sizes[1] + x0 * sizes[1] * sizes[2];\n        else if(dimensions == 4) temp = x3 + x2 * sizes[1] + x1 * sizes[1] * sizes[2] + x0 * sizes[1] * sizes[2] * sizes[3];\n        return data[temp];\n    }",
            1588908617.7831736,
            91,
            "# 答案不正确\n\n# 随机输入:\n1 1\n2 1\n2 3\n\n0 0 3\n1 0 0\n2 1 4\n\n0 0 4 3\n1 2 2 1\n1 0 1 4\n\n\n\n# 参考答案:\n11\n21\n23\n\n3\n100\n214\n\n43\n1221\n1014\n\n\n# 我的答案:\n11\n21\n23\n\n3\n100\n220\n\n43\n1221\n1020\n"
        ],
        [
            "2020/05/08",
            "王硕",
            "double & Tensor_get(int dimensions, const int sizes[], const double data[], int x0, int x1, int x2, int x3){\n\treturn 0;\n}",
            1588908283.6028109,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In function ‘double& Tensor_get(int, const int*, const double*, int, int, int, int)’:\nsource.cpp:2:9: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double’\n  return 0;\n         ^\n"
        ],
        [
            "2020/05/08",
            "吴绪芃",
            "double & Tensor_get(int dimensions,int sizes[],double data[], int x0, int x1, int x2, int x3){\n\tint number=1;\n\tif(dimensions==1)return data[x0];\n\telse if(dimensions==2){\n\t\tnumber=sizes[0]*x1+x0;\n\t\treturn data[number];\n\t}\n\telse if(dimensions==3){\n\t\tnumber=sizes[0]*sizes[1]*x2+sizes[0]*x1+x0;\n\t\treturn data[number];\n\t}\n\telse if(dimensions==4){\n\t\tnumber=sizes[0]*sizes[1]*sizes[2]*x3+sizes[0]*sizes[1]*x2+sizes[0]*x1+x0;\n\t\treturn data[number];\n\t}\n}",
            1588908421.4285028,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王馨怡",
            "double & Tensor_get(int dimensions, const int sizes[],double data[], int x0, int x1, int x2, int x3) {\n\t\n\tif (dimensions == 1) {\n\t\treturn data[x0];\n\t}\n\telse if (dimensions == 2) {\n\t\treturn data[x1 * sizes[0] + x0];\n\t}\n\telse if (dimensions == 3) {\n\t\treturn data[x1 * sizes[0] + x0 + x2 * sizes[0] * sizes[1]];\n\t}\n\telse {\n\t\treturn data[x3 * sizes[0] * sizes[1] * sizes[2] + x2 * sizes[1] * sizes[0] + x1 * sizes[0] + x0];\n\t}\n\t\n}",
            1588908593.5105925,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王昌远",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0 , int x1 = -1, int x2 = -1, int x3 = -1){\n  data[0] = x0;\n  data[1] = data[0] * 10 + x1;\n  data[2] = data[1] * 10 + x2;\n  data[3] = data[2] * 10 + x3;\n  if(x1 == -1)\n   return data[0];\n else if(x2 == -1)\n   return data[1];\n  else if(x3 == -1)\n   return data[2];\n  else \n   return data[3];\n}",
            1588908788.047744,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "肖翎予",
            "double & Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3){\n    int sum[4] = {1,1,1,1};\n    for(int i = 0; i < dimensions; i++){\n        for(int j = i + 1; j < dimensions; j++){\n            sum[i] *= sizes[j];\n        }\n    }\n    int cnt = 0;\n    int di[4] = {x0,x1,x2,x3};\n    for(int i = 0; i < dimensions; i++){\n        cnt += di[i] * sum[i];\n    }\n    return data[cnt];\n}",
            1588908816.5379272,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "肖浩慧",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble * values;\n\tpublic:\n\t\tMatrix(int row,int column){\n\t\trows = row;\n\t\tcolumns = column;\n\t\tvalues = new double[row*column];\n\t\tfor(int i = 0;i < row*column;i++) values[i] = 0;\n\t}\n\t\t~Matrix(){\n\t\t\tdelete [] values;\n\t\t}\n\t\tvoid print(void){\n\t\t\tfor(int i = 0; i < rows*columns;i++){\n\t\t\t\tcout<<\"    \"<<values[i];\n\t\t\t\tif((i + 1)% columns == 0)cout<<endl;\n\t\t\t}\n\t\t}\n};",
            1588909473.0240266,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "彭瑞洲",
            "double & Tensor_get(int dimensions,  int sizes[],  double data[], int x0, int x1, int x2, int x3){\n\tif (dimensions == 1) {\n        return data[x0];\n    }\n    else if (dimensions == 2) {\n        return data[x0 * sizes[1] + x1];\n    }\n    else if (dimensions == 3) {\n        return data[x0 * sizes[1] * sizes[2] + x1 * sizes[2] + x2];\n    }\n    else if (dimensions == 4) {\n        return data[x0 * sizes[1] * sizes[2] * sizes[3] + x1 * sizes[2] * sizes[3] + x2 * sizes[3] + x3];\n    }\n}",
            1588909044.9327974,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王正学",
            "int * data1;\ndouble & Tensor_get(int dimensions,int sizes[],double data[], int x0, int x1, int x2, int x3){\n\tif(dimensions == 2){\n\t\tdata1[0] = x0;\n\t\tdata1[1] = x1;\n\t}\n\t\n\tif(dimensions == 3){\n\t\tdata1[0] = x0;\n\t\tdata1[1] = x2;\n\t\tdata1[3] = x3;\n\t}\n\t\n\tif(dimensions == 4){\n\t\tdata1[0] = x0;\n\t\tdata1[1] = x1;\n\t\tdata1[2] = x2;\n\t\tdata1[3] = x3;\n\t}\n\treturn &data1;\n}",
            1588909183.3314924,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In function ‘double& Tensor_get(int, int*, double*, int, int, int, int)’:\nsource.cpp:20:10: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘int**’\n  return &data1;\n          ^\n"
        ],
        [
            "2.1 (C++)",
            "欧培华",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n    int row;\n    int column;\n    double * value;\npublic:\n    Matrix(int row,int column)\n    {\n        this->row = row;\n        this->column = column;\n        value = new double[row*column];\n        for (int i = 0; i < row; ++i)\n            for (int j = 0; j < column; ++j)\n                value[(i*column)+j] = 0;\n    }\n    ~Matrix()\n    {\n        delete [] value;\n    }\n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < column; ++j)\n                cout << \"    \" << value[(i*column)+j];\n            cout << endl;\n        }\n    }\n};",
            1588910277.9140885,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "施昊成",
            "#include <iostream>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\tint rows;\n   int columns;\n   double * values;\n\tpublic:\n\tMatrix(int r, int c);\n\tint print();\n\t~Matrix();\n\t\n};\n\t\n Matrix::Matrix(int r, int c){\n\t r=rows;\n\t c=columns;\n\tfor (int i = 0; i <r *c ; ++ i){\n\t\tvalues[i]=0;\n\t} }\n\t\n\tMatrix::~Matrix(){\n\t\tdelete[]this->values;\n\t}\n\tint Matrix::print(){\n\t\tfor (int i = 0; i < rows ; ++ i) {\n\t   for (int j = 0; j < columns ; ++ j) {\n\t\t   cout << \"0\"<<\"    \";\n\t   }\n\t\tcout << endl;\n\t}\n\t\t} \n\t\n\t\n\n",
            1588910336.9878702,
            0,
            "# 答案不正确\n\n# 随机输入:\n8\n9\n\n\n# 参考答案:\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n\n\n# 我的答案:\n"
        ],
        [
            "2.2 (C++)",
            "欧培华",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n    int row;\n    int column;\n    double * value;\npublic:\n    Matrix(int row,int column,double value[])\n    {\n        this->row = row;\n        this->column = column;\n        this->value = new double[row*column];\n        for (int i = 0; i < row; ++i)\n            for (int j = 0; j < column; ++j)\n                this->value[(i*column)+j] = value[(i*column)+j];\n    }\n    ~Matrix()\n    {\n        delete [] value;\n    }\n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < column; ++j)\n                cout << setw(5) << right << value[(i*column)+j];\n            cout << endl;\n        }\n    }\n};",
            1588910699.6863945,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "吴渝峰",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\nprivate:\n\tint rows;\n\tint columns;\n\tdouble* values;\npublic:\n\tMatrix(int row, int column) {\n\t\trows = row;\n\t\tcolumns = column;\n\t\tvalues = new double[row * column];\n\t\tfor(int i = 0; i < row * column; ++ i) {\n\t\t\tvalues[i] = 0;\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete[] values;\n\t}\n\tvoid print() {\n\t\tint k = 1;\n\t\tfor(int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\tif(i == columns * k - 1) {\n\t\t\t\tcout << endl;\n\t\t\t\tk ++;\n\t\t\t}\n\t\t}\n\t}\n};",
            1588911620.2747118,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "伍海珊",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\npublic:\n    Matrix(int rows, int columns);\n    ~Matrix();\n    void print();\n\nprivate:\n    int rows;\n    int columns;\n    double* values;\n};\n\nMatrix::Matrix(int rows, int columns){\n    this->rows=rows;\n    this->columns=columns;\n    this->values = new double[rows*columns];\n\n    for(int i=0; i<rows*columns; ++i)\n        *(values+i)=0;\n}\n\nMatrix::~Matrix(){\n    delete [] this->values;\n}\n\nvoid Matrix::print(){\n    int row=this->rows;\n    int col=this->columns;\n\n    for(int i=0; i<row; ++i){\n        for(int j=0; j<col; ++j){\n            cout << setw(5) << *(this->values+col*i+j);\n        }\n        cout << endl;\n    }\n}\n",
            1588911918.112389,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "欧培华",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix\n{\nprivate:\n    int row;\n    int column;\n    double * value;\npublic:\n    Matrix(int row,int column,double value[])\n    {\n        this->row = row;\n        this->column = column;\n        this->value = new double[row*column];\n        for (int i = 0; i < row; ++i)\n            for (int j = 0; j < column; ++j)\n                this->value[(i*column)+j] = value[(i*column)+j];\n    }\n    Matrix(const Matrix & s)\n    {\n        row = s.row;\n        column = s.column;\n        value = new double[row*column];\n        for (int i = 0; i < row; ++i)\n            for (int j = 0; j < column; ++j)\n                value[(i*column)+j] = s.value[(i*column)+j];\n    }\n    ~Matrix()\n    {\n        delete [] value;\n    }\n    void print()\n    {\n        for (int i = 0; i < row; ++i)\n        {\n            for (int j = 0; j < column; ++j)\n                cout << \"    \" << value[(i*column)+j];\n            cout << endl;\n        }\n    }\n};",
            1588911566.1755233,
            100,
            "# 答案正确"
        ],
        [
            "2.1 (C++)",
            "王冠权",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tnew double matrix[4][5];\n\tMatrix(int a,int b) {\n\t\tthis->rows = a;\n\t\tthis->columns = b;\n\t\tfor (int i = 0;i < 4;i++) {\n\t\t\tfor (int j = 0;j < 5;j++) {\n\t\t\t\tmatrix[i][j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor (int i = 0;i < rows;i++) {\n\t\t\tfor (int j = 0;j < columns;j++) {\n\t\t\t\tcout<<\"    \"<<matrix[i][j];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete []matrix;\n\t}\n};",
            1588912172.1193714,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:10:2: error: expected unqualified-id before ‘new’\n  new double matrix[4][5];\n  ^\nsource.cpp: In constructor ‘Matrix::Matrix(int, int)’:\nsource.cpp:16:5: error: ‘matrix’ was not declared in this scope\n     matrix[i][j] = 0;\n     ^\nsource.cpp: In member function ‘void Matrix::print()’:\nsource.cpp:23:19: error: ‘matrix’ was not declared in this scope\n     cout<<\"    \"<<matrix[i][j];\n                   ^\nsource.cpp: In destructor ‘Matrix::~Matrix()’:\nsource.cpp:29:12: error: ‘matrix’ was not declared in this scope\n   delete []matrix;\n            ^\n"
        ],
        [
            "2.2 (C++)",
            "伍海珊",
            "#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Matrix{\npublic:\n    Matrix(int rows, int columns,double values[]);\n    ~Matrix();\n    void print();\n\nprivate:\n    int rows;\n    int columns;\n    double* values;\n};\n\nMatrix::Matrix(int rows, int columns,double values[]){\n    this->rows=rows;\n    this->columns=columns;\n    this->values = new double[rows*columns];\n\n    for(int i=0; i<rows*columns; ++i)\n        *(this->values+i)=values[i];\n}\n\nMatrix::~Matrix(){\n    delete [] this->values;\n}\n\nvoid Matrix::print(){\n    int row=this->rows;\n    int col=this->columns;\n\n    for(int i=0; i<row; ++i){\n        for(int j=0; j<col; ++j){\n            cout << setw(5) << *(this->values+col*i+j);\n        }\n        cout << endl;\n    }\n}\n",
            1588913047.0683126,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "吴浩岚",
            "#include <iostream>\n#include<iomanip>\nusing namespace std;\nclass Matrix{\n\tprivate:\n\t\tint rows;\n\t\tint columns;\n\t\tdouble*  values;\n\tpublic:\n\t\tMatrix(int rows, int columns, double values[]){\n\t\t\tthis->rows = rows;\n\t\t\tthis->columns = columns;\n\t\t\tthis->values = values;\n\t\t}\n\t\tvoid print(){\n\t\t\tint cnt = 0;\n\t\t\tfor (int i = 0; i < this->rows; ++ i) {\n\t\t\t\tfor(int j = 0; j < this->columns; j ++){\n\t\t\t\t\tcout <<(int)this->values[cnt]<<setw(5);\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\tif(i!=this->rows)putchar('\\n');\n\t\t\t}\n\t\t\t\n\t\t}\n};",
            1588913432.1458583,
            100,
            "# 答案正确"
        ]
    ],
    "table_name": "答案"
}