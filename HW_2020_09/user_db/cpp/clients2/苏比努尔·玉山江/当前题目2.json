{
    "__update_time__": 1595513494.73624,
    "field_names": [
        "题目名",
        "问题",
        "主程序",
        "答案",
        "评语",
        "开始时间",
        "截止时间",
        "分数",
        "提交时间"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "text",
        "text",
        "time",
        "time",
        "number",
        "time"
    ],
    "rows": [
        [
            "A.4 (C++)",
            "<p>写出一个键和值的类型都可以是string或int的哈希表类, HT。<br>本题难度大，<span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 1rem;\">参考</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 1rem;\">答案有200行，截止时间延长4天。</span></p><p>注意<br></p><ol><li>HT不是一个模版类，但是HT的一个对象可以同时使用int和string的对象作为键。</li></ol><p><span style=\"font-weight: bolder;\">EXAMPLE INPUT</span></p><pre style=\"font-size: 14px;\">1 2 3 4 5 6 7 8\n</pre><p><span style=\"font-weight: bolder;\">EXAMPLE OUTPUT</span></p><pre style=\"font-size: 14px;\">4\n2\n4\n6\n8</pre>",
            "#include \"source.cpp\"\n\n#include <iostream>\n#include <sstream>\nusing namespace std;\n\nint main() {\n\tHT map;\n\t\n\tint key1;\n\tint value1;\n\tcin >> key1 >> value1;\n\tmap.put(key1, value1);\n\t\n\tstring key2;\n\tstring value2;\n\tcin >> key2 >> value2;\n\tmap.put(key2, value2);\n\t\n\tint key3;\n\tstring value3;\n\tcin >> key3 >> value3;\n\tmap.put(key3, value3);\n\t\n\tstring key4;\n\tint value4;\n\tcin >> key4 >> value4;\n\tmap.put(key4, value4);\n\t\n\tcout << map.size() << endl;\n\tcout << (int)map[key1] << endl;\n\tcout << (string)map[key2] << endl;\n\tcout << (string)map[key3] << endl;\n\tcout << (int)map[key4] << endl;\n}",
            "#include <iostream>\n#include <sstream>\n#include<map>\n#include<vector>\n#include<string>\nusing namespace std;\n#define I(i,n) for (size_t i = 0; i < n; ++ i)\n\nclass NoSuchKeyException {};\nclass HT{\n    private:\n    class Tuple{\n        public:\n        int int_Key;\n        string string_Key;\n        int int_value;\n        string string_value;\n        bool in_use;\n        bool keyIsInt;\n        bool keyIsString;\n        Tuple() : in_use(false), keyIsInt(false), keyIsString(false) {}\n        Tuple(int key, int val): int_Key(key), int_value(val), in_use(true), keyIsInt(true), keyIsString(false) {}\n        Tuple(int key, string val): int_Key(key),string_value(val), in_use(true),  keyIsInt(true), keyIsString(false){}\n        Tuple(string key, int val): string_Key(key), int_value(val), in_use(true),  keyIsInt(false), keyIsString(true){}\n        Tuple(string key, string val): string_Key(key),string_value(val), in_use(true),keyIsInt(false), keyIsString(true) {}\n        operator int (){\n            return int_value;\n        }\n        operator string(){\n            return string_value;\n        }\n        void operator=(int val){\n            this->int_value = val;\n        }\n        void operator=(string val){\n            this->string_value = val;\n        }\n    };\n   vector<Tuple> tuples;\n\tsize_t _size;\n    size_t indexofKey(const int & key) const {\n        I(i, _size){\n            if(tuples[i].keyIsInt && tuples[i].int_Key == key){\n                return i;\n            }\n        }\n        return -1;\n\t}\n    size_t indexofKey(const string & key) const {\n        I(i, _size){\n            if(tuples[i].keyIsString && tuples[i].string_Key == key){\n                return i;\n           }\n        }\n        return -1;\n\t}\n\n    public:\n    HT() : _size(0){\n        tuples.resize(2);\n    }\n    int size() const{\n        return _size;\n    }\n    Tuple & operator [](int key){\n        int index = indexofKey(key);\n        if (index != -1) \n        \treturn tuples[index];\n        else{\n            tuples[_size].string_Key = key;\n            tuples[_size].keyIsInt = false;\n            tuples[_size].keyIsString = true;\n            _size++;\n            if (_size * 2 > tuples.size()) _double_tuples();\n            return tuples[_size - 1];\n\n        }   \n    }\n    Tuple & operator [](string key){\n        int index = indexofKey(key);\n        if (index != -1) \n        return tuples[index];\n        else{\n            tuples[_size].string_Key = key;\n            tuples[_size].keyIsInt = false;\n            tuples[_size].keyIsString = true;\n            _size++;\n            if (_size * 2 > tuples.size()) _double_tuples();\n            return tuples[_size - 1];\n\n        }  \n    }\n    void _double_tuples(){\n        vector<Tuple> non_empty_tuples;\n        for (int i = 0; i < _size; ++i){\n            if (tuples[i].in_use) non_empty_tuples.push_back(tuples[i]);\n        }\n        tuples.resize(tuples.size() * 2, Tuple());\n        for (int i = 0; i < non_empty_tuples.size(); ++i){\n            tuples[i] = non_empty_tuples[i];\n        }\n    }\n};\n\n\n",
            "main.cpp: In function ‘int main()’:\nmain.cpp:13:6: error: ‘class HT’ has no member named ‘put’\n  map.put(key1, value1);\n      ^\nmain.cpp:18:6: error: ‘class HT’ has no member named ‘put’\n  map.put(key2, value2);\n      ^\nmain.cpp:23:6: error: ‘class HT’ has no member named ‘put’\n  map.put(key3, value3);\n      ^\nmain.cpp:28:6: error: ‘class HT’ has no member named ‘put’\n  map.put(key4, value4);\n      ^\n",
            1594951200,
            1595854800,
            0,
            1595341374.0120237
        ]
    ]
}