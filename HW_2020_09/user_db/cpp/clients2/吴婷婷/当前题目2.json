{
    "__update_time__": 1595838615.378103,
    "field_names": [
        "题目名",
        "问题",
        "主程序",
        "答案",
        "评语",
        "开始时间",
        "截止时间",
        "分数",
        "提交时间"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "text",
        "text",
        "time",
        "time",
        "number",
        "time"
    ],
    "rows": [
        [
            "A.5 (C++)",
            "<p>写出一个键和值的类型都可以是string或int的哈希表类, HT。<br>本题难度大，参考答案有270行，截止时间延长8天。<br>注意<br></p><ol><li>HT不是一个模版类，但是HT的一个对象可以同时使用int和string的对象作为键。</li><li>HT中去掉了put函数，HT的[]操作符同时具有get和put的功能。</li></ol><p><span style=\"font-weight: bolder;\">EXAMPLE INPUT</span></p><pre style=\"font-size: 14px;\">1 2 3 4 5 6 7 8\n</pre><p><span style=\"font-weight: bolder;\">EXAMPLE OUTPUT</span></p><pre style=\"font-size: 14px;\">4\n2\n4\n6\n8</pre>",
            "#include \"source.cpp\"\n\n#include <iostream>\n#include <sstream>\nusing namespace std;\n\nint main() {\n\tHT map;\n\t\n\tint key1;\n\tint value1;\n\tcin >> key1 >> value1;\n\tmap[key1] = value1;\n\t\n\tstring key2;\n\tstring value2;\n\tcin >> key2 >> value2;\n\tmap[key2] = value2;\n\t\n\tint key3;\n\tstring value3;\n\tcin >> key3 >> value3;\n\tmap[key3] = value3;\n\t\n\tstring key4;\n\tint value4;\n\tcin >> key4 >> value4;\n\tmap[key4] = value4;\n\t\n\tcout << map.size() << endl;\n\tcout << (int)map[key1] << endl;\n\tcout << (string)map[key2] << endl;\n\tcout << (string)map[key3] << endl;\n\tcout << (int)map[key4] << endl;\n}",
            "#include<iostream>\n#include<vector>\n#include<string>\n#include<cstdlib>\nusing namespace std;\nclass HT\n{\t\n\t class Tuple1\n\t {\n\t   public:\n\t\tint key;\n\t\tint val1;\n\t\tstring val2;\n\t\tbool in_use;\n\t\t\n\t\tTuple1() :in_use(false) {};\n\t\toperator int()\n\t\t{\n\t\t\treturn val1;\n\t\t}\n\t\toperator string()\n\t\t{\n\t\t\treturn val2;\n\t\t}\n\t\tvoid operator =(const int &val)\n\t    {\n\t\tthis->val1=val;\n\t    }\n\t    void operator =(const string &val)\n\t    {\n\t\tthis->val2=val;\n\t    }\n\t };\n\tclass Tuple2\n\t  {\n\t   public:\n\t\tstring key;\n\t\tint val1;\n\t\tstring val2;\n\t\tbool in_use;\n\t\t\n\t\tTuple2() :in_use(false) {};\n\t\toperator int()\n\t\t{\n\t\t\treturn val1;\n\t\t}\n\t\toperator string()\n\t\t{\n\t\t\treturn val2;\n\t\t}\n\t\tvoid operator =(const int &val)\n\t    {\n\t\tthis->val1=val;\n\t    }\n\t    void operator =(const string &val)\n\t    {\n\t\tthis->val2=val;\n\t    }\n\t  };\n\tvector<Tuple1> tuples1;\n\tvector<Tuple2> tuples2;\n\n\tint _size=0; \n\t\n\tpublic:\n\tHT():_size(0){\n\t\ttuples1.resize(5000);\n\t\ttuples2.resize(5000);\n\t}\n\t\n\tvoid put(const int &key,const int &val)\n\t{\n\t\ttuples1[_size].key=key;\n\t\ttuples1[_size].val1=val;\n\t\t_size++;\n\t}\n\tvoid put(const int &key,const string &val)\n\t{\n\t\ttuples1[_size].key=key;\n\t\ttuples1[_size].val2=val;\n\t\t_size++;\n\t}\n    void put(const string &key,const int &val)\n\t{\n\t\ttuples2[_size].key=key;\n\t\ttuples2[_size].val1=val;\n\t\t_size++;\n\t}\n\tvoid put(const string &key,const string &val)\n\t{\n\t\ttuples2[_size].key=key;\n\t\ttuples2[_size].val2=val;\n\t\t_size++;\n\t}\n\t\n\tint size()\n\t{\n\t\treturn _size;\n    }\n        \n\tTuple1 &operator [](const int &key)\n\t{\n\t\tfor(int i=0;i<_size;++i)\n    \t{\n    \t\t if(tuples1[i].key==key)\n    \t\t  return tuples1[i];\n\t\t}\n\t\ttuples1[_size].key=key;\n\t\t_size++;\n\t\treturn tuples1[_size-1];\n\t}\n\tTuple2 &operator [](const string &key)\n\t{\n       for(int i=0;i<_size;++i)\n       {\n    \t\t if(tuples2[i].key==key)\n    \t\t  return tuples2[i];\n\t   }\n\t   tuples2[_size].key=key;\n\t   _size++;\n\t   return tuples2[_size-1];\n\t}\n};",
            "",
            1594951200,
            1596200400,
            0,
            -2209017943.0
        ]
    ]
}