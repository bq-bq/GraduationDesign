{
    "__update_time__": 1594867975.1746407,
    "field_names": [
        "题目名",
        "用户名",
        "答案",
        "提交时间",
        "分数",
        "评语"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "time",
        "number",
        "text"
    ],
    "foreign_keys": {},
    "primary_keys": [],
    "rows": [
        [
            "测试1",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nint main()  {\n\tstring s1,s2,s3;\n\tcin >> s1 >> s2 >> s3 ;\n\tcout << s3 << ' ' << s2 << ' ' << s1 << endl;\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}",
            1587529023.1648157,
            100,
            "# 答案正确"
        ],
        [
            "测试2",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tstring s[10];\n\tfor(int i=0;i<10;i++)\n\t\tcin >> s[i];\n   for(int i=0;i<9;i++) {\n\t   for(int j=0;j<9-i;j++) {\n\t\t   if(s[j] > s[j+1]) {\n\t\t\t   string tmp=s[j+1];\n\t\t\t   s[j+1]=s[j];\n\t\t\t   s[j]=tmp;\n\t\t   }\n\t   }\n   }\n\t\n\tfor(int i=0;i<10;i++)\n\t\tcout << s[i] << ' ';\n}\n\n\n\n\n\n\n\n\n\n",
            1587609766.0914214,
            100,
            "# 答案正确"
        ],
        [
            "1.1 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix5x5 {\n    public:\n\t\n\t double matrix[5][5];\n\t\n\t Matrix5x5() {\n\t\t\n\t\t for(int i=0;i<5;i++) {\n\t\t\t  for(int j=0;j<5;j++) {\n\t\t\t\t matrix[i][j]=0; \n\t\t\t  }\n\t\t  }\n\t }\n\t\n\t\n\t   void set(int a,int b,int c) {\n\t\t   matrix[a][b]=c;\n\t   }\n     \n\t  Matrix5x5 operator+(Matrix5x5 &p, Matrix5x5 &t) {\n\t\t  Matrix5x5 res=new double[][];\n\t\t   for(int i=0;i<5;i++) {\n\t\t\t  for(int j=0;j<5;j++) {\n\t\t\t\t res[i][j] = p[i][j] + t[i][j];\n\t\t\t  }\n\t\t  }\n\t\t  return res;\n\t  }\n\t\n\t  double get(int a,int b) {\n\t\t  return matrix[a][b];\n\t  }\n     \n};\n\n\t\t  \n\n\n\n\n\n\n\n\n",
            1588130600.8708029,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:23:50: error: ‘Matrix5x5 Matrix5x5::operator+(Matrix5x5&, Matrix5x5&)’ must take either zero or one argument\n    Matrix5x5 operator+(Matrix5x5 &p, Matrix5x5 &t) {\n                                                  ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:25:10: error: no match for ‘operator+’ (operand types are ‘Matrix5x5’ and ‘Matrix5x5’)\n  m3 = m1 + m2;\n          ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::move_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\n"
        ],
        [
            "2020/05/08",
            "米仁沙·纳斯尔",
            "double &Tensor_get(int dimensions, const int sizes[], double data[], int x0, int x1, int x2, int x3)  {\n\tif(dimensions==2)\n\t  return data[x0];\n\tif(dimensions==3)\n\t\treturn data[x0*x1];\n\tif(dimensions==4)\n\t\treturn data[x0*x1*x2];\n\tif(dimensions==5)\n\t\treturn data[x0*x1*x2*x3];\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}",
            1588909037.381035,
            66,
            "# 答案不正确\n\n# 随机输入:\n0 2\n2 3\n2 1\n\n1 1 2\n1 1 2\n2 1 2\n\n2 3 2 0\n1 3 0 2\n0 2 1 5\n\n\n\n# 参考答案:\n2\n23\n21\n\n112\n112\n212\n\n2320\n1302\n215\n\n\n# 我的答案:\n3\n23\n23\n\n114\n114\n214\n\n2325\n2305\n2305\n"
        ],
        [
            "2020/05/14",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nvoid Tensor_print(int dimensions, const int sizes[], const double data[])  {\n\tint k=0;\n\twhile(sizes[k]!=0) {\n\t\t\n\t\t   for (int i = 0; i < dimensions; ++ i) {\n\t\t\t  for (int j = 0; j < sizes[0]; ++ j) {\n\t\t\t\t cout << '\\t' << data[k] << '\\t';\n\t\t\t  }\n\t\t\t   cout << endl;\n\t\t\t}\n\t\t\t\n\n\t\t\n\t\tk++;\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1589426656.7871659,
            6,
            "# 答案不正确\n\n# 随机输入:\n1.3\n2.5\n2.7\n9.0\n\n\n# 参考答案:\nTensor of 5\n1.3\n1.3\n1.3\n1.3\n1.3\n\nTensor of 3x4\n    2.5    2.5    2.5    2.5\n    2.5    2.5    2.5    2.5\n    2.5    2.5    2.5    2.5\n\nTensor of 3x4x5\ndata[0]\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\ndata[1]\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\ndata[2]\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\n    2.7    2.7    2.7    2.7    2.7\n\nTensor of 2x3x4x5\ndata[0][0]\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\ndata[0][1]\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\ndata[0][2]\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\ndata[1][0]\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\ndata[1][1]\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\ndata[1][2]\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\n    9    9    9    9    9\n\n\n# 我的答案:\n\t1.3\t\t1.3\t\t1.3\t\t1.3\t\t1.3\t\n\t1.3\t\t1.3\t\t1.3\t\t1.3\t\t1.3\t\n\t1.3\t\t1.3\t\t1.3\t\t1.3\t\t1.3\t\n\t1.3\t\t1.3\t\t1.3\t\t1.3\t\t1.3\t\n\t1.3\t\t1.3\t\t1.3\t\t1.3\t\t1.3\t\n\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\t2.5\t\t2.5\t\t2.5\t\n\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\t2.7\t\t2.7\t\t2.7\t\n\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n\t9\t\t9\t\n"
        ],
        [
            "2.1 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n    \n    public:\n     Matrix(int a,int b) {\n         rows=a;\n         columns=b;\n         for(int i=0;i<rows*columns;i++)\n           values[i]=0;\n     }\n     \n    ~Matrix() {\n        \n    }\n\n    void print() {\n        int k=0;\n        for(int i=0;i<rows;i++) {\n\t\t\t   cout << \" \" << \" \" << \" \" << \" \";\n            for(int j=0;j<columns;j++) {\n                cout << values[k] << \" \" << \" \" << \" \" << \" \";\n                k++;\n            }\n            cout << endl;\n        }\n          \n    }\n    \n    \n    private:\n    \n     int rows;\n     int columns;\n     double values[1000];\n};\n\n",
            1589446886.3592248,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n    \n    public:\n     Matrix(int a,int b,double val[]) {\n         rows=a;\n         columns=b;\n         for(int i=0;i<rows*columns;i++)\n           values[i]=val[i];\n     }\n     \n    ~Matrix() {\n        \n    }\n\n    void print() {\n        int k=0;\n        for(int i=0;i<rows;i++) {\n\t\t\t   //cout << \" \" << \" \" << \" \" << \" \" << \" \";\n            for(int j=0;j<columns;j++) {\n\t\t\t\t     cout.setf(ios::right);\n                cout.width(5);\n\t\t\t\t     cout << values[k] ;\n                k++;\n            }\n            cout << endl;\n        }\n          \n    }\n    \n    \n    private:\n    \n     int rows;\n     int columns;\n     double values[1000];\n};\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1589448402.013255,
            100,
            "# 答案正确"
        ],
        [
            "2.3 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n    \n    public:\n     Matrix(int a,int b,double val[]) {\n         rows=a;\n         columns=b;\n         for(int i=0;i<rows*columns;i++)\n           values[i]=val[i];\n     }\n     \n    ~Matrix() {\n        \n    }\n    \n    Matrix(const Matrix &matrix2)  {\n\t\tthis->rows = matrix2.rows;\n\t\tthis->columns = matrix2.columns;\n        for(int i=0;i<rows*columns;i++)\n          this->values[i]=matrix2.values[i];\n\t\t \n    }\n\n    void print() {\n        int k=0;\n        for(int i=0;i<rows;i++) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \";\n           for(int j=0;j<columns;j++) {\n\t\t\t  cout << values[k] << \" \" << \" \" << \" \" << \" \";\n                k++;\n            }\n            cout << endl;\n        }\n          \n    }\n    \n    \n    private:\n    \n     int rows;\n     int columns;\n     double values[1000];\n};\n\n\n\n\n\n\n\n\n",
            1589449672.7156951,
            100,
            "# 答案正确"
        ],
        [
            "2.5 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n    \n    public:\n    Matrix(int a,int b) {\n         rows=a;\n         columns=b;\n         for(int i=0;i<rows*columns;i++)\n           values[i]=0;\n     }\n     \n     \n    Matrix(int a,int b,double val[]) {\n         rows=a;\n         columns=b;\n         for(int i=0;i<rows*columns;i++)\n           values[i]=val[i];\n     }\n     \n    ~Matrix() {\n        \n    }\n    \n \n    \n    Matrix getRow(int a);\n\t\n    Matrix getColumn(int a);\n\n    void print() {\n        int k=0;\n        for(int i=0;i<rows;i++) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \";\n           for(int j=0;j<columns;j++) {\n\t\t\t  cout << values[k] << \" \" << \" \" << \" \" << \" \";\n                k++;\n            }\n            cout << endl;\n        }\n          \n    }\n    \n    \n    private:\n    \n     int rows;\n     int columns;\n     double values[1000];\n};\n\n\n\nMatrix Matrix::getRow(int a) {\n\t\tMatrix p;\n\t    p.Matrix(1,columns);\n\t\t\n\t\tint j=0;\n        for(int i=(a-1)*columns;i<(a-1)*columns+columns;i++)  {\n          p.values[j]=this->values[i];\n\t\t  j++;\n\t\t}\n\t\t\n\t\treturn p;\n }\n    \nMatrix Matrix::getColumn(int a) {\n\t\tMatrix p;\n\t    p.Matrix(rows,1);\n\t\t\n\t\tint j=0;\n        for(int i=a-1;i<columns*rows;i += columns) {\n          p.values[j]=this->values[i];\n\t\t  j++;\n\t\t}\n\t\t\n\t\treturn p;\n}\n\n    void print() {\n        int k=0;\n        for(int i=0;i<rows;i++) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \";\n           for(int j=0;j<columns;j++) {\n\t\t\t  cout << values[k] << \" \" << \" \" << \" \" << \" \";\n                k++;\n            }\n            cout << endl;\n        }\n          \n     }\n    \n\n\n\n\n\n\n\n\n",
            1589455760.8636296,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In member function ‘Matrix Matrix::getRow(int)’:\nsource.cpp:56:10: error: no matching function for call to ‘Matrix::Matrix()’\n   Matrix p;\n          ^\nsource.cpp:15:5: note: candidate: Matrix::Matrix(int, int, double*)\n     Matrix(int a,int b,double val[]) {\n     ^\nsource.cpp:15:5: note:   candidate expects 3 arguments, 0 provided\nsource.cpp:7:5: note: candidate: Matrix::Matrix(int, int)\n     Matrix(int a,int b) {\n     ^\nsource.cpp:7:5: note:   candidate expects 2 arguments, 0 provided\nsource.cpp:4:7: note: candidate: constexpr Matrix::Matrix(const Matrix&)\n class Matrix {\n       ^\nsource.cpp:4:7: note:   candidate expects 1 argument, 0 provided\nsource.cpp:57:8: error: invalid use of ‘Matrix::Matrix’\n      p.Matrix(1,columns);\n        ^\nsource.cpp: In member function ‘Matrix Matrix::getColumn(int)’:\nsource.cpp:69:10: error: no matching function for call to ‘Matrix::Matrix()’\n   Matrix p;\n          ^\nsource.cpp:15:5: note: candidate: Matrix::Matrix(int, int, double*)\n     Matrix(int a,int b,double val[]) {\n     ^\nsource.cpp:15:5: note:   candidate expects 3 arguments, 0 provided\nsource.cpp:7:5: note: candidate: Matrix::Matrix(int, int)\n     Matrix(int a,int b) {\n     ^\nsource.cpp:7:5: note:   candidate expects 2 arguments, 0 provided\nsource.cpp:4:7: note: candidate: constexpr Matrix::Matrix(const Matrix&)\n class Matrix {\n       ^\nsource.cpp:4:7: note:   candidate expects 1 argument, 0 provided\nsource.cpp:70:8: error: invalid use of ‘Matrix::Matrix’\n      p.Matrix(rows,1);\n        ^\nsource.cpp: In function ‘void print()’:\nsource.cpp:83:23: error: ‘rows’ was not declared in this scope\n         for(int i=0;i<rows;i++) {\n                       ^\nsource.cpp:85:26: error: ‘columns’ was not declared in this scope\n            for(int j=0;j<columns;j++) {\n                          ^\nsource.cpp:86:14: error: ‘values’ was not declared in this scope\n      cout << values[k] << \" \" << \" \" << \" \" << \" \";\n              ^\n"
        ],
        [
            "2.6 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n    \n    public:\n     Matrix(int a,int b,double val[]) {\n         rows=a;\n         columns=b;\n         for(int i=0;i<rows*columns;i++)\n           values[i]=val[i];\n     }\n     \n    ~Matrix() {\n        \n    }\n    \n    Matrix(const Matrix &matrix2)  {\n\t\tthis->rows = matrix2.rows;\n\t\tthis->columns = matrix2.columns;\n        for(int i=0;i<rows*columns;i++)\n          this->values[i]=matrix2.values[i];\n\t\t \n    }\n\n    void print() {\n        int k=0;\n        for(int i=0;i<rows;i++) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \";\n           for(int j=0;j<columns;j++) {\n\t\t\t  cout << values[k] << \" \" << \" \" << \" \" << \" \";\n                k++;\n            }\n            cout << endl;\n        }\n          \n    }\n\t\n\tMatrix concatenateRows(const Matrix &matrix2);\n\t\n\tMatrix concatenateColumns(const Matrix &matrix2);\n    \n    private:\n    \n     int rows;\n     int columns;\n     double values[1000];\n};\n\n\nMatrix Matrix::concatenateRows(const Matrix &matrix2) {\n\t\tMatrix p;\n\t\tp.rows=this->rows+matrix2.rows;\n\t\tp.columns=this->columns;\n\t\tint a;\n\t\tfor(int i=0;i<columns*rows;i++) {\n\t\t\tp.values[i]=this->values[i];\n\t\t\ta=i;\n\t\t}\n\t\t\n\t    for(int i=0;i<matrix2.columns*matrix2.rows;i++) {\n\t\t\ta++;\n\t\t\tp.values[a]=this->values[i];\n\t\t}\n\t\t\n\t\treturn p;\n}\n\t\nMatrix Matrix::concatenateColumns(const Matrix &matrix2) {\n\t\tMatrix p;\n\t\tp.rows=this->rows;\n\t\tp.columns=this->columns+matrix2.columns;\n\t\tint k=0;\n\t\tfor(int i=0;i<p.rows;i++) {\n\t\t\tfor(int j=0;j<this->columns;j++)  {\n\t\t\t\tp.values[k]=this->values[j];\n\t\t\t\tk++;\n\t\t\t}\n\t\t\tfor(int j=0;j<matrix2.columns;j++) {\n\t\t\t\tp.values[k]=this->values[j];\n\t\t\t\tk++;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\treturn p;\n}\n\t\n\t\n    \n    \n\n\n\n\n\n\n\n\n\n\n",
            1589453778.1784387,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In member function ‘Matrix Matrix::concatenateRows(const Matrix&)’:\nsource.cpp:52:10: error: no matching function for call to ‘Matrix::Matrix()’\n   Matrix p;\n          ^\nsource.cpp:18:5: note: candidate: Matrix::Matrix(const Matrix&)\n     Matrix(const Matrix &matrix2)  {\n     ^\nsource.cpp:18:5: note:   candidate expects 1 argument, 0 provided\nsource.cpp:7:6: note: candidate: Matrix::Matrix(int, int, double*)\n      Matrix(int a,int b,double val[]) {\n      ^\nsource.cpp:7:6: note:   candidate expects 3 arguments, 0 provided\nsource.cpp: In member function ‘Matrix Matrix::concatenateColumns(const Matrix&)’:\nsource.cpp:70:10: error: no matching function for call to ‘Matrix::Matrix()’\n   Matrix p;\n          ^\nsource.cpp:18:5: note: candidate: Matrix::Matrix(const Matrix&)\n     Matrix(const Matrix &matrix2)  {\n     ^\nsource.cpp:18:5: note:   candidate expects 1 argument, 0 provided\nsource.cpp:7:6: note: candidate: Matrix::Matrix(int, int, double*)\n      Matrix(int a,int b,double val[]) {\n      ^\nsource.cpp:7:6: note:   candidate expects 3 arguments, 0 provided\n"
        ],
        [
            "2.9 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n  private:\n\tint rows;\n\tint columns;\n\tdouble *values;\n\t\n  public:\n\tMatrix(int rows,int columns,double *values);\n\tMatrix(const Matrix &matrix2);\n\t~Matrix();\n\tvoid print();\n\tMatrix operator+(const Matrix &matrix2);\n\tMatrix operator+(double value);\n\tMatrix operator-(const Matrix &matrix2);\n\tMatrix operator-(double value);\n};\n\n\nMatrix::Matrix(int rows,int columns,double *values)  {\n\trows=rows;\n\tcolumns=columns;\n\tvalues=new double [rows*columns];\n\tfor(int i=0;i<rows*columns;i++)\n\t\tvalues[i]=values[i];\n}\n\nMatrix::Matrix(const Matrix &matrix2)  {\n\trows=matrix2.rows;\n\tcolumns=matrix2.columns;\n\tvalues=new double [rows*columns];\n\tfor(int i=0;i<rows*columns;i++)\n\t\tvalues[i]=matrix2.values[i];\n}\n\nMatrix::~Matrix()  {\n\tdelete [] values;\n}\n\nvoid Matrix::print()  {\n\tint k=0;\n\tfor (int i = 0; i < rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tcout << this->values[k] << '\\t';\n\t\t\tk++;\n\t\t}\n\t\tcout << endl;\n\t}\n}\n\nMatrix Matrix::operator+(const Matrix &matrix2) {\n\tMatrix matrix3(this->rows,this->columns,this->values[]);\n\tfor (int i = 0; i < rows*columns; ++ i) \n\t  matrix3.values[i]=this->values[i]+matrix2.values[i];\n\treturn matrix3;\n}\n\nMatrix Matrix::operator+(double value)  {\n\tMatrix matrix3(this->rows,this->columns,this->values[]);\n\tfor (int i = 0; i < rows*columns; ++ i) \n\t  matrix3.values[i]=this->values[i]+value;\n\treturn matrix3;\n}\n\nMatrix Matrix::operator-(const Matrix &matrix2)  {\n\tMatrix matrix3(this->rows,this->columns,this->values[]);\n\tfor (int i = 0; i < rows*columns; ++ i) \n\t  matrix3.values[i]=this->values[i]-matrix2.values[i];\n\treturn matrix3;\n}\n\nMatrix Matrix::operator-(double value)  {\n\tMatrix matrix3(this->rows,this->columns,this->values[]);\n\tfor (int i = 0; i < rows*columns; ++ i) \n\t  matrix3.values[i]=this->values[i]-value;\n\treturn matrix3;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1590032371.483642,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In member function ‘Matrix Matrix::operator+(const Matrix&)’:\nsource.cpp:54:55: error: expected primary-expression before ‘]’ token\n  Matrix matrix3(this->rows,this->columns,this->values[]);\n                                                       ^\nsource.cpp: In member function ‘Matrix Matrix::operator+(double)’:\nsource.cpp:61:55: error: expected primary-expression before ‘]’ token\n  Matrix matrix3(this->rows,this->columns,this->values[]);\n                                                       ^\nsource.cpp: In member function ‘Matrix Matrix::operator-(const Matrix&)’:\nsource.cpp:68:55: error: expected primary-expression before ‘]’ token\n  Matrix matrix3(this->rows,this->columns,this->values[]);\n                                                       ^\nsource.cpp: In member function ‘Matrix Matrix::operator-(double)’:\nsource.cpp:75:55: error: expected primary-expression before ‘]’ token\n  Matrix matrix3(this->rows,this->columns,this->values[]);\n                                                       ^\n"
        ],
        [
            "2.4 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n  private:\n\tint rows;\n\tint columns;\n\tdouble *values;\n\t\n   public:\n\tMatrix(int row,int column);\n\tMatrix(int row,int column,double value[]);\n\t~Matrix();\n\tvoid print();\n\tvoid set(int row,int column,double value);\n\tvoid operator=(const Matrix &matrix2);\n\t\n};\n\n\nMatrix::Matrix(int row,int column) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=0;\n}\n\nMatrix::Matrix(int row,int column,double value[]) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=value[i];\n}\n\nMatrix::~Matrix() {\n\tdelete [] values;\n}\nvoid Matrix::print() {\n\tint k=0;\n\tfor (int i = 0; i < rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \" << values[k];\n\t\t\tk++;\n\t\t}\n\t\tcout << \"\\n\";\n\t}\n}\n\nvoid Matrix::set(int row,int column,double value) {\n\tvalues[row*column+2]=value;\n}\n\nvoid Matrix::operator=(const Matrix &matrix2) {\n\trows = matrix2.rows;\n\tcolumns = matrix2.columns;\n\tfor (int i = 0; i < matrix2.rows*matrix2.columns; ++ i) \n\t\tvalues[i]=matrix2.values[i];\n}\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1590060752.5262928,
            100,
            "# 答案正确"
        ],
        [
            "2.7 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n  private:\n\tint rows;\n\tint columns;\n\tdouble *values;\n\t\n   public:\n\tMatrix(int row,int column);\n\tMatrix(int row,int column,double value[]);\n\t~Matrix();\n\tvoid print();\n\tvoid set(int row,int column,double value);\n\tvoid operator=(const Matrix &matrix2);\n\tMatrix reshape(int rows, int columns);\n};\n\n\nMatrix::Matrix(int row,int column) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=0;\n}\n\nMatrix::Matrix(int row,int column,double value[]) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=value[i];\n}\n\nMatrix::~Matrix() {\n\tdelete [] values;\n}\nvoid Matrix::print() {\n\tint k=0;\n\tfor (int i = 0; i < rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \" << values[k];\n\t\t\tk++;\n\t\t}\n\t\tcout << \"\\n\";\n\t}\n}\n\nvoid Matrix::set(int row,int column,double value) {\n\tvalues[row*column+2]=value;\n}\n\nvoid Matrix::operator=(const Matrix &matrix2) {\n\trows = matrix2.rows;\n\tcolumns = matrix2.columns;\n\tfor (int i = 0; i < matrix2.rows*matrix2.columns; ++ i) \n\t\tvalues[i]=matrix2.values[i];\n}\n\nMatrix Matrix::reshape(int rows, int columns)  {\n\tMatrix matrix2(rows,columns);\n\tint k=0,s=0;\n\tfor (int i = 0; i < rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tmatrix2.values[k]=this->values[s];\n\t\t\tk++;\n\t\t\ts += 12;\n\t\t\tif(s>=rows*columns)\n\t\t\t\ts = s-rows*columns+1;\n\t\t}\n\t}\n\treturn matrix2;\n}\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1590062039.8211246,
            100,
            "# 答案正确"
        ],
        [
            "2.8 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n  private:\n\tint rows;\n\tint columns;\n\tdouble *values;\n\t\n   public:\n\tMatrix(int row,int column);\n\tMatrix(int row,int column,double value[]);\n\t~Matrix();\n\tvoid print();\n\tvoid set(int row,int column,double value);\n\tvoid operator=(const Matrix &matrix2);\n\tMatrix transpose();\n};\n\n\nMatrix::Matrix(int row,int column) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=0;\n}\n\nMatrix::Matrix(int row,int column,double value[]) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=value[i];\n}\n\nMatrix::~Matrix() {\n\tdelete [] values;\n}\nvoid Matrix::print() {\n\tint k=0;\n\tfor (int i = 0; i < rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \" << values[k];\n\t\t\tk++;\n\t\t}\n\t\tcout << \"\\n\";\n\t}\n}\n\nvoid Matrix::set(int row,int column,double value) {\n\tvalues[row*column+2]=value;\n}\n\nvoid Matrix::operator=(const Matrix &matrix2) {\n\trows = matrix2.rows;\n\tcolumns = matrix2.columns;\n\tfor (int i = 0; i < matrix2.rows*matrix2.columns; ++ i) \n\t\tvalues[i]=matrix2.values[i];\n}\n\nMatrix Matrix::transpose() {\n\tMatrix matrix2(this->columns,this->rows);\n\tint s=0,k=0;\n\tfor (int i = 0; i < this->columns*this->rows; ++ i) {\n\t\t\tmatrix2.values[k]=this->values[s];\n\t\t\tk++;\n\t\t\ts += this->columns;\n\t\t\tif(s>=(this->rows)*(this->columns))\n\t\t\t\ts = s-(this->rows)*(this->columns)+1;\n\t}\n\treturn matrix2;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1590063221.6123059,
            100,
            "# 答案正确"
        ],
        [
            "2.10 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n  private:\n\tint rows;\n\tint columns;\n\tdouble *values;\n\t\n   public:\n\tMatrix(int row,int column);\n\tMatrix(int row,int column,double value[]);\n\t~Matrix();\n\tvoid print();\n\tvoid set(int row,int column,double value);\n\tvoid operator=(const Matrix &matrix2);\n\tMatrix operator * (const Matrix & matrix2);\n    Matrix operator * (double value);\n\t\n};\n\n\nMatrix::Matrix(int row,int column) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=0;\n}\n\nMatrix::Matrix(int row,int column,double value[]) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=value[i];\n}\n\nMatrix::~Matrix() {\n\tdelete [] values;\n}\nvoid Matrix::print() {\n\tint k=0;\n\tfor (int i = 0; i < rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \" << values[k];\n\t\t\tk++;\n\t\t}\n\t\tcout << \"\\n\";\n\t}\n}\n\nvoid Matrix::set(int row,int column,double value) {\n\tvalues[row*column+2]=value;\n}\n\nvoid Matrix::operator=(const Matrix &matrix2) {\n\trows = matrix2.rows;\n\tcolumns = matrix2.columns;\n\tfor (int i = 0; i < matrix2.rows*matrix2.columns; ++ i) \n\t\tvalues[i]=matrix2.values[i];\n}\n\nMatrix Matrix::operator * (const Matrix & matrix2) {\n\tMatrix matrix3(this->rows,matrix2.columns);\n\t\n\tdouble s;\n\tfor (int i = 0; i < this->rows*this->columns; ++ i) {\n\t    s=0;\n\t\tint k=0,r=0;\n\t\tfor (int j = 0; j < this->columns; ++ j) {\n\t\t\ts += this->values[k]*matrix2.values[r];\n\t\t\tk++;\n\t\t\tr += matrix2.columns;\n\t\t\tif(r>=matrix2.rows*matrix2.columns)\n\t\t\t\tr = r-matrix2.rows*matrix2.columns+1;\n\t\t}\n\t\t\n\t\tmatrix3.values[i]=s;\n\t\t\n\t}\n\t\n\treturn matrix3;\n}\n\n\nMatrix Matrix::operator * (double value) {\n\tMatrix matrix2(this->rows,this->columns);\n\tfor (int i = 0; i < this->rows*this->columns; ++ i) {\n\t\t\n\t    matrix2.values[i]=this->values[i]*value;\n\t\t\n\t}\n\t\n\treturn matrix2;\n}\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1590064540.335949,
            86,
            "# 答案不正确\n\n# 随机输入:\n8 6\n2 4 7 3 4 1 8 9 2 1 2 1 4 5 1 3 3 5 5 9 7 1 8 9 5 8 5 8 1 3 7 2 8 5 1 6 5 7 3 3 2 2 6 7 9 4 3 7 \n6 8\n2 2 1 4 2 6 9 9 9 6 8 4 3 8 4 9 9 4 2 8 9 3 1 6 7 9 1 9 7 4 3 8 6 6 1 1 2 9 4 3 4 5 7 6 4 1 4 7 \n9.01\n\n\n# 参考答案:\n    2    4    7    3    4    1\n    8    9    2    1    2    1\n    4    5    1    3    3    5\n    5    9    7    1    8    9\n    5    8    5    8    1    3\n    7    2    8    5    1    6\n    5    7    3    3    2    2\n    6    7    9    4    3    7\n\n    2    2    1    4    2    6    9    9\n    9    6    8    4    3    8    4    9\n    9    4    2    8    9    3    1    6\n    7    9    1    9    7    4    3    8\n    6    6    1    1    2    9    4    3\n    4    5    7    6    4    1    4    7\n\n    152    112    62    117    112    114    70    139\n    138    104    94    101    76    149    125    186\n    121    112    87    104    79    111    98    155\n    245    194    163    183    159    208    159    263\n    201    171    109    183    149    153    122    235\n    169    139    87    182    153    117    122    214\n    141    113    86    113    91    127    101    170\n    230    179    136    205    176    169    143    261\n\n    18.02    36.04    63.07    27.03    36.04    9.01\n    72.08    81.09    18.02    9.01    18.02    9.01\n    36.04    45.05    9.01    27.03    27.03    45.05\n    45.05    81.09    63.07    9.01    72.08    81.09\n    45.05    72.08    45.05    72.08    9.01    27.03\n    63.07    18.02    72.08    45.05    9.01    54.06\n    45.05    63.07    27.03    27.03    18.02    18.02\n    54.06    63.07    81.09    36.04    27.03    63.07\n\n\n\n# 我的答案:\n    2    4    7    3    4    1\n    8    9    2    1    2    1\n    4    5    1    3    3    5\n    5    9    7    1    8    9\n    5    8    5    8    1    3\n    7    2    8    5    1    6\n    5    7    3    3    2    2\n    6    7    9    4    3    7\n\n    2    2    1    4    2    6    9    9\n    9    6    8    4    3    8    4    9\n    9    4    2    8    9    3    1    6\n    7    9    1    9    7    4    3    8\n    6    6    1    1    2    9    4    3\n    4    5    7    6    4    1    4    7\n\n    152    152    152    152    152    152    152    152\n    152    152    152    152    152    152    152    152\n    152    152    152    152    152    152    152    152\n    152    152    152    152    152    152    152    152\n    152    152    152    152    152    152    152    152\n    152    152    152    152    152    152    152    152\n    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0\n\n    18.02    36.04    63.07    27.03    36.04    9.01\n    72.08    81.09    18.02    9.01    18.02    9.01\n    36.04    45.05    9.01    27.03    27.03    45.05\n    45.05    81.09    63.07    9.01    72.08    81.09\n    45.05    72.08    45.05    72.08    9.01    27.03\n    63.07    18.02    72.08    45.05    9.01    54.06\n    45.05    63.07    27.03    27.03    18.02    18.02\n    54.06    63.07    81.09    36.04    27.03    63.07\n\n"
        ],
        [
            "2.11 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\n  private:\n\tint rows;\n\tint columns;\n\tdouble *values;\n\t\n   public:\n\tMatrix(int row,int column);\n\tMatrix(int row,int column,double value[]);\n\t~Matrix();\n\tvoid print();\n\tvoid set(int row,int column,double value);\n\tvoid operator=(const Matrix &matrix2);\n\t Matrix max();\n     Matrix min();\n     Matrix sum();\n\t\n\t\n};\n\n\nMatrix::Matrix(int row,int column) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=0;\n}\n\nMatrix::Matrix(int row,int column,double value[]) {\n\trows=row;\n\tcolumns=column;\n\tvalues = new double[1000];\n\tfor (int i = 0; i < row*column; ++ i) \n\t\tvalues[i]=value[i];\n}\n\nMatrix::~Matrix() {\n\tdelete [] values;\n}\nvoid Matrix::print() {\n\tint k=0;\n\tfor (int i = 0; i < rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \" << values[k];\n\t\t\tk++;\n\t\t}\n\t\tcout << \"\\n\";\n\t}\n}\n\nvoid Matrix::set(int row,int column,double value) {\n\tvalues[row*column+2]=value;\n}\n\nvoid Matrix::operator=(const Matrix &matrix2) {\n\trows = matrix2.rows;\n\tcolumns = matrix2.columns;\n\tfor (int i = 0; i < matrix2.rows*matrix2.columns; ++ i) \n\t\tvalues[i]=matrix2.values[i];\n}\n\nMatrix Matrix::max() {\n\tMatrix matrix2(this->rows,this->columns);\n\tint m=this->values[0];\n\tint k=0,flag=0;\n\tfor (int i = 0; i < this->rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tif(values[k]>m)  {\n\t\t\t  m=values[k];\n\t\t\t\tflag=k;\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\treturn matrix2;\n}\n\nMatrix Matrix::min() {\n\tMatrix matrix2(this->rows,this->columns);\n\tint m=this->values[0];\n\tint k=0,flag=0;\n\tfor (int i = 0; i < this->rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tif(values[k]>m)  {\n\t\t\t  m=values[k];\n\t\t\t\tflag=k;\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\treturn matrix2;\n}\n\nMatrix Matrix::sum() {\n\tMatrix matrix2(this->rows,this->columns);\n\tint m=this->values[0];\n\tint k=0,flag=0;\n\tfor (int i = 0; i < this->rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tif(values[k]>m)  {\n\t\t\t  m=values[k];\n\t\t\t\tflag=k;\n\t\t\t}\n\t\t\tk++;\n\t\t}\n\t}\n\t\n\treturn matrix2;\n}\n\n\n\n\n\n\n\n\n",
            1590065904.463283,
            36,
            "# 答案不正确\n\n# 随机输入:\n6 7\n77 1 96 65 79 55 93 28 79 69 48 59 49 27 19 44 22 5 4 99 7 78 37 22 65 83 10 22 19 66 64 39 95 97 99 47 75 80 49 94 12 4 \n\n# 参考答案:\n    77    1    96    65    79    55    93\n    28    79    69    48    59    49    27\n    19    44    22    5    4    99    7\n    78    37    22    65    83    10    22\n    19    66    64    39    95    97    99\n    47    75    80    49    94    12    4\n\n    78    79    96    65    95    99    99\n\n    99\n\n    19    1    22    5    4    10    4\n\n    1\n\n    268    302    353    271    414    322    252\n\n    2182\n\n\n\n# 我的答案:\n    77    1    96    65    79    55    93\n    28    79    69    48    59    49    27\n    19    44    22    5    4    99    7\n    78    37    22    65    83    10    22\n    19    66    64    39    95    97    99\n    47    75    80    49    94    12    4\n\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0\n\n"
        ],
        [
            "6.2 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\ntemplate <typename T>\n\nclass Matrix {\n\tpublic:\n\t  Matrix(int row,int column);\n\t ~Matrix();\n\t  void print();\n\n\t\t  \n\tprivate:\n\t  int rows;\n\t  int columns;\n\t  T *val;\n\t\n\t\n};\n\ntemplate <typename T>\nMatrix<T>::Matrix(int row,int column) {\n\t\t  int rows =  row;\n\t\t  int columns = column;\n\t\t  val = new T[row*column];\n\t\t  for (int i = 0; i < row*column; ++ i) \n\t\t\t  val[i] = 0;\n}\n\ntemplate <typename T>\nMatrix<T>::~Matrix() {\n\tdelete [] val;\n}\n\ntemplate <typename T>\nvoid Matrix<T>::print() {\n\t\t  int k=0;\n\t\t  for (int i = 0; i < rows; ++ i) {\n\t\t\t  for (int j = 0; j < columns; ++ j) {\n\t\t\t\t  cout << \" \" << \" \" << \" \" << \" \" << this->val[k];\n\t\t\t\t  k++;\n\t\t\t  }\n\t\t\t  cout << endl;\n\t\t  }\n}\n\t\n\t  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1590636077.8897283,
            0,
            "# 答案不正确\n\n# 随机输入:\n4\n9\n\n\n# 参考答案:\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n    0    0    0    0    0    0    0    0    0\n\n\n# 我的答案:\n\n"
        ],
        [
            "6.1 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\ntemplate <typename T>\nclass Matrix {\n\tpublic:\n\t  Matrix(int rows,int columns);\n\t  Matrix(int rows,int columns,const T *val);\n\t  ~Matrix();\n\t  void print();\n\t  T get(int rows,int columns);\n\t  Matrix<T> operator= (const Matrix<T> &matrix2);\n\t\n\tprivate:\n\t  int rows;\n\t  int columns;\n\t  T *val;\n};\n\ntemplate <typename T>\nMatrix<T>::Matrix(int rows,int columns) {\n\tthis->rows=rows;\n\tthis->columns=columns;\n\tthis->val=new T [rows*columns];\n\tfor (int i = 0; i < rows*columns; ++ i) \n\t\tthis->val[i]=0;\n}\n\ntemplate <typename T>\nMatrix<T>::Matrix(int rows,int columns,const T *v) {\n    this->rows=rows;\n\tthis->columns=columns;\n\tthis->val=new T [rows*columns];\n\tfor (int i = 0; i < rows*columns; ++ i) \n\t\tthis->val[i]=v[i];\n}\n\ntemplate <typename T>\nMatrix<T>::~Matrix() {\n\tdelete [] val;\n}\n\ntemplate <typename T>\nvoid Matrix<T>::print() {\n\tint k=0;\n\tfor (int i = 0; i < rows; ++ i) {\n\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\tcout << \" \" << \" \" << \" \" << \" \" << this->val[k];\n\t\t\tk++;\n\t\t}\n\t\tcout << endl;\n\t}\n}\n\ntemplate <typename T>\nT Matrix<T>::get(int row,int column) {\n\treturn this->val[row*column-1];\n\t\n}\n\ntemplate <typename T>\nMatrix<T> Matrix<T>::operator= (const Matrix<T> &matrix2) {\n\tthis->rows=matrix2.rows;\n\tthis->columns=matrix2.columns;\n\tfor (int i = 0; i < rows*columns; ++ i) \n\t\tthis->val[i]=matrix2.val[i];\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1590668719.4383209,
            0,
            "main.cpp: In function ‘int main4double()’:\nmain.cpp:26:20: error: lvalue required as left operand of assignment\n  matrix3.get(1, 1) = 10.0;\n                    ^\nIn file included from main.cpp:5:0:\nsource.cpp: In instantiation of ‘Matrix<T>::Matrix(int, int) [with T = std::__cxx11::basic_string<char>]’:\nmain.cpp:36:29:   required from here\nsource.cpp:26:15: error: ambiguous overload for ‘operator=’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘int’)\n   this->val[i]=0;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:550:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       operator=(const basic_string& __str)\n       ^\n/usr/include/c++/5/bits/basic_string.h:558:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       operator=(const _CharT* __s)\n       ^\n/usr/include/c++/5/bits/basic_string.h:569:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(_CharT) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       operator=(_CharT __c)\n       ^\n/usr/include/c++/5/bits/basic_string.h:587:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>& std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       operator=(basic_string&& __str)\n       ^\n"
        ],
        [
            "7.2 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\n#include <vector>\nusing namespace std;\n\nvector<string> split(const string &a) {\n\tvector<string> words;\n\tint k=0,i=0;\n\twhile(a[i]!=0) {\n\t\tfor (int j = 0; a[i]!=' '; ++ j) {\n\t\t   words[k][j]=a[i];\n\t\t\t++i;\n\t\t}\n\t\tk++;\n\t}\n\treturn words;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1591240577.2810698,
            0,
            "ASAN:SIGSEGV\n=================================================================\n==11330==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x5583eb7633fb bp 0x7ffc955a1970 sp 0x7ffc955a1950 T0)\n    #0 0x5583eb7633fa in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const /usr/include/c++/5/bits/basic_string.h:135\n    #1 0x5583eb7633fa in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator[](unsigned long) /usr/include/c++/5/bits/basic_string.h:855\n    #2 0x5583eb7633fa in split(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/米仁沙·纳斯尔/source.cpp:10\n    #3 0x5583eb763698 in test() /home/米仁沙·纳斯尔/main.cpp:10\n    #4 0x5583eb7639f2 in main /home/米仁沙·纳斯尔/main.cpp:17\n    #5 0x7fd5ee0d982f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #6 0x5583eb7631a8 in _start (/home/米仁沙·纳斯尔/main.out+0x11a8)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /usr/include/c++/5/bits/basic_string.h:135 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const\n==11330==ABORTING\n"
        ],
        [
            "7.1 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nclass Triangle {\n\t\n\t\n\tpublic:\n\t  Triangle();\n\t  Triangle(double side1,double side2,double side3);\n\t  double getSide1();\n\t  double getSide2();\n\t  double getSide3();\n\t  double getArea();\n\t  double getPerimeter();\n\tvoid setColor(string color2);\n\tstring getColor();\n\t\n\t\n\t\n\t\n\t\n\tprivate:\n\t  double side1;\n\t  double side2;\n\t  double side3;\n\t  string color;\n\t  \n};\n\n\nTriangle::Triangle() {\n\t\t  side1=1.0;\n\t\t  side2=1.0;\n\t\t  side3=1.0;\n\t  }\n\t\nTriangle::Triangle(double a,double b,double c) {\n\t\t  side1=a;\n\t\t  side2=b;\n\t\t  side3=c;\n\t  }\n\t\ndouble Triangle::getSide1() {\n\t\t  return side1;\n\t  }\n\t\ndouble Triangle::getSide2() {\n\t\t  return this->side2;\n\t  }\n\t\ndouble Triangle::getSide3() {\n\t\t  return this->side3;\n\t  }\n\t\ndouble Triangle::getArea() {\n\t\t  double s=(side3+side2+side1)/2;\n\t\t  return sqrt(s*(s-side1)*(s-side2)*(s-side3));\n\t  }\n\t\ndouble Triangle::getPerimeter() {\n\t\t  return side1+side2+side3;\n\t  }\n\t\nvoid Triangle::setColor(string color2) {\n\t\tcolor = color2;\n\t}\n\t\nstring Triangle::getColor() {\n\t\treturn color;\n\t}\n\t\n\t\n\n\n\n\n\n \n\n\n\n\n\n\n\n",
            1591269830.9003172,
            100,
            "# 答案正确"
        ],
        [
            "8.1 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\n#include <string>\n#include <cmath>\nusing namespace std;\nclass Full:public Matrix{\n\tint rows,columns;\n\tdouble values[1000];\npublic:\n\tFull(){\t}\n\tFull(int row,int column)\n\t{\n\t\trows=row;\n\t\tcolumns=column;\n\t\tfor(int i=0;i<rows;i++)\n\t\t{\n\t\t\tfor(int j=0;j<columns;j++)\n\t\t\t{\n\t\t\t\tvalues[i*columns+j]=0;\n\t\t\t}\n\t\t}\n\t}\n\tFull(int row,int column,double value[])\n\t{\n\t\trows=row;\n\t\tcolumns=column;\n\t\tfor(int i=0;i<rows;i++)\n\t\t{\n\t\t\tfor(int j=0;j<columns;j++)\n\t\t\t{\n\t\t\t\tvalues[i*columns+j]=value[i*columns+j];\n\t\t\t}\n\t\t}\n\t}\n\tFull(const Matrix & matrix2)\n\t{\n\t\trows=matrix2.size(1);\n\t\tcolumns=matrix2.size(2);\n\t\t\n\t\tfor(int i=0;i<rows;i++)\n\t\t{\n\t\t\tfor(int j=0;j<columns;j++)\n\t\t\t{\n\t\t\t\tthis->set(i,j,matrix2.get(i,j));\n\t\t\t}\n\t\t}\n\t}\n\tvirtual int size(int dimension) const {\n\t\tif(dimension==1)\n\t\treturn rows;\n\t\telse\n\t\treturn columns;\n\t}\n\tvirtual void set(int row, int column, double value)\n\t{\n\t\tvalues[row*columns+column]=value;\t\t\n\t}\n\tvirtual double get(int row, int column) const \n\t{\n\t\treturn values[row*columns+column];\n\t}\n\tvirtual void print() const \n\t{\n\t\tfor(int i=0;i<rows;i++)\n\t\t{\n\t\t\tfor(int j=0;j<columns;j++)\n\t\t\t{\n\t\t\t\tcout<<\"    \"<<values[i*columns+j];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\tvirtual Full & operator = (const Full & matrix2)\n\t{\n\t\trows=matrix2.rows;\n\t\tcolumns=matrix2.columns;\n\t\tfor(int i=0;i<rows;i++)\n\t\t{\n\t\t\tfor(int j=0;j<columns;j++)\n\t\t\t{\n\t\t\t\tvalues[i*columns+j]=matrix2.values[i*columns+j];\n\t\t\t}\n\t\t}\n\t\treturn *this;\n\t}\n//\tvirtual Matrix & operator = (const Matrix & matrix2)\n//\t{\n//\t\tFull ret(matrix2.size(1),matrix2.size(2));\n////\t\tthis\n//\t\tfor(int i=0;i<ret.rows;i++)\n//\t\t{\n//\t\t\tfor(int j=0;j<ret.columns;j++)\n//\t\t\t{\n//\t\t\t\tret.set(i,j,matrix2.get(i,j));\n////\t\t\t\tvalues[i*columns+j]=matrix2.values[i*columns+j];\n//\t\t\t}\n//\t\t}\n//\t\treturn ret;\n//\t}\n\tvirtual Matrix & operator = (const Matrix & matrix2)\n\t{\n//\t\tFull ret(matrix2.size(1),matrix2.size(2));\n\t\trows=matrix2.size(1);\n\t\tcolumns=matrix2.size(2);\n\t\tfor(int i=0;i<rows;i++)\n\t\t{\n\t\t\tfor(int j=0;j<columns;j++)\n\t\t\t{\n\t\t\t\tset(i,j,matrix2.get(i,j));\n//\t\t\t\tvalues[i*columns+j]=matrix2.values[i*colu\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn *this;\n\t}\n};\n\n\n\n\n",
            1591879872.9125807,
            100,
            "# 答案正确"
        ],
        [
            "8.5 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Point3D : public Point2D {\n\tprivate:\n\t  double z;\n\t\n\tpublic:\n\tPoint3D() {\n\t\t  Point2D();\n\t\t  z=0;\n\t  }\n\t\n\tPoint2D::Point3D(double x1,double y1,double z1) {\n\t\tsetX(x1);\n\t\tsetY(y1);\n\t\tz=z1;\n\t}\n\t\n\tvirtual double getX() {\n\t\treturn getX();\n\t}\n\t\n\tvirtual double getY() {\n\t\treturn getY();\n\t}\n\t\n\tvirtual double getZ() {\n\t\treturn z;\n\t}\n\t\n\tvirtual double distance(Point3D &point2) {\n\t\tdouble dx = getX() - point2.getX();\n\t\tdouble dy = getY() - point2.getY();\n\t\tdouble dz = z - point2.getZ();\n\t\treturn sqrt(dx * dx + dy * dy + dz * dz);\n\t}\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1591846658.726457,
            0,
            "In file included from main.cpp:39:0:\nsource.cpp:14:48: error: ISO C++ forbids declaration of ‘Point3D’ with no type [-fpermissive]\n  Point2D::Point3D(double x1,double y1,double z1) {\n                                                ^\nsource.cpp:14:48: error: cannot define member function ‘Point2D::Point3D’ within ‘Point3D’\nmain.cpp: In function ‘int main()’:\nmain.cpp:63:27: error: no matching function for call to ‘Point3D::Point3D(double&, double&, double&)’\n  Point3D point1(x1, y1, z1);\n                           ^\nIn file included from main.cpp:39:0:\nsource.cpp:9:2: note: candidate: Point3D::Point3D()\n  Point3D() {\n  ^\nsource.cpp:9:2: note:   candidate expects 0 arguments, 3 provided\nsource.cpp:4:7: note: candidate: constexpr Point3D::Point3D(const Point3D&)\n class Point3D : public Point2D {\n       ^\nsource.cpp:4:7: note:   candidate expects 1 argument, 3 provided\nsource.cpp:4:7: note: candidate: constexpr Point3D::Point3D(Point3D&&)\nsource.cpp:4:7: note:   candidate expects 1 argument, 3 provided\nmain.cpp:64:27: error: no matching function for call to ‘Point3D::Point3D(double&, double&, double&)’\n  Point3D point2(x2, y2, z2);\n                           ^\nIn file included from main.cpp:39:0:\nsource.cpp:9:2: note: candidate: Point3D::Point3D()\n  Point3D() {\n  ^\nsource.cpp:9:2: note:   candidate expects 0 arguments, 3 provided\nsource.cpp:4:7: note: candidate: constexpr Point3D::Point3D(const Point3D&)\n class Point3D : public Point2D {\n       ^\nsource.cpp:4:7: note:   candidate expects 1 argument, 3 provided\nsource.cpp:4:7: note: candidate: constexpr Point3D::Point3D(Point3D&&)\nsource.cpp:4:7: note:   candidate expects 1 argument, 3 provided\n"
        ],
        [
            "8.6 (C++)",
            "米仁沙·纳斯尔",
            "#include <vector>\n#include <iostream>\n\n//template <typename E>\nclass MyTensor : public Tensor<double> {\n\t\n\tpublic:\n\t\n\tMyTensor(vector<int> sizes) : size1(sizes) {}\n\t\n\tvirtual Tensor &operator=(MyTensor &a) {\n\t\tthis->sizes=a.size1;\n\t\treturn *this;\n\t}\n\t\n\tdouble &get(vector<int> &indexes) {\n\t\tfor (int i = 0; i < indexes.size(); ++ i) {\n\t\t\tif(indexes[i]!=0)\n\t\t\t\treturn indexes[i];\n\t\t}\n\t\treturn 0;\n\t}\n\t\n\tvirtual E & get(const vector<int> & indexes)  {\n\t\tfor (int i = 0; i < indexes.size(); ++ i) {\n\t\t\tif(indexes[i]!=0)\n\t\t\t\treturn indexes[i];\n\t\t}\n\t\treturn 0;\n\t}\n\t\t\n\tprotected:\n\t   vector<int> size1;\n\t\n\t\n\t\n\t\n\t\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1592449609.294126,
            0,
            "In file included from main.cpp:14:0:\nsource.cpp:24:10: error: ‘E’ does not name a type\n  virtual E & get(const vector<int> & indexes)  {\n          ^\nsource.cpp: In constructor ‘MyTensor::MyTensor(std::vector<int>)’:\nsource.cpp:9:43: error: no matching function for call to ‘Tensor<double>::Tensor()’\n  MyTensor(vector<int> sizes) : size1(sizes) {}\n                                           ^\nmain.cpp:10:2: note: candidate: Tensor<E>::Tensor(std::vector<int>) [with E = double]\n  Tensor(vector<int> sizes) : sizes(sizes) {}\n  ^\nmain.cpp:10:2: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor<double>::Tensor(const Tensor<double>&)\n class Tensor\n       ^\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor<double>::Tensor(Tensor<double>&&)\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nIn file included from main.cpp:14:0:\nsource.cpp: In member function ‘double& MyTensor::get(std::vector<int>&)’:\nsource.cpp:19:21: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double’\n     return indexes[i];\n                     ^\nsource.cpp:21:10: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double’\n   return 0;\n          ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:27:11: error: cannot declare variable ‘mt1’ to be of abstract type ‘MyTensor’\n  MyTensor mt1(I(3,4,5));\n           ^\nIn file included from main.cpp:14:0:\nsource.cpp:5:7: note:   because the following virtual functions are pure within ‘MyTensor’:\n class MyTensor : public Tensor<double> {\n       ^\nmain.cpp:11:14: note: \tE& Tensor<E>::get(const std::vector<int>&) [with E = double]\n  virtual E & get(const vector<int> & indexes) = 0;\n              ^\nmain.cpp:32:11: error: cannot declare variable ‘mt2’ to be of abstract type ‘MyTensor’\n  MyTensor mt2(I(2,3,4,5));\n           ^\n"
        ],
        [
            "9.1 (C++)",
            "米仁沙·纳斯尔",
            "class Circle {\n\tprivate:\n\t  double radius;\n\n\tpublic:\n\tCircle(double radius){\n\t\t  radius=radius;\n\t}\n\t\n\tbool operator< (const Circle &a) {\n\t\t  if(radius < a.radius)\n\t\t\t  return true;\n\t\t  else \n\t\t\t  return false;\n\t}\n\t\n\tbool operator>(const Circle &a) {\n\t\t  if(radius >a.radius)\n\t\t\t  return true;\n\t\t  else \n\t\t\t  return false;\n\t  }\n\t\n\tbool operator<=(const Circle &a) {\n\t\t  if(radius <=a.radius)\n\t\t\t  return true;\n\t\t  else \n\t\t\t  return false;\n\t  }\n\t\n\tbool operator>=(const Circle &a) {\n\t\t  if(radius >=a.radius)\n\t\t\t  return true;\n\t\t  else \n\t\t\t  return false;\n\t  }\n\t\n\tbool operator==(const Circle &a) {\n\t\t  if(radius ==a.radius)\n\t\t\t  return true;\n\t\t  else \n\t\t\t  return false;\n\t  }\n\t\n\tbool operator!=(const Circle &a) {\n\t\t  if(radius !=a.radius)\n\t\t\t  return true;\n\t\t  else \n\t\t\t  return false;\n\t  }\n\t\n\t\n};\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1593071548.6594818,
            14,
            "# 答案不正确\n\n# 随机输入:\n79.46 42.91\n\n\n# 参考答案:\n001\n101\n100\n011\n110\n010\n\n\n# 我的答案:\n000\n111\n111\n000\n111\n000\n"
        ],
        [
            "9.2 (C++)",
            "米仁沙·纳斯尔",
            "class I {\n\tprivate:\n\t  vector<int> sizes;\n\t  vector<double> values;\n\t\n\tpublic:\n\t\n\tI(vector<int> sizes) {\n\t\tthis->sizes=sizes;\n\t\tfor (int i = 0; i < sizes.size(); ++ i) \n\t\tthis->values[i]=0;\n\t}\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1593072666.514143,
            0,
            "main.cpp: In function ‘int main()’:\nmain.cpp:41:15: error: no matching function for call to ‘I::I(int, int, int)’\n  I sizes(3,4,5);\n               ^\nIn file included from main.cpp:38:0:\nsource.cpp:8:2: note: candidate: I::I(std::vector<int>)\n  I(vector<int> sizes) {\n  ^\nsource.cpp:8:2: note:   candidate expects 1 argument, 3 provided\nsource.cpp:1:7: note: candidate: I::I(const I&)\n class I {\n       ^\nsource.cpp:1:7: note:   candidate expects 1 argument, 3 provided\nsource.cpp:1:7: note: candidate: I::I(I&&)\nsource.cpp:1:7: note:   candidate expects 1 argument, 3 provided\nmain.cpp:42:16: error: no matching function for call to ‘Tensor::Tensor(I&)’\n  Tensor t(sizes);\n                ^\nmain.cpp:27:2: note: candidate: Tensor::Tensor(std::vector<int>)\n  Tensor(vector<int> sizes) {\n  ^\nmain.cpp:27:2: note:   no known conversion for argument 1 from ‘I’ to ‘std::vector<int>’\nmain.cpp:5:7: note: candidate: Tensor::Tensor(const Tensor&)\n class Tensor\n       ^\nmain.cpp:5:7: note:   no known conversion for argument 1 from ‘I’ to ‘const Tensor&’\nmain.cpp:5:7: note: candidate: Tensor::Tensor(Tensor&&)\nmain.cpp:5:7: note:   no known conversion for argument 1 from ‘I’ to ‘Tensor&&’\nmain.cpp:43:15: error: no matching function for call to ‘I::I(int, int, int)’\n  I index(0,0,3);\n               ^\nIn file included from main.cpp:38:0:\nsource.cpp:8:2: note: candidate: I::I(std::vector<int>)\n  I(vector<int> sizes) {\n  ^\nsource.cpp:8:2: note:   candidate expects 1 argument, 3 provided\nsource.cpp:1:7: note: candidate: I::I(const I&)\n class I {\n       ^\nsource.cpp:1:7: note:   candidate expects 1 argument, 3 provided\nsource.cpp:1:7: note: candidate: I::I(I&&)\nsource.cpp:1:7: note:   candidate expects 1 argument, 3 provided\nmain.cpp:44:20: error: no matching function for call to ‘Tensor::get(I&)’\n  cin >> t.get(index);\n                    ^\nmain.cpp:33:11: note: candidate: double& Tensor::get(const std::vector<int>&)\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:33:11: note:   no known conversion for argument 1 from ‘I’ to ‘const std::vector<int>&’\nmain.cpp:45:21: error: no matching function for call to ‘Tensor::get(I&)’\n  cout << t.get(index) << endl;\n                     ^\nmain.cpp:33:11: note: candidate: double& Tensor::get(const std::vector<int>&)\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:33:11: note:   no known conversion for argument 1 from ‘I’ to ‘const std::vector<int>&’\nmain.cpp:47:21: error: no matching function for call to ‘I::I(int, int, int, int)’\n  Tensor t2(I(2,3,4,5));\n                     ^\nIn file included from main.cpp:38:0:\nsource.cpp:8:2: note: candidate: I::I(std::vector<int>)\n  I(vector<int> sizes) {\n  ^\nsource.cpp:8:2: note:   candidate expects 1 argument, 4 provided\nsource.cpp:1:7: note: candidate: I::I(const I&)\n class I {\n       ^\nsource.cpp:1:7: note:   candidate expects 1 argument, 4 provided\nsource.cpp:1:7: note: candidate: I::I(I&&)\nsource.cpp:1:7: note:   candidate expects 1 argument, 4 provided\nmain.cpp:48:25: error: no matching function for call to ‘I::I(int, int, int, int)’\n  cin >> t2.get(I(1,2,3,4));\n                         ^\nIn file included from main.cpp:38:0:\nsource.cpp:8:2: note: candidate: I::I(std::vector<int>)\n  I(vector<int> sizes) {\n  ^\nsource.cpp:8:2: note:   candidate expects 1 argument, 4 provided\nsource.cpp:1:7: note: candidate: I::I(const I&)\n class I {\n       ^\nsource.cpp:1:7: note:   candidate expects 1 argument, 4 provided\nsource.cpp:1:7: note: candidate: I::I(I&&)\nsource.cpp:1:7: note:   candidate expects 1 argument, 4 provided\nmain.cpp:49:26: error: no matching function for call to ‘I::I(int, int, int, int)’\n  cout << t2.get(I(1,2,3,4)) << endl;\n                          ^\nIn file included from main.cpp:38:0:\nsource.cpp:8:2: note: candidate: I::I(std::vector<int>)\n  I(vector<int> sizes) {\n  ^\nsource.cpp:8:2: note:   candidate expects 1 argument, 4 provided\nsource.cpp:1:7: note: candidate: I::I(const I&)\n class I {\n       ^\nsource.cpp:1:7: note:   candidate expects 1 argument, 4 provided\nsource.cpp:1:7: note: candidate: I::I(I&&)\nsource.cpp:1:7: note:   candidate expects 1 argument, 4 provided\n"
        ],
        [
            "9.3 (C++)",
            "米仁沙·纳斯尔",
            "class Complex\n{\npublic:\n\t\nComplex(double r = 0, double i = 0):re(r), im(i) {} \nComplex(const Complex &temp);\ndouble real()const{return re;}\ndouble imag()const{return im;}\nComplex &operator+=(const Complex &a);\nComplex &operator-=(const Complex &a);\nComplex &operator = (const Complex &a);\nComplex &operator*=(const Complex &tmp);\nComplex &operator/=(const Complex &tmp);\nbool operator==(const Complex &tmp) const;\nbool operator!=(const Complex &tmp) const;\n\t\nComplex operator +(const Complex &x, double &y);\nComplex operator +(const Complex &x, const Complex &y);\nComplex operator +(double &y, const Complex &x);\nComplex operator -(const Complex &x, double &y);\nComplex operator -(const Complex &x, const Complex &y);\nComplex operator -(double &y, const Complex &x);\n\t\nComplex operator*(const Complex &tmp,const Complex& temp);\nComplex operator/(const Complex &tmp,const Complex &temp);\t\n\n\t\nprivate:\n\t\ndouble re;\ndouble im;\n\t\n};\n\n\ninline Complex::Complex(const Complex &temp):re(temp.real()),im(temp.imag())\n{\n}\n\n\ninline Complex &Complex::operator = (const Complex &temp)\n{\nre = temp.real();\nim = temp.imag();\nreturn *this;\n}\n\n\ninline Complex &Complex::operator += (const Complex &temp)\n{\nthis->re = this->re + temp.real();\nthis->im = this->im + temp.imag();\nreturn *this;\n}\n\n\ninline Complex &Complex::operator -= (const Complex &temp)\n{\nthis->re = this->re - temp.real();\nthis->im = this->im - temp.imag();\nreturn *this;\n}\n\n\n\n\ninline Complex operator +(const Complex &x, double &y)\n{\nreturn Complex(x.real() + y, x.imag());\n}\n\n\ninline Complex operator +(const Complex &x, const Complex &y)\n{\nreturn Complex(x.real() + y.real(), x.imag() + y.imag());\n}\n\n\ninline Complex operator +(double &y, const Complex &x)\n{\nreturn Complex(x.real() + y, x.imag());\n}\n\n\ninline Complex operator +(const Complex &x)\n{\nreturn x;\n}\n\n\ninline Complex operator -(const Complex &x, double &y)\n{\nreturn Complex(x.real() - y, x.imag());\n}\n\n\ninline Complex operator -(const Complex &x, const Complex &y)\n{\nreturn Complex(x.real() - y.real(), x.imag() - y.imag());\n}\n\n\ninline Complex operator -(double &y, const Complex &x)\n{\nreturn Complex(y-x.real(), -x.imag());\n}\n\n\ninline Complex operator*(const Complex &tmp,const Complex& temp)\n{\n    Complex result;\n    result.re=temp.real()*tmp.real()-temp.imag()*tmp.imag();\n    result.im=temp.real()*tmp.imag()+temp.imag()*tmp.real();\n    return result;\n}\n\ninline Complex operator/(const Complex &tmp,const Complex &temp)\n{\n    Complex result;\n    if(temp.real()==0&&temp.imag()==0)\n    {\n       return result;\n    }\n    result.re=(tmp.real()*temp.real()+tmp.imag()*temp.imag())/(temp.real()*temp.real()+temp.imag()*temp.imag());\n    result.im=(tmp.imag()*temp.real()-tmp.real()*temp.imag())/(temp.real()*temp.real()+temp.imag()*temp.imag());\n    return result;\n}\n\n\ninline Complex operator/=(const Complex &tmp)\n{\n    Complex result;\n    if(this->re==0&&this->im==0)\n    {\n       return result;\n    }\n    result.re=(tmp.real()*this->re+tmp.imag()*this->im)/(this->re*this->re+this->im*this->im);\n    result.im=(tmp.imag()*this->re-tmp.real()*this-.im)/(this->re*this->re+this->im*this->im);\n    return result;\n}\n\ninline Complex operator*=(const Complex &tmp)\n{\n    Complex result;\n    result.re=this->re*tmp.real()-this->im*tmp.imag();\n    result.im=this->re*tmp.imag()+this->im*tmp.real();\n    return result;\n}\n\n\n\ninline bool Complex::operator==(const Complex &tmp) const\n{\n   if(this->re==tmp.real()&&this->im==tmp.imag())\n      return true;\n   else \n      return false;\n}\n\ninline bool Complex::operator!=(const Complex &tmp) const\n{\n   if(*this==tmp)\n     return false;\n   else\n     return true;\n}\n\n\n\n\n\n\n",
            1593085056.0901208,
            0,
            "In file included from main.cpp:5:0:\nsource.cpp:17:47: error: ‘Complex Complex::operator+(const Complex&, double&)’ must take either zero or one argument\n Complex operator +(const Complex &x, double &y);\n                                               ^\nsource.cpp:18:54: error: ‘Complex Complex::operator+(const Complex&, const Complex&)’ must take either zero or one argument\n Complex operator +(const Complex &x, const Complex &y);\n                                                      ^\nsource.cpp:19:47: error: ‘Complex Complex::operator+(double&, const Complex&)’ must take either zero or one argument\n Complex operator +(double &y, const Complex &x);\n                                               ^\nsource.cpp:20:47: error: ‘Complex Complex::operator-(const Complex&, double&)’ must take either zero or one argument\n Complex operator -(const Complex &x, double &y);\n                                               ^\nsource.cpp:21:54: error: ‘Complex Complex::operator-(const Complex&, const Complex&)’ must take either zero or one argument\n Complex operator -(const Complex &x, const Complex &y);\n                                                      ^\nsource.cpp:22:47: error: ‘Complex Complex::operator-(double&, const Complex&)’ must take either zero or one argument\n Complex operator -(double &y, const Complex &x);\n                                               ^\nsource.cpp:24:57: error: ‘Complex Complex::operator*(const Complex&, const Complex&)’ must take either zero or one argument\n Complex operator*(const Complex &tmp,const Complex& temp);\n                                                         ^\nsource.cpp:25:57: error: ‘Complex Complex::operator/(const Complex&, const Complex&)’ must take exactly one argument\n Complex operator/(const Complex &tmp,const Complex &temp); \n                                                         ^\nsource.cpp: In function ‘Complex operator*(const Complex&, const Complex&)’:\nsource.cpp:30:8: error: ‘double Complex::re’ is private\n double re;\n        ^\nsource.cpp:112:12: error: within this context\n     result.re=temp.real()*tmp.real()-temp.imag()*tmp.imag();\n            ^\nsource.cpp:31:8: error: ‘double Complex::im’ is private\n double im;\n        ^\nsource.cpp:113:12: error: within this context\n     result.im=temp.real()*tmp.imag()+temp.imag()*tmp.real();\n            ^\nsource.cpp: In function ‘Complex operator/(const Complex&, const Complex&)’:\nsource.cpp:30:8: error: ‘double Complex::re’ is private\n double re;\n        ^\nsource.cpp:124:12: error: within this context\n     result.re=(tmp.real()*temp.real()+tmp.imag()*temp.imag())/(temp.real()*temp.real()+temp.imag()*temp.imag());\n            ^\nsource.cpp:31:8: error: ‘double Complex::im’ is private\n double im;\n        ^\nsource.cpp:125:12: error: within this context\n     result.im=(tmp.imag()*temp.real()-tmp.real()*temp.imag())/(temp.real()*temp.real()+temp.imag()*temp.imag());\n            ^\nsource.cpp: At global scope:\nsource.cpp:130:45: error: ‘Complex operator/=(const Complex&)’ must take exactly two arguments\n inline Complex operator/=(const Complex &tmp)\n                                             ^\nsource.cpp:142:45: error: ‘Complex operator*=(const Complex&)’ must take exactly two arguments\n inline Complex operator*=(const Complex &tmp)\n                                             ^\n"
        ],
        [
            "9.4 (C++)",
            "米仁沙·纳斯尔",
            "class Complex{\n\tprivate:\n\t\n\tdouble re;\n\tdouble im;\n\t\n\tpublic:\n\t\n\tComplex(double i,double j){\n\t\tre=i;\n\t\tim=j;\n\t}\n\t\n\tdouble real(){\n\t\treturn re;\n\t}\n\t\n\tdouble imag(){\n\t\treturn im;\n\t}\n\t\n   Complex operator +(const Complex &x, const Complex &y)\n{\nreturn Complex(x.real() + y.real(), x.imag() + y.imag());\n}\n\n Complex operator -(const Complex &x, const Complex &y)\n{\nreturn Complex(x.real() - y.real(), x.imag() - y.imag());\n}\n\t\n\t friend istream& operator>>(istream &is ,Complex &tmp);\n     friend ostream& operator<<(ostream &os,const Complex &tmp);\n};\n\n\ninline ostream& operator<<(ostream& os,const Complex& tmp)\n{\n   os << tmp.real() << \"+\" << tmp.imag() << \"j\" << endl;\n   return os;\n}\n\ninline istream& operator>>(istream &is,Complex& tmp)\n{\n   cout << \"enter real:\";\n   is >> tmp.real();\n   if(is)\n   {\n      cout << \"enter imag:\";\n      is >> tmp.imag();\n      if(is)\n      {\n        return is;\n      }\n      else\n      {\n         cout << \"error!\" << endl;\n     tmp=Complex(0,1);\n\n      }\n   }\n   else\n   {\n      tmp=Complex(0,1);\n   }\n   return is;\n} \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1593087113.7460732,
            0,
            "In file included from main.cpp:4:0:\nsource.cpp:22:57: error: ‘Complex Complex::operator+(const Complex&, const Complex&)’ must take either zero or one argument\n    Complex operator +(const Complex &x, const Complex &y)\n                                                         ^\nsource.cpp:27:55: error: ‘Complex Complex::operator-(const Complex&, const Complex&)’ must take either zero or one argument\n  Complex operator -(const Complex &x, const Complex &y)\n                                                       ^\nsource.cpp: In function ‘std::ostream& operator<<(std::ostream&, const Complex&)’:\nsource.cpp:39:19: error: passing ‘const Complex’ as ‘this’ argument discards qualifiers [-fpermissive]\n    os << tmp.real() << \"+\" << tmp.imag() << \"j\" << endl;\n                   ^\nsource.cpp:14:9: note:   in call to ‘double Complex::real()’\n  double real(){\n         ^\nsource.cpp:39:40: error: passing ‘const Complex’ as ‘this’ argument discards qualifiers [-fpermissive]\n    os << tmp.real() << \"+\" << tmp.imag() << \"j\" << endl;\n                                        ^\nsource.cpp:18:9: note:   in call to ‘double Complex::imag()’\n  double imag(){\n         ^\nsource.cpp: In function ‘std::istream& operator>>(std::istream&, Complex&)’:\nsource.cpp:46:7: error: no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘double’)\n    is >> tmp.real();\n       ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:168:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(bool& __n)\n       ^\n/usr/include/c++/5/istream:168:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘bool&’ from an rvalue of type ‘bool’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:172:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>] <near match>\n       operator>>(short& __n);\n       ^\n/usr/include/c++/5/istream:172:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘short int&’ from an rvalue of type ‘short int’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:175:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned short& __n)\n       ^\n/usr/include/c++/5/istream:175:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘short unsigned int&’ from an rvalue of type ‘short unsigned int’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:179:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>] <near match>\n       operator>>(int& __n);\n       ^\n/usr/include/c++/5/istream:179:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘int&’ from an rvalue of type ‘int’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:182:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned int& __n)\n       ^\n/usr/include/c++/5/istream:182:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘unsigned int&’ from an rvalue of type ‘unsigned int’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:186:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(long& __n)\n       ^\n/usr/include/c++/5/istream:186:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘long int&’ from an rvalue of type ‘long int’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:190:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned long& __n)\n       ^\n/usr/include/c++/5/istream:190:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘long unsigned int&’ from an rvalue of type ‘long unsigned int’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:195:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(long long& __n)\n       ^\n/usr/include/c++/5/istream:195:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘long long int&’ from an rvalue of type ‘long long int’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:199:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned long long& __n)\n       ^\n/usr/include/c++/5/istream:199:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘long long unsigned int&’ from an rvalue of type ‘long long unsigned int’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:214:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(float& __f)\n       ^\n/usr/include/c++/5/istream:214:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘float&’ from an rvalue of type ‘float’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:218:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(double& __f)\n       ^\n/usr/include/c++/5/istream:218:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:222:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(long double& __f)\n       ^\n/usr/include/c++/5/istream:222:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘long double&’ from an rvalue of type ‘long double’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:924:5: note: candidate: std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&&, _Tp&) [with _CharT = char; _Traits = std::char_traits<char>; _Tp = double] <near match>\n     operator>>(basic_istream<_CharT, _Traits>&& __is, _Tp& __x)\n     ^\n/usr/include/c++/5/istream:924:5: note:   conversion of argument 2 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:120:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(__istream_type& (*__pf)(__istream_type&))\n       ^\n/usr/include/c++/5/istream:120:7: note:   no known conversion for argument 1 from ‘double’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’\n/usr/include/c++/5/istream:124:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]\n       operator>>(__ios_type& (*__pf)(__ios_type&))\n       ^\n/usr/include/c++/5/istream:124:7: note:   no known conversion for argument 1 from ‘double’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’\n/usr/include/c++/5/istream:131:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(ios_base& (*__pf)(ios_base&))\n       ^\n/usr/include/c++/5/istream:131:7: note:   no known conversion for argument 1 from ‘double’ to ‘std::ios_base& (*)(std::ios_base&)’\n/usr/include/c++/5/istream:235:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(void*& __p)\n       ^\n/usr/include/c++/5/istream:235:7: note:   no known conversion for argument 1 from ‘double’ to ‘void*&’\n/usr/include/c++/5/istream:259:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]\n       operator>>(__streambuf_type* __sb);\n       ^\n/usr/include/c++/5/istream:259:7: note:   no known conversion for argument 1 from ‘double’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’\nIn file included from main.cpp:4:0:\nsource.cpp:43:17: note: candidate: std::istream& operator>>(std::istream&, Complex&)\n inline istream& operator>>(istream &is,Complex& tmp)\n                 ^\nsource.cpp:43:17: note:   no known conversion for argument 2 from ‘double’ to ‘Complex&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:808:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)\n     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)\n     ^\n/usr/include/c++/5/istream:808:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: note:   cannot convert ‘(& tmp)->Complex::real()’ (type ‘double’) to type ‘signed char*’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:803:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)\n     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)\n     ^\n/usr/include/c++/5/istream:803:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: note:   cannot convert ‘(& tmp)->Complex::real()’ (type ‘double’) to type ‘unsigned char*’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:761:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)\n     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)\n     ^\n/usr/include/c++/5/istream:761:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: note:   cannot convert ‘(& tmp)->Complex::real()’ (type ‘double’) to type ‘signed char&’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:756:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)\n     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)\n     ^\n/usr/include/c++/5/istream:756:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:18: note:   cannot convert ‘(& tmp)->Complex::real()’ (type ‘double’) to type ‘unsigned char&’\n    is >> tmp.real();\n                  ^\nIn file included from /usr/include/c++/5/istream:934:0,\n                 from /usr/include/c++/5/iostream:40,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/istream.tcc:923:5: note: candidate: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)\n     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)\n     ^\n/usr/include/c++/5/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:19: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘double’)\n    is >> tmp.real();\n                   ^\nIn file included from /usr/include/c++/5/istream:934:0,\n                 from /usr/include/c++/5/iostream:40,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/istream.tcc:955:5: note: candidate: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)\n     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)\n     ^\n/usr/include/c++/5/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:19: note:   mismatched types ‘_CharT2*’ and ‘double’\n    is >> tmp.real();\n                   ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1441:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator>>(basic_istream<_CharT, _Traits>& __in,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1441:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:46:19: note:   mismatched types ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘double’\n    is >> tmp.real();\n                   ^\nsource.cpp:50:10: error: no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘double’)\n       is >> tmp.imag();\n          ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:168:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(bool&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(bool& __n)\n       ^\n/usr/include/c++/5/istream:168:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘bool&’ from an rvalue of type ‘bool’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:172:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(short int&) [with _CharT = char; _Traits = std::char_traits<char>] <near match>\n       operator>>(short& __n);\n       ^\n/usr/include/c++/5/istream:172:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘short int&’ from an rvalue of type ‘short int’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:175:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(short unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned short& __n)\n       ^\n/usr/include/c++/5/istream:175:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘short unsigned int&’ from an rvalue of type ‘short unsigned int’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:179:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(int&) [with _CharT = char; _Traits = std::char_traits<char>] <near match>\n       operator>>(int& __n);\n       ^\n/usr/include/c++/5/istream:179:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘int&’ from an rvalue of type ‘int’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:182:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned int& __n)\n       ^\n/usr/include/c++/5/istream:182:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘unsigned int&’ from an rvalue of type ‘unsigned int’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:186:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(long& __n)\n       ^\n/usr/include/c++/5/istream:186:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘long int&’ from an rvalue of type ‘long int’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:190:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned long& __n)\n       ^\n/usr/include/c++/5/istream:190:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘long unsigned int&’ from an rvalue of type ‘long unsigned int’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:195:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(long long& __n)\n       ^\n/usr/include/c++/5/istream:195:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘long long int&’ from an rvalue of type ‘long long int’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:199:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long long unsigned int&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(unsigned long long& __n)\n       ^\n/usr/include/c++/5/istream:199:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘long long unsigned int&’ from an rvalue of type ‘long long unsigned int’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:214:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(float&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(float& __f)\n       ^\n/usr/include/c++/5/istream:214:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘float&’ from an rvalue of type ‘float’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:218:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(double& __f)\n       ^\n/usr/include/c++/5/istream:218:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:222:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(long double&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>] <near match>\n       operator>>(long double& __f)\n       ^\n/usr/include/c++/5/istream:222:7: note:   conversion of argument 1 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘long double&’ from an rvalue of type ‘long double’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:924:5: note: candidate: std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&&, _Tp&) [with _CharT = char; _Traits = std::char_traits<char>; _Tp = double] <near match>\n     operator>>(basic_istream<_CharT, _Traits>&& __is, _Tp& __x)\n     ^\n/usr/include/c++/5/istream:924:5: note:   conversion of argument 2 would be ill-formed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘double’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:120:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__istream_type& (*)(std::basic_istream<_CharT, _Traits>::__istream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(__istream_type& (*__pf)(__istream_type&))\n       ^\n/usr/include/c++/5/istream:120:7: note:   no known conversion for argument 1 from ‘double’ to ‘std::basic_istream<char>::__istream_type& (*)(std::basic_istream<char>::__istream_type&) {aka std::basic_istream<char>& (*)(std::basic_istream<char>&)}’\n/usr/include/c++/5/istream:124:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__ios_type& (*)(std::basic_istream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>; std::basic_istream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]\n       operator>>(__ios_type& (*__pf)(__ios_type&))\n       ^\n/usr/include/c++/5/istream:124:7: note:   no known conversion for argument 1 from ‘double’ to ‘std::basic_istream<char>::__ios_type& (*)(std::basic_istream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’\n/usr/include/c++/5/istream:131:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(ios_base& (*__pf)(ios_base&))\n       ^\n/usr/include/c++/5/istream:131:7: note:   no known conversion for argument 1 from ‘double’ to ‘std::ios_base& (*)(std::ios_base&)’\n/usr/include/c++/5/istream:235:7: note: candidate: std::basic_istream<_CharT, _Traits>::__istream_type& std::basic_istream<_CharT, _Traits>::operator>>(void*&) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__istream_type = std::basic_istream<char>]\n       operator>>(void*& __p)\n       ^\n/usr/include/c++/5/istream:235:7: note:   no known conversion for argument 1 from ‘double’ to ‘void*&’\n/usr/include/c++/5/istream:259:7: note: candidate: std::basic_istream<_CharT, _Traits>& std::basic_istream<_CharT, _Traits>::operator>>(std::basic_istream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_istream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]\n       operator>>(__streambuf_type* __sb);\n       ^\n/usr/include/c++/5/istream:259:7: note:   no known conversion for argument 1 from ‘double’ to ‘std::basic_istream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’\nIn file included from main.cpp:4:0:\nsource.cpp:43:17: note: candidate: std::istream& operator>>(std::istream&, Complex&)\n inline istream& operator>>(istream &is,Complex& tmp)\n                 ^\nsource.cpp:43:17: note:   no known conversion for argument 2 from ‘double’ to ‘Complex&’\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:808:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char*)\n     operator>>(basic_istream<char, _Traits>& __in, signed char* __s)\n     ^\n/usr/include/c++/5/istream:808:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: note:   cannot convert ‘(& tmp)->Complex::imag()’ (type ‘double’) to type ‘signed char*’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:803:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char*)\n     operator>>(basic_istream<char, _Traits>& __in, unsigned char* __s)\n     ^\n/usr/include/c++/5/istream:803:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: note:   cannot convert ‘(& tmp)->Complex::imag()’ (type ‘double’) to type ‘unsigned char*’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:761:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, signed char&)\n     operator>>(basic_istream<char, _Traits>& __in, signed char& __c)\n     ^\n/usr/include/c++/5/istream:761:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: note:   cannot convert ‘(& tmp)->Complex::imag()’ (type ‘double’) to type ‘signed char&’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/iostream:40:0,\n                 from main.cpp:1:\n/usr/include/c++/5/istream:756:5: note: candidate: template<class _Traits> std::basic_istream<char, _Traits>& std::operator>>(std::basic_istream<char, _Traits>&, unsigned char&)\n     operator>>(basic_istream<char, _Traits>& __in, unsigned char& __c)\n     ^\n/usr/include/c++/5/istream:756:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:21: note:   cannot convert ‘(& tmp)->Complex::imag()’ (type ‘double’) to type ‘unsigned char&’\n       is >> tmp.imag();\n                     ^\nIn file included from /usr/include/c++/5/istream:934:0,\n                 from /usr/include/c++/5/iostream:40,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/istream.tcc:923:5: note: candidate: template<class _CharT, class _Traits> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT&)\n     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT& __c)\n     ^\n/usr/include/c++/5/bits/istream.tcc:923:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:22: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘double’)\n       is >> tmp.imag();\n                      ^\nIn file included from /usr/include/c++/5/istream:934:0,\n                 from /usr/include/c++/5/iostream:40,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/istream.tcc:955:5: note: candidate: template<class _CharT2, class _Traits2> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, _CharT2*)\n     operator>>(basic_istream<_CharT, _Traits>& __in, _CharT* __s)\n     ^\n/usr/include/c++/5/bits/istream.tcc:955:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:22: note:   mismatched types ‘_CharT2*’ and ‘double’\n       is >> tmp.imag();\n                      ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1441:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::basic_istream<_CharT, _Traits>& std::operator>>(std::basic_istream<_CharT, _Traits>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator>>(basic_istream<_CharT, _Traits>& __in,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1441:5: note:   template argument deduction/substitution failed:\nIn file included from main.cpp:4:0:\nsource.cpp:50:22: note:   mismatched types ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘double’\n       is >> tmp.imag();\n                      ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:7:13: error: no matching function for call to ‘Complex::Complex()’\n     Complex c1, c2, c3;\n             ^\nIn file included from main.cpp:4:0:\nsource.cpp:9:2: note: candidate: Complex::Complex(double, double)\n  Complex(double i,double j){\n  ^\nsource.cpp:9:2: note:   candidate expects 2 arguments, 0 provided\nsource.cpp:1:7: note: candidate: constexpr Complex::Complex(const Complex&)\n class Complex{\n       ^\nsource.cpp:1:7: note:   candidate expects 1 argument, 0 provided\nsource.cpp:1:7: note: candidate: constexpr Complex::Complex(Complex&&)\nsource.cpp:1:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp:7:17: error: no matching function for call to ‘Complex::Complex()’\n     Complex c1, c2, c3;\n                 ^\nIn file included from main.cpp:4:0:\nsource.cpp:9:2: note: candidate: Complex::Complex(double, double)\n  Complex(double i,double j){\n  ^\nsource.cpp:9:2: note:   candidate expects 2 arguments, 0 provided\nsource.cpp:1:7: note: candidate: constexpr Complex::Complex(const Complex&)\n class Complex{\n       ^\nsource.cpp:1:7: note:   candidate expects 1 argument, 0 provided\nsource.cpp:1:7: note: candidate: constexpr Complex::Complex(Complex&&)\nsource.cpp:1:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp:7:21: error: no matching function for call to ‘Complex::Complex()’\n     Complex c1, c2, c3;\n                     ^\nIn file included from main.cpp:4:0:\nsource.cpp:9:2: note: candidate: Complex::Complex(double, double)\n  Complex(double i,double j){\n  ^\nsource.cpp:9:2: note:   candidate expects 2 arguments, 0 provided\nsource.cpp:1:7: note: candidate: constexpr Complex::Complex(const Complex&)\n class Complex{\n       ^\nsource.cpp:1:7: note:   candidate expects 1 argument, 0 provided\nsource.cpp:1:7: note: candidate: constexpr Complex::Complex(Complex&&)\nsource.cpp:1:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp:9:13: error: no match for ‘operator+’ (operand types are ‘Complex’ and ‘Complex’)\n     c3 = c1 + c2;\n             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘const std::move_iterator<_Iterator>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   mismatched types ‘const _CharT*’ and ‘Complex’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   mismatched types ‘const _CharT*’ and ‘Complex’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:15: note:   ‘Complex’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     c3 = c1 + c2;\n               ^\nmain.cpp:11:13: error: no match for ‘operator-’ (operand types are ‘Complex’ and ‘Complex’)\n     c3 = c1 - c2;\n             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:328:5: note: candidate: template<class _Iterator> typename std::reverse_iterator<_Iterator>::difference_type std::operator-(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\n     operator-(const reverse_iterator<_Iterator>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:328:5: note:   template argument deduction/substitution failed:\nmain.cpp:11:15: note:   ‘Complex’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n     c3 = c1 - c2;\n               ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:380:5: note: candidate: template<class _IteratorL, class _IteratorR> decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\n     operator-(const reverse_iterator<_IteratorL>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:380:5: note:   template argument deduction/substitution failed:\nmain.cpp:11:15: note:   ‘Complex’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n     c3 = c1 - c2;\n               ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1138:5: note: candidate: template<class _IteratorL, class _IteratorR> decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)\n     operator-(const move_iterator<_IteratorL>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1138:5: note:   template argument deduction/substitution failed:\nmain.cpp:11:15: note:   ‘Complex’ is not derived from ‘const std::move_iterator<_Iterator>’\n     c3 = c1 - c2;\n               ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1145:5: note: candidate: template<class _Iterator> decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)\n     operator-(const move_iterator<_Iterator>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1145:5: note:   template argument deduction/substitution failed:\nmain.cpp:11:15: note:   ‘Complex’ is not derived from ‘const std::move_iterator<_Iterator>’\n     c3 = c1 - c2;\n               ^\n"
        ],
        [
            "9.5 (C++)",
            "米仁沙·纳斯尔",
            "#include<iostream>\n#include<iomanip>\nusing namespace std;\nclass Complex\n{\npublic:\n　　 double img;\n\tdouble real;\npublic:\n \n    //Complex(){} //无参构造函数\n \n       Complex(double x=0,double y=0) //有参构造函数\n \n       {\n \n        real=x;\n \n        img=y;\n \n    }\n \n       void print();\n \n       friend Complex operator+(const Complex&c1,Complex&c2);\n \n      friend Complex operator-( Complex&c1,Complex&c2);\n \n      friend Complex operator*( Complex&c1,Complex&c2);\n \n     friend Complex operator/( Complex&c1,Complex&c2);\n \n     Complex& operator=(const Complex &);\n \n     friend ostream& operator << (ostream&,Complex&);  //运算符“<<”重载为友元函数\n \n     friend istream& operator >> (istream&,Complex&);  //运算符“>>”重载为友元函数\n    Complex add(Complex &c1,Complex &c2);    //自定义加法运算\n \n    Complex operator++();      //自加运算\n\tComplex operator++(int);\n \n};\n \nvoid Complex::print()\n \n{\n       cout<<showpos<<real<<showpos<<img<<\"i\"<<\"\\n\"<<endl;\n}\n \nComplex operator+(const Complex &c1,const Complex &c2)\n{\n　　　　  Complex temp(c1.real+c2.real,c1.img+c2.img);\n \n              return temp;\n \n}\n \nComplex operator-( Complex &c1,Complex &c2)\n \n{\n \n        Complex temp;\n \n        temp.real=c1.real-c2.real;\n \n        temp.img=c1.img-c2.img;\n \n        return temp;       \n \n}\n \nComplex::Complex add(Complex &c1,Complex &c2)\n \n{\n \n        Complex temp;\n \n        temp.real=c1.real+c2.real;\n \n        temp.img=c1.img+c2.img;\n \n        return temp;     \n \n}\n \nComplex:: Complex operator*(Complex &c1,Complex &c2)\n \n{\n \n        Complex temp;\n \n        temp.real=c1.real*c2.real-c1.img*c2.img;\n \n        temp.img=c1.real*c2.img+c1.img*c2.real;\n \n        return temp;\n \n}\n \nComplex::Complex operator/(Complex &c1,Complex &c2)\n \n{\n \n         Complex temp;\n \n         temp.real=c1.real/c2.real;\n \n         temp.img =c1.img/c2.real;\n \n         return temp;                  \n \n}\n \nComplex& Complex::operator=(const Complex &c)\n \n{\n \n          this->real=c.real;\n \n          this->img=c.img;\n \n          return *this;                  \n \n}\n \nComplex Complex:: operator++()\n \n{ \n \n         real++;\n \n         img++;\n \n         return *this;             \n \n}\n\nComplex Complex:: operator++(int)\n \n{ \n \n         ++real;\n \n         ++img;\n \n         return *this;             \n \n}\n \nostream& operator << (ostream& output,Complex& c) //定义运算符“<<”重载函数\n \n{\n \n        if(c.real==0)\n \n        {\n \n            output<<c.img<<\"i\"<<endl;\n \n        }\n \n        if(c.img==0)\n \n        {\n \n            output<<c.real<<endl;\n \n        }\n \n        else if(c.real!=0&&c.img!=0)\n \n        {\n \n         output<<c.real<<c.img<<\"i\"<<endl;\n \n        }\n \n        return output;\n \n}\n \nistream& operator >> (istream& input,Complex& c)  //定义重载运算符“>>”\n \n{\n \n  \n \n   input>>c.real>>c.img;\n \n   return input;\n \n}\n \n\n \n  ",
            1593088984.021093,
            0,
            "In file included from main.cpp:4:0:\nsource.cpp:7:1: error: stray ‘\\343’ in program\n 　　 double img;\n ^\nsource.cpp:7:1: error: stray ‘\\200’ in program\nsource.cpp:7:1: error: stray ‘\\200’ in program\nsource.cpp:7:1: error: stray ‘\\343’ in program\nsource.cpp:7:1: error: stray ‘\\200’ in program\nsource.cpp:7:1: error: stray ‘\\200’ in program\nsource.cpp:53:1: error: stray ‘\\343’ in program\n 　　　　  Complex temp(c1.real+c2.real,c1.img+c2.img);\n ^\nsource.cpp:53:1: error: stray ‘\\200’ in program\nsource.cpp:53:1: error: stray ‘\\200’ in program\nsource.cpp:53:1: error: stray ‘\\343’ in program\nsource.cpp:53:1: error: stray ‘\\200’ in program\nsource.cpp:53:1: error: stray ‘\\200’ in program\nsource.cpp:53:1: error: stray ‘\\343’ in program\nsource.cpp:53:1: error: stray ‘\\200’ in program\nsource.cpp:53:1: error: stray ‘\\200’ in program\nsource.cpp:53:1: error: stray ‘\\343’ in program\nsource.cpp:53:1: error: stray ‘\\200’ in program\nsource.cpp:53:1: error: stray ‘\\200’ in program\nsource.cpp:73:1: error: ‘Complex::Complex’ names the constructor, not the type\n Complex::Complex add(Complex &c1,Complex &c2)\n ^\nsource.cpp:87:1: error: ‘Complex::Complex’ names the constructor, not the type\n Complex:: Complex operator*(Complex &c1,Complex &c2)\n ^\nsource.cpp:101:1: error: ‘Complex::Complex’ names the constructor, not the type\n Complex::Complex operator/(Complex &c1,Complex &c2)\n ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:9:24: error: no match for ‘operator<<’ (operand types are ‘std::basic_ostream<char>’ and ‘Complex’)\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                        ^\nIn file included from main.cpp:4:0:\nsource.cpp:151:10: note: candidate: std::ostream& operator<<(std::ostream&, Complex&) <near match>\n ostream& operator << (ostream& output,Complex& c) //定义运算符“<<”重载函数\n          ^\nsource.cpp:151:10: note:   conversion of argument 2 would be ill-formed:\nmain.cpp:9:30: error: invalid initialization of non-const reference of type ‘Complex&’ from an rvalue of type ‘Complex’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:108:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(__ostream_type& (*__pf)(__ostream_type&))\n       ^\n/usr/include/c++/5/ostream:108:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘std::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&) {aka std::basic_ostream<char>& (*)(std::basic_ostream<char>&)}’\n/usr/include/c++/5/ostream:117:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]\n       operator<<(__ios_type& (*__pf)(__ios_type&))\n       ^\n/usr/include/c++/5/ostream:117:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘std::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’\n/usr/include/c++/5/ostream:127:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(ios_base& (*__pf) (ios_base&))\n       ^\n/usr/include/c++/5/ostream:127:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘std::ios_base& (*)(std::ios_base&)’\n/usr/include/c++/5/ostream:166:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long __n)\n       ^\n/usr/include/c++/5/ostream:166:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long int’\n/usr/include/c++/5/ostream:170:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned long __n)\n       ^\n/usr/include/c++/5/ostream:170:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long unsigned int’\n/usr/include/c++/5/ostream:174:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(bool __n)\n       ^\n/usr/include/c++/5/ostream:174:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘bool’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:91:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:91:5: note:   no known conversion for argument 1 from ‘Complex’ to ‘short int’\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:181:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned short __n)\n       ^\n/usr/include/c++/5/ostream:181:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘short unsigned int’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:105:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:105:5: note:   no known conversion for argument 1 from ‘Complex’ to ‘int’\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:192:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned int __n)\n       ^\n/usr/include/c++/5/ostream:192:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘unsigned int’\n/usr/include/c++/5/ostream:201:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long long __n)\n       ^\n/usr/include/c++/5/ostream:201:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long long int’\n/usr/include/c++/5/ostream:205:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned long long __n)\n       ^\n/usr/include/c++/5/ostream:205:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long long unsigned int’\n/usr/include/c++/5/ostream:220:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(double __f)\n       ^\n/usr/include/c++/5/ostream:220:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘double’\n/usr/include/c++/5/ostream:224:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(float __f)\n       ^\n/usr/include/c++/5/ostream:224:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘float’\n/usr/include/c++/5/ostream:232:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long double __f)\n       ^\n/usr/include/c++/5/ostream:232:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long double’\n/usr/include/c++/5/ostream:245:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(const void* __p)\n       ^\n/usr/include/c++/5/ostream:245:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘const void*’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:119:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:119:5: note:   no known conversion for argument 1 from ‘Complex’ to ‘std::basic_ostream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:363:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_time<_CharT>)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_time<_CharT> __f)\n     ^\n/usr/include/c++/5/iomanip:363:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   ‘Complex’ is not derived from ‘std::_Put_time<_CharT>’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:311:5: note: candidate: template<class _CharT, class _Traits, class _MoneyT> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_money<_MoneyT>)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_money<_MoneyT> __f)\n     ^\n/usr/include/c++/5/iomanip:311:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   ‘Complex’ is not derived from ‘std::_Put_money<_MoneyT>’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:238:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setw __f)\n     ^\n/usr/include/c++/5/iomanip:238:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘std::_Setw’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:208:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setprecision __f)\n     ^\n/usr/include/c++/5/iomanip:208:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘std::_Setprecision’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:178:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setfill<_CharT> __f)\n     ^\n/usr/include/c++/5/iomanip:178:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   ‘Complex’ is not derived from ‘std::_Setfill<_CharT>’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:143:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setbase)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setbase __f)\n     ^\n/usr/include/c++/5/iomanip:143:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘std::_Setbase’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:109:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setiosflags)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setiosflags __f)\n     ^\n/usr/include/c++/5/iomanip:109:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘std::_Setiosflags’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:79:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Resetiosflags)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Resetiosflags __f)\n     ^\n/usr/include/c++/5/iomanip:79:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘std::_Resetiosflags’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:628:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&&, const _Tp&) [with _CharT = char; _Traits = std::char_traits<char>; _Tp = Complex] <near match>\n     operator<<(basic_ostream<_CharT, _Traits>&& __os, const _Tp& __x)\n     ^\n/usr/include/c++/5/ostream:628:5: note:   conversion of argument 1 would be ill-formed:\nmain.cpp:9:10: error: cannot bind ‘std::basic_ostream<char>’ lvalue to ‘std::basic_ostream<char>&&’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n          ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:574:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)\n     ^\n/usr/include/c++/5/ostream:574:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘const unsigned char*’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:569:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)\n     ^\n/usr/include/c++/5/ostream:569:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘const signed char*’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:556:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)\n     ^\n/usr/include/c++/5/ostream:556:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘const char*’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:321:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)\n     ^\n/usr/include/c++/5/bits/ostream.tcc:321:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘const char*’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:539:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)\n     ^\n/usr/include/c++/5/ostream:539:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   mismatched types ‘const _CharT*’ and ‘Complex’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:519:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)\n     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)\n     ^\n/usr/include/c++/5/ostream:519:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘unsigned char’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:514:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)\n     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)\n     ^\n/usr/include/c++/5/ostream:514:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘signed char’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:508:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)\n     operator<<(basic_ostream<char, _Traits>& __out, char __c)\n     ^\n/usr/include/c++/5/ostream:508:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘char’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:502:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)\n     ^\n/usr/include/c++/5/ostream:502:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘char’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:497:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)\n     ^\n/usr/include/c++/5/ostream:497:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘Complex’)\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/bits/ios_base.h:46:0,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/system_error:209:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)\n     ^\n/usr/include/c++/5/system_error:209:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   cannot convert ‘c1.Complex::operator++()’ (type ‘Complex’) to type ‘const std::error_code&’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:5172:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator<<(basic_ostream<_CharT, _Traits>& __os,\n     ^\n/usr/include/c++/5/bits/basic_string.h:5172:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:30: note:   ‘Complex’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     cout << \"++ c1 = \" << ++ c1 << endl; // 实部 += 1\n                              ^\nmain.cpp:10:24: error: no match for ‘operator<<’ (operand types are ‘std::basic_ostream<char>’ and ‘Complex’)\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                        ^\nIn file included from main.cpp:4:0:\nsource.cpp:151:10: note: candidate: std::ostream& operator<<(std::ostream&, Complex&) <near match>\n ostream& operator << (ostream& output,Complex& c) //定义运算符“<<”重载函数\n          ^\nsource.cpp:151:10: note:   conversion of argument 2 would be ill-formed:\nmain.cpp:10:30: error: invalid initialization of non-const reference of type ‘Complex&’ from an rvalue of type ‘Complex’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:108:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(__ostream_type& (*__pf)(__ostream_type&))\n       ^\n/usr/include/c++/5/ostream:108:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘std::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&) {aka std::basic_ostream<char>& (*)(std::basic_ostream<char>&)}’\n/usr/include/c++/5/ostream:117:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]\n       operator<<(__ios_type& (*__pf)(__ios_type&))\n       ^\n/usr/include/c++/5/ostream:117:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘std::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’\n/usr/include/c++/5/ostream:127:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(ios_base& (*__pf) (ios_base&))\n       ^\n/usr/include/c++/5/ostream:127:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘std::ios_base& (*)(std::ios_base&)’\n/usr/include/c++/5/ostream:166:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long __n)\n       ^\n/usr/include/c++/5/ostream:166:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long int’\n/usr/include/c++/5/ostream:170:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned long __n)\n       ^\n/usr/include/c++/5/ostream:170:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long unsigned int’\n/usr/include/c++/5/ostream:174:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(bool __n)\n       ^\n/usr/include/c++/5/ostream:174:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘bool’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:91:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:91:5: note:   no known conversion for argument 1 from ‘Complex’ to ‘short int’\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:181:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned short __n)\n       ^\n/usr/include/c++/5/ostream:181:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘short unsigned int’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:105:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:105:5: note:   no known conversion for argument 1 from ‘Complex’ to ‘int’\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:192:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned int __n)\n       ^\n/usr/include/c++/5/ostream:192:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘unsigned int’\n/usr/include/c++/5/ostream:201:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long long __n)\n       ^\n/usr/include/c++/5/ostream:201:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long long int’\n/usr/include/c++/5/ostream:205:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned long long __n)\n       ^\n/usr/include/c++/5/ostream:205:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long long unsigned int’\n/usr/include/c++/5/ostream:220:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(double __f)\n       ^\n/usr/include/c++/5/ostream:220:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘double’\n/usr/include/c++/5/ostream:224:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(float __f)\n       ^\n/usr/include/c++/5/ostream:224:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘float’\n/usr/include/c++/5/ostream:232:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long double __f)\n       ^\n/usr/include/c++/5/ostream:232:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘long double’\n/usr/include/c++/5/ostream:245:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(const void* __p)\n       ^\n/usr/include/c++/5/ostream:245:7: note:   no known conversion for argument 1 from ‘Complex’ to ‘const void*’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:119:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:119:5: note:   no known conversion for argument 1 from ‘Complex’ to ‘std::basic_ostream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:363:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_time<_CharT>)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_time<_CharT> __f)\n     ^\n/usr/include/c++/5/iomanip:363:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   ‘Complex’ is not derived from ‘std::_Put_time<_CharT>’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:311:5: note: candidate: template<class _CharT, class _Traits, class _MoneyT> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Put_money<_MoneyT>)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_money<_MoneyT> __f)\n     ^\n/usr/include/c++/5/iomanip:311:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   ‘Complex’ is not derived from ‘std::_Put_money<_MoneyT>’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:238:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setw)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setw __f)\n     ^\n/usr/include/c++/5/iomanip:238:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘std::_Setw’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:208:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setprecision)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setprecision __f)\n     ^\n/usr/include/c++/5/iomanip:208:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘std::_Setprecision’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:178:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setfill<_CharT>)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setfill<_CharT> __f)\n     ^\n/usr/include/c++/5/iomanip:178:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   ‘Complex’ is not derived from ‘std::_Setfill<_CharT>’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:143:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setbase)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setbase __f)\n     ^\n/usr/include/c++/5/iomanip:143:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘std::_Setbase’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:109:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Setiosflags)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setiosflags __f)\n     ^\n/usr/include/c++/5/iomanip:109:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘std::_Setiosflags’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from source.cpp:2:0,\n                 from main.cpp:4:\n/usr/include/c++/5/iomanip:79:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, std::_Resetiosflags)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, _Resetiosflags __f)\n     ^\n/usr/include/c++/5/iomanip:79:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘std::_Resetiosflags’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:628:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&&, const _Tp&) [with _CharT = char; _Traits = std::char_traits<char>; _Tp = Complex] <near match>\n     operator<<(basic_ostream<_CharT, _Traits>&& __os, const _Tp& __x)\n     ^\n/usr/include/c++/5/ostream:628:5: note:   conversion of argument 1 would be ill-formed:\nmain.cpp:10:10: error: cannot bind ‘std::basic_ostream<char>’ lvalue to ‘std::basic_ostream<char>&&’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n          ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:574:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)\n     ^\n/usr/include/c++/5/ostream:574:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘const unsigned char*’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:569:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)\n     ^\n/usr/include/c++/5/ostream:569:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘const signed char*’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:556:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)\n     ^\n/usr/include/c++/5/ostream:556:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘const char*’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:321:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)\n     ^\n/usr/include/c++/5/bits/ostream.tcc:321:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘const char*’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:539:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)\n     ^\n/usr/include/c++/5/ostream:539:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   mismatched types ‘const _CharT*’ and ‘Complex’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:519:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)\n     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)\n     ^\n/usr/include/c++/5/ostream:519:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘unsigned char’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:514:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)\n     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)\n     ^\n/usr/include/c++/5/ostream:514:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘signed char’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:508:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)\n     operator<<(basic_ostream<char, _Traits>& __out, char __c)\n     ^\n/usr/include/c++/5/ostream:508:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘char’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:502:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)\n     ^\n/usr/include/c++/5/ostream:502:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘char’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:497:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)\n     ^\n/usr/include/c++/5/ostream:497:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘Complex’)\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/bits/ios_base.h:46:0,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/system_error:209:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)\n     ^\n/usr/include/c++/5/system_error:209:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   cannot convert ‘c1.Complex::operator++(0)’ (type ‘Complex’) to type ‘const std::error_code&’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:5172:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator<<(basic_ostream<_CharT, _Traits>& __os,\n     ^\n/usr/include/c++/5/bits/basic_string.h:5172:5: note:   template argument deduction/substitution failed:\nmain.cpp:10:30: note:   ‘Complex’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     cout << \"c1 ++ = \" << c1 ++ << endl; // 实部 += 1\n                              ^\nmain.cpp:11:16: error: cannot convert ‘Complex’ to ‘double’ in initialization\n  double real = c1; // 获取实部\n                ^\n"
        ],
        [
            "10.2 (C++)",
            "米仁沙·纳斯尔",
            "catch(NonPositiveValueException &ex){\n\tcout << \"caught: NonPositiveValueException\" << endl;\n}\n\ncatch(out_of_range &ex){\n\t\ncout << \"caught: out_of_range\" << endl;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1593660309.834281,
            100,
            "# 答案正确"
        ],
        [
            "10.1 (C++)",
            "米仁沙·纳斯尔",
            "#include <stdexcept>\n\nclass MatrixSizesDoNotMatchException{};\n\n\n\ndouble Matrix::get(int row, int column) const{\n\tif(row>rows || column>columns){\n\t\tthrow(out_of_range)\"error\";\n\t}\n\telse\n\t\treturn elements[row,column];\n\n}\n\t\nvoid Matrix::set(int row, int column, double value){\n\tif(row>rows || column>columns){\n\t\tthrow(out_of_range)\"error\";\n\t}\n\telse\n\t\telements[row,column]=value;\n}\n\t\nMatrix Matrix::operator + (const Matrix & matrix2) const{\n\tif(matrix2.rows!=rows || matrix2.columns!=columns){\n\t\tMatrixSizesDoNotMatchException error;\n\t\tthrow error;\n\t}\n\t\n\telse{\n\n\t\tMatrix a(matrix2.rows,matrix2.columns);\n\t\tfor (int i = 0; i < rows*columns; ++ i) \n\t\t\t\ta.elements[i]=elements[i]+matrix2.elements[i];\t\t\n\t\n\t\treturn a;\n\t}\n\t\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1593678810.0638988,
            100,
            "# 答案正确"
        ],
        [
            "2020-07-09 LAB",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n\nclass Integer{\n\nprivate:\nstatic int x;\n\n\npublic:\n\nInteger(){\n\tx=0;\n}\n\nInteger(int a){\n\tx=a;\n}\n\nInteger increase_all(int a)();\n\t\nfriend ostream &operator<<( ostream &output, const Integer &a){ \n         output << a.x;\n         return output;            \n }\n \nfriend istream &operator>>( istream  &input, Integer  &a){ \n         input >> a.x;\n         return input;            \n}\n\t\nInteger operator+(const Integer &a){\n\tInteger b;\n\tb.x=a.x+this->x;\n\treturn b;\n}\n\t\n};\n\nint Integer::x=0;\n\nInteger Integer::increase_all(Integer &a){\n\tx=x+a.x;\n\treturn *this;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1594265940.8381834,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:20:29: error: ‘increase_all’ declared as function returning a function\n Integer increase_all(int a)();\n                             ^\nsource.cpp:42:41: error: no ‘Integer Integer::increase_all(Integer&)’ member function declared in class ‘Integer’\n Integer Integer::increase_all(Integer &a){\n                                         ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:12:2: error: ‘increase_all’ is not a member of ‘Integer’\n  Integer::increase_all(100);\n  ^\nmain.cpp:14:2: error: ‘increase_all’ is not a member of ‘Integer’\n  Integer::increase_all(y);\n  ^\n"
        ],
        [
            "15.1 (C++)",
            "米仁沙·纳斯尔",
            "#include <iostream>\nusing namespace std;\n#include <string>\n#include <vector>\n\nclass Table\n{\n\tprivate:\n\tvector<string> vec;\n\tstatic int col;\n\t\n\t\n\tpublic:\n\tTable(){\n\t\tvec.size()=0;\n\t}\n\t\n\tvoid addCol(string a){\n\t\tvec[0][col]=a;\n\t\tcol++;\n\t}\n\t\n\tvoid json(){\n\t\tcout << \"{\" << endl;\n\t\tcout << \"headers: [\" ;\n\t\tfor (int i = 0; i < col; ++ i) \n\t\t\tcout << \"'\" << vec[0][i] << \"'\" << \",\";\n\t\tcout << \"],\" << endl;\n\t\tcout << \"rows: [\" << endl;\n\t\tfor (int i = 0; i < vec.size(); ++ i) \n\t\t\tcout << \"'\" << vec[i] << \"',\";\n\t    cout << \"],\" << endl;\n\t\tcout << \"}\" ;\n\t} \n\t\n\t\n};\n\nint Table::col=0;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
            1594288555.0946045,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In constructor ‘Table::Table()’:\nsource.cpp:15:13: error: lvalue required as left operand of assignment\n   vec.size()=0;\n             ^\nsource.cpp: In member function ‘void Table::addCol(std::__cxx11::string)’:\nsource.cpp:19:14: error: cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘__gnu_cxx::__alloc_traits<std::allocator<char> >::value_type {aka char}’ in assignment\n   vec[0][col]=a;\n              ^\nmain.cpp: In function ‘std::ostream& operator<<(std::ostream&, const Table&)’:\nmain.cpp:9:20: error: passing ‘const Table’ as ‘this’ argument discards qualifiers [-fpermissive]\n  out << table.json() << endl;\n                    ^\nIn file included from main.cpp:1:0:\nsource.cpp:23:7: note:   in call to ‘void Table::json()’\n  void json(){\n       ^\nmain.cpp:9:6: error: no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘void’)\n  out << table.json() << endl;\n      ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:108:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ostream_type& (*)(std::basic_ostream<_CharT, _Traits>::__ostream_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(__ostream_type& (*__pf)(__ostream_type&))\n       ^\n/usr/include/c++/5/ostream:108:7: note:   no known conversion for argument 1 from ‘void’ to ‘std::basic_ostream<char>::__ostream_type& (*)(std::basic_ostream<char>::__ostream_type&) {aka std::basic_ostream<char>& (*)(std::basic_ostream<char>&)}’\n/usr/include/c++/5/ostream:117:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__ios_type& (*)(std::basic_ostream<_CharT, _Traits>::__ios_type&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>; std::basic_ostream<_CharT, _Traits>::__ios_type = std::basic_ios<char>]\n       operator<<(__ios_type& (*__pf)(__ios_type&))\n       ^\n/usr/include/c++/5/ostream:117:7: note:   no known conversion for argument 1 from ‘void’ to ‘std::basic_ostream<char>::__ios_type& (*)(std::basic_ostream<char>::__ios_type&) {aka std::basic_ios<char>& (*)(std::basic_ios<char>&)}’\n/usr/include/c++/5/ostream:127:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(std::ios_base& (*)(std::ios_base&)) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(ios_base& (*__pf) (ios_base&))\n       ^\n/usr/include/c++/5/ostream:127:7: note:   no known conversion for argument 1 from ‘void’ to ‘std::ios_base& (*)(std::ios_base&)’\n/usr/include/c++/5/ostream:166:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long __n)\n       ^\n/usr/include/c++/5/ostream:166:7: note:   no known conversion for argument 1 from ‘void’ to ‘long int’\n/usr/include/c++/5/ostream:170:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned long __n)\n       ^\n/usr/include/c++/5/ostream:170:7: note:   no known conversion for argument 1 from ‘void’ to ‘long unsigned int’\n/usr/include/c++/5/ostream:174:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(bool) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(bool __n)\n       ^\n/usr/include/c++/5/ostream:174:7: note:   no known conversion for argument 1 from ‘void’ to ‘bool’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:91:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(short int) [with _CharT = char; _Traits = std::char_traits<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:91:5: note:   no known conversion for argument 1 from ‘void’ to ‘short int’\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:181:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(short unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned short __n)\n       ^\n/usr/include/c++/5/ostream:181:7: note:   no known conversion for argument 1 from ‘void’ to ‘short unsigned int’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:105:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(int) [with _CharT = char; _Traits = std::char_traits<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:105:5: note:   no known conversion for argument 1 from ‘void’ to ‘int’\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:192:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned int __n)\n       ^\n/usr/include/c++/5/ostream:192:7: note:   no known conversion for argument 1 from ‘void’ to ‘unsigned int’\n/usr/include/c++/5/ostream:201:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long long __n)\n       ^\n/usr/include/c++/5/ostream:201:7: note:   no known conversion for argument 1 from ‘void’ to ‘long long int’\n/usr/include/c++/5/ostream:205:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long long unsigned int) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(unsigned long long __n)\n       ^\n/usr/include/c++/5/ostream:205:7: note:   no known conversion for argument 1 from ‘void’ to ‘long long unsigned int’\n/usr/include/c++/5/ostream:220:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(double __f)\n       ^\n/usr/include/c++/5/ostream:220:7: note:   no known conversion for argument 1 from ‘void’ to ‘double’\n/usr/include/c++/5/ostream:224:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(float) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(float __f)\n       ^\n/usr/include/c++/5/ostream:224:7: note:   no known conversion for argument 1 from ‘void’ to ‘float’\n/usr/include/c++/5/ostream:232:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(long double) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(long double __f)\n       ^\n/usr/include/c++/5/ostream:232:7: note:   no known conversion for argument 1 from ‘void’ to ‘long double’\n/usr/include/c++/5/ostream:245:7: note: candidate: std::basic_ostream<_CharT, _Traits>::__ostream_type& std::basic_ostream<_CharT, _Traits>::operator<<(const void*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__ostream_type = std::basic_ostream<char>]\n       operator<<(const void* __p)\n       ^\n/usr/include/c++/5/ostream:245:7: note:   no known conversion for argument 1 from ‘void’ to ‘const void*’\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:119:5: note: candidate: std::basic_ostream<_CharT, _Traits>& std::basic_ostream<_CharT, _Traits>::operator<<(std::basic_ostream<_CharT, _Traits>::__streambuf_type*) [with _CharT = char; _Traits = std::char_traits<char>; std::basic_ostream<_CharT, _Traits>::__streambuf_type = std::basic_streambuf<char>]\n     basic_ostream<_CharT, _Traits>::\n     ^\n/usr/include/c++/5/bits/ostream.tcc:119:5: note:   no known conversion for argument 1 from ‘void’ to ‘std::basic_ostream<char>::__streambuf_type* {aka std::basic_streambuf<char>*}’\nmain.cpp:8:11: note: candidate: std::ostream& operator<<(std::ostream&, const Table&)\n ostream & operator << (ostream & out, const Table & table) {\n           ^\nmain.cpp:8:11: note:   no known conversion for argument 2 from ‘void’ to ‘const Table&’\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:628:5: note: candidate: template<class _CharT, class _Traits, class _Tp> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&&, const _Tp&)\n     operator<<(basic_ostream<_CharT, _Traits>&& __os, const _Tp& __x)\n     ^\n/usr/include/c++/5/ostream:628:5: note:   template argument deduction/substitution failed:\n/usr/include/c++/5/ostream: In substitution of ‘template<class _CharT, class _Traits, class _Tp> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&&, const _Tp&) [with _CharT = char; _Traits = std::char_traits<char>; _Tp = void]’:\nmain.cpp:9:20:   required from here\n/usr/include/c++/5/ostream:628:5: error: forming reference to void\n/usr/include/c++/5/ostream:574:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const unsigned char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const unsigned char* __s)\n     ^\n/usr/include/c++/5/ostream:574:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘const unsigned char*’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:569:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const signed char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const signed char* __s)\n     ^\n/usr/include/c++/5/ostream:569:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘const signed char*’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:556:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, const char*)\n     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)\n     ^\n/usr/include/c++/5/ostream:556:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘const char*’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/ostream:638:0,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/ostream.tcc:321:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const char*)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s)\n     ^\n/usr/include/c++/5/bits/ostream.tcc:321:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘const char*’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:539:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const _CharT*)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)\n     ^\n/usr/include/c++/5/ostream:539:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:20: note:   mismatched types ‘const _CharT*’ and ‘void’\n  out << table.json() << endl;\n                    ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:519:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, unsigned char)\n     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)\n     ^\n/usr/include/c++/5/ostream:519:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘unsigned char’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:514:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, signed char)\n     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)\n     ^\n/usr/include/c++/5/ostream:514:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘signed char’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:508:5: note: candidate: template<class _Traits> std::basic_ostream<char, _Traits>& std::operator<<(std::basic_ostream<char, _Traits>&, char)\n     operator<<(basic_ostream<char, _Traits>& __out, char __c)\n     ^\n/usr/include/c++/5/ostream:508:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘char’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:502:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, char)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)\n     ^\n/usr/include/c++/5/ostream:502:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘char’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/iostream:39:0,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/ostream:497:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, _CharT)\n     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)\n     ^\n/usr/include/c++/5/ostream:497:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:20: note:   deduced conflicting types for parameter ‘_CharT’ (‘char’ and ‘void’)\n  out << table.json() << endl;\n                    ^\nIn file included from /usr/include/c++/5/bits/ios_base.h:46:0,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/system_error:209:5: note: candidate: template<class _CharT, class _Traits> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::error_code&)\n     operator<<(basic_ostream<_CharT, _Traits>& __os, const error_code& __e)\n     ^\n/usr/include/c++/5/system_error:209:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:19: note:   cannot convert ‘(& table)->Table::json()’ (type ‘void’) to type ‘const std::error_code&’\n  out << table.json() << endl;\n                   ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:5172:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::basic_ostream<_CharT, _Traits>& std::operator<<(std::basic_ostream<_CharT, _Traits>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator<<(basic_ostream<_CharT, _Traits>& __os,\n     ^\n/usr/include/c++/5/bits/basic_string.h:5172:5: note:   template argument deduction/substitution failed:\nmain.cpp:9:20: note:   mismatched types ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘void’\n  out << table.json() << endl;\n                    ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:20:4: error: no match for ‘operator[]’ (operand types are ‘Table’ and ‘int’)\n  t1[0] = vec; // 表格允许设置最后一个不存在的行(这时自动添加尾行), 变为一个有2列, 表头为[\"AA\", \"BB\"], 有1行数据的表\n    ^\nmain.cpp:23:4: error: no match for ‘operator[]’ (operand types are ‘Table’ and ‘int’)\n  t1[1] = vec; // 表格允许设置最后一个不存在的行(这时自动添加尾行), 变为一个有2列, 表头为[\"AA\", \"BB\"], 有2行数据的表\n    ^\n"
        ],
        [
            "A.2 (C++)",
            "米仁沙·纳斯尔",
            "template<class E>\n\nvoid\nLinkedList::removeAll(double val) {\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}",
            1594867974.51815,
            0,
            "In file included from main.cpp:173:0:\nsource.cpp:4:1: error: ‘template<class E> class LinkedList’ used without template parameters\n LinkedList::removeAll(double val) {\n ^\n"
        ]
    ],
    "table_name": "答案"
}