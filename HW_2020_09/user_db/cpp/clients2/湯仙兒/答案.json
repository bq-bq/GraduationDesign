{
    "__update_time__": 1596199961.8289962,
    "field_names": [
        "题目名",
        "用户名",
        "答案",
        "提交时间",
        "分数",
        "评语"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "time",
        "number",
        "text"
    ],
    "foreign_keys": {},
    "primary_keys": [],
    "rows": [
        [
            "测试1",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nint main() {\n\tchar *a;\n\tchar *b;\n\tchar *c;\n\tcin >> a;\n\tcin >> b;\n\tcin >> c;\n\tcout << c << ' ';\n\tcout << b << ' ';\n\tcout << a << endl;\n}",
            1587608916.4823196,
            0,
            "Segmentation fault (core dumped)\n"
        ],
        [
            "测试2",
            "湯仙兒",
            "#include <iostream>\n#include <string>\nusing namespace std;\n\nstruct comp{\n\tchar str[6] = {0};\n};\n\nint main() {\n\tstruct comp word[10];\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcin >> word[i].str;\n\t}\n\tchar n[6];\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tfor (int j = 0; j < 9; ++ j) {\n\t\t\tif(*(word[j]).str > *(word[j + 1]).str) {\n\t\t\t\tn[6] = *(word[j]).str;\n\t\t\t\t*(word[j]).str = *(word[j + 1]).str;\n\t\t\t\t*(word[j + 1]).str = n[6];\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < 10; ++ i) {\n\t\tcout << word[i].str << ' ';\n\t}\n}",
            1587613166.1474707,
            50,
            "# 答案不正确\n\n# 随机输入:\nEEKRK DHQBW VICRF BUXLM VHIWP GCLLX WLXZB JBCUI OZWEP FRNID \n\n# 参考答案:\nBUXLM DHQBW EEKRK FRNID GCLLX JBCUI OZWEP VHIWP VICRF WLXZB \n\n# 我的答案:\nBEKRK DHQBW EICRF FUXLM GHIWP JCLLX OLXZB VBCUI VZWEP WRNID "
        ],
        [
            "1.1 (C++)",
            "湯仙兒",
            "class Matrix5x5 {\npublic:\n\tint x;\n\tint y;\n\tdouble get(int x, int y) = 0;\n\tvoid set(int x, int y, double get);\n\tMatrix5x5 operator + (Matrix5x5 &m1, Matrix5x5 &m2) const {\n\t\tMatrix5x5 m3;\n\t\tm3.set = m1.set + m2.set;\n\t\treturn m3.set;\n\t}\n};",
            1588163907.6916347,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:7:54: error: ‘Matrix5x5 Matrix5x5::operator+(Matrix5x5&, Matrix5x5&) const’ must take either zero or one argument\n  Matrix5x5 operator + (Matrix5x5 &m1, Matrix5x5 &m2) const {\n                                                      ^\nsource.cpp:5:9: error: initializer specified for non-virtual method ‘double Matrix5x5::get(int, int)’\n  double get(int x, int y) = 0;\n         ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:25:10: error: no match for ‘operator+’ (operand types are ‘Matrix5x5’ and ‘Matrix5x5’)\n  m3 = m1 + m2;\n          ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::move_iterator<_Iterator>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   mismatched types ‘const _CharT*’ and ‘Matrix5x5’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:2:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:25:12: note:   ‘Matrix5x5’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  m3 = m1 + m2;\n            ^\n"
        ],
        [
            "1.2 (C++)",
            "湯仙兒",
            "#include <cstring>\nusing namespace std;\nclass School {\n\tpublic:\n\t\tchar * name;\n\t\tint age = 0;\n\t\tname[0] = 'N';\n\t\tname[1] = 'O';\n\t\tname[2] = '_';\n\t\tname[3] = 'N';\n\t\tname[4] = 'A';\n\t\tname[5] = 'M';\n\t\tname[6] = 'E';\n\t\t/*School() {\n\t\t\tthis->name = new char[20];\n\t\t\tfor (int i = 0; i < ; ++ i) {\n\t\t\t\t\n\t\t\t}\n\t\t}*/\n\t\tvoid setName(char newName[]) {\n\t\t\t//delete[] this->name;\n\t\t\tthis->name = new char[20];\n\t\t\tthis->name = newName;\n\t\t}\n\t\t~School() {\n\t\t\tdelete [] this->name;\n\t\t}\n\t\tvoid setAge(int year) {\n\t\t\tage = year;\n\t\t}\n\t\tvoid operator ++ () {\n\t\t\t this->age = this->age + 1;\n\t\t}\n};",
            1588218044.578721,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp:7:3: error: ‘name’ does not name a type\n   name[0] = 'N';\n   ^\nsource.cpp:8:3: error: ‘name’ does not name a type\n   name[1] = 'O';\n   ^\nsource.cpp:9:3: error: ‘name’ does not name a type\n   name[2] = '_';\n   ^\nsource.cpp:10:3: error: ‘name’ does not name a type\n   name[3] = 'N';\n   ^\nsource.cpp:11:3: error: ‘name’ does not name a type\n   name[4] = 'A';\n   ^\nsource.cpp:12:3: error: ‘name’ does not name a type\n   name[5] = 'M';\n   ^\nsource.cpp:13:3: error: ‘name’ does not name a type\n   name[6] = 'E';\n   ^\n"
        ],
        [
            "2020/05/08",
            "湯仙兒",
            "double & Tensor_get(int dimensions, int sizes[], double data[], int x0, int x1, int x2, int x3) {\n\tif(sizes[1] == -1 && sizes[2] == -1 && sizes[3] == -1) {\n\t\tdata[0] = x0;\n\t}\n\tif(sizes[1] != -1 && sizes[2] == -1 && sizes[3] == -1) {\n\t\tdata[0] = x1;\n\t\tdata[1] = x0 * 10 + data[0];\n\t}\n\tif(sizes[1] != -1 && sizes[2] != -1 && sizes[3] == -1) {\n\t\tdata[0] = x2;\n\t\tdata[1] = x1 * 10 + data[0];\n\t\tdata[2] = x0 * 100 + data [1];\n\t}\n\tif(sizes[1] != -1 && sizes[2] != -1 && sizes[3] != -1) {\n\t\tdata[0] = x3;\n\t\tdata[1] = x2 * 10 + data[0];\n\t\tdata[2] = x1 * 100 + data [1];\n\t\tdata[3] = x0 * 1000 + data[2];\n\t}\n}",
            1588909139.4474366,
            50,
            "# 答案不正确\n\n# 随机输入:\n1 1\n2 3\n2 1\n\n1 0 4\n1 3 3\n0 3 2\n\n1 1 0 3\n0 2 0 3\n1 3 2 1\n\n\n\n# 参考答案:\n11\n23\n21\n\n104\n133\n32\n\n1103\n203\n1321\n\n\n# 我的答案:\n1089\n2289\n2089\n\n1039\n1329\n319\n\n1103\n203\n1321\n"
        ],
        [
            "2.1 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\nprivate:\n\tint rows;\n\tint columns;\n\tdouble ** values;\npublic:\n\tMatrix(int rows, int columns) {\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\t//if(values != values) delete values;\n\t\tvalues = new double * [rows];\n\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\tvalues[i] = new double [columns];\n\t\t\tfor (int j = 0; j < columns; ++ j) \n\t\t\t\tvalues[i][j] = 0;\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete [] this->values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\tcout << \"    \" << values[i][j];\n\t\t\t\t++j;\n\t\t\t\tif(j == columns) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tcout << endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};",
            1589459403.339962,
            0,
            "\n=================================================================\n==12324==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 256 byte(s) in 8 object(s) allocated from:\n    #0 0x7fafc35076b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2)\n    #1 0x55f9dc3e14bc in Matrix::Matrix(int, int) /home/湯仙兒/source.cpp:16\n    #2 0x55f9dc3e14bc in main /home/湯仙兒/main.cpp:7\n    #3 0x7fafc2b2c82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\nSUMMARY: AddressSanitizer: 256 byte(s) leaked in 8 allocation(s).\n"
        ],
        [
            "2020/05/14",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nvoid Tensor_print(int dimensions, const int sizes[], const double data[]) {\n\tif(dimensions == 1) {\n\t\tcout << \"Tensor of \" << sizes[0] << endl;\n\t\tfor (int i = 0; i < sizes[0]; ++ i) cout << data[i] << endl;\n\t}\n\tif(dimensions == 2) {\n\t\tcout << \"Tensor of \" << sizes[0] << \"x\" << sizes[1] << endl;\n\t\tfor (int i = 0; i < sizes[0]; ++ i) {\n\t\t\tfor (int j = 0; j < sizes[1]; ++ j)  {\n\t\t\t\tcout << \"    \" << data[i];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t} \n\t}\n\tif(dimensions == 3) {\n\t\tcout << \"Tensor of \" << sizes[0] << \"x\" << sizes[1] << \"x\" << sizes[2] << endl;\n\t\tfor (int i = 0; i < sizes[0]; ++ i) {\n\t\t\tprintf(\"data[%d]\\n\", i);\n\t\t\tfor (int j = 0; j < sizes[1]; ++ j) {\n\t\t\t\tfor (int l = 0; l < sizes[2]; ++ l) {\n\t\t\t\t\tcout << \"    \" << data[i];\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\tif(dimensions == 4) {\n\t\tcout << \"Tensor of \" << sizes[0] << \"x\" << sizes[1] << \"x\" << sizes[2] << \"x\" << sizes[3] <<endl;\n\t\tfor (int i = 0; i < sizes[0]; ++ i) {\n\t\t\tfor (int j = 0; j < sizes[1]; ++ j) {\n\t\t\t\tprintf(\"data[%d][%d]\\n\", i, j);\n\t\t\t\tfor (int k = 0; k < sizes[2]; ++ k) {\n\t\t\t\t\tfor (int l = 0; l < sizes[3]; ++ l) {\n\t\t\t\t\t\tcout << \"    \" << data[i];\n\t\t\t\t\t}\n\t\t\t\t\tcout << endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}",
            1589425654.5274658,
            100,
            "# 答案正确"
        ],
        [
            "2.2 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\nprivate:\n\tint rows;\n\tint columns;\n\tdouble ** _values;\npublic:\n\tMatrix(int rows, int columns, double values[]) {\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\t//if(values != values) delete values;\n\t\t_values = new double * [rows];\n\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\t_values[i] = new double [columns];\n\t\t\tfor (int j = 0; j < columns; ++ j) \n\t\t\t\t_values[i][j] = values[i + j];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete [] this->_values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\tcout << \"    \" << _values[i][j];\n\t\t\t\t++j;\n\t\t\t\tif(j == columns) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tcout << endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};",
            1589459560.770273,
            0,
            "\n=================================================================\n==12377==ERROR: LeakSanitizer: detected memory leaks\n\nDirect leak of 216 byte(s) in 9 object(s) allocated from:\n    #0 0x7efeba9de6b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2)\n    #1 0x556d50d3d5c6 in Matrix::Matrix(int, int, double*) /home/湯仙兒/source.cpp:16\n    #2 0x556d50d3d5c6 in main /home/湯仙兒/main.cpp:11\n    #3 0x7efeba00382f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\nSUMMARY: AddressSanitizer: 216 byte(s) leaked in 9 allocation(s).\n"
        ],
        [
            "2.3 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\nprivate:\n\tint rows;\n\tint columns;\n\tdouble ** _values;\npublic:\n\tMatrix(int rows, int columns, double values[]) {\n\t\tthis->rows = rows;\n\t\tthis->columns = columns;\n\t\t//if(values != values) delete values;\n\t\t_values = new double * [rows];\n\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\t_values[i] = new double [columns];\n\t\t\tfor (int j = 0; j < columns; ++ j) \n\t\t\t\t_values[i][j] = values[i + j];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tdelete [] this->_values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows; ++ i) {\n\t\t\tfor (int j = 0; j < columns; ++ j) {\n\t\t\t\tcout << \"    \" << _values[i][j];\n\t\t\t\t++j;\n\t\t\t\tif(j == columns) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tcout << endl;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};",
            1589459611.825026,
            0,
            "=================================================================\n==12408==ERROR: AddressSanitizer: attempting double-free on 0x60300000efe0 in thread T0:\n    #0 0x7ff41b098caa in operator delete[](void*) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99caa)\n    #1 0x5620f2faf87e in Matrix::~Matrix() /home/湯仙兒/source.cpp:22\n    #2 0x5620f2faf87e in main /home/湯仙兒/main.cpp:11\n    #3 0x7ff41a6bd82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #4 0x5620f2faf2e8 in _start (/home/湯仙兒/main.out+0x12e8)\n\n0x60300000efe0 is located 0 bytes inside of 24-byte region [0x60300000efe0,0x60300000eff8)\nfreed by thread T0 here:\n    #0 0x7ff41b098caa in operator delete[](void*) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99caa)\n    #1 0x5620f2faf876 in Matrix::~Matrix() /home/湯仙兒/source.cpp:22\n    #2 0x5620f2faf876 in main /home/湯仙兒/main.cpp:12\n    #3 0x7ff41a6bd82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\npreviously allocated by thread T0 here:\n    #0 0x7ff41b0986b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2)\n    #1 0x5620f2faf563 in Matrix::Matrix(int, int, double*) /home/湯仙兒/source.cpp:14\n    #2 0x5620f2faf563 in main /home/湯仙兒/main.cpp:11\n    #3 0x7ff41a6bd82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\nSUMMARY: AddressSanitizer: double-free ??:0 operator delete[](void*)\n==12408==ABORTING\n"
        ],
        [
            "2.5 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int rows, int columns, double values[]) {\n\t\tfor (int i = 0; i < columns * rows; ++ i) {\n\t\t\tvalues[i] = 0;\n\t\t}\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < columns * rows; ++ i) {\n\t\t\tcout << \"     \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n};",
            1589457839.5182147,
            0,
            "main.cpp: In function ‘int main()’:\nmain.cpp:18:10: error: ‘class Matrix’ has no member named ‘getRow’\n  matrix1.getRow(row).print();\n          ^\nmain.cpp:20:10: error: ‘class Matrix’ has no member named ‘getColumn’\n  matrix1.getColumn(column).print();\n          ^\n"
        ],
        [
            "2.6 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix {\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int rows, int columns, double values[]) {\n\t\tfor (int i = 0; i < columns * rows; ++ i) {\n\t\t\tvalues[i] = 0;\n\t\t}\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < columns * rows; ++ i) {\n\t\t\tcout << \"     \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n};",
            1589457851.4919095,
            0,
            "main.cpp: In function ‘int main()’:\nmain.cpp:19:10: error: ‘class Matrix’ has no member named ‘concatenateRows’\n  matrix1.concatenateRows(matrix2).print();\n          ^\nmain.cpp:21:10: error: ‘class Matrix’ has no member named ‘concatenateColumns’\n  matrix1.concatenateColumns(matrix2).print();\n          ^\n"
        ],
        [
            "2.9 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\t Matrix(int r, int c, double v[]) {\n\t\t \n\t\t//this->rows = 0;\n\t\t//this->columns = 0;\n\t\t if(this->values != NULL)\n\t\t delete [] this->values;\n\t\t this->values = new double[r * c];\n\t\t for (int i = 0; i < r * c; ++ i) {\n\t\t\t this->values[i] = v[i];\n\t\t }\n\t }\n\t~Matrix() {\n\t\tthis->rows = 0;\n\t\tthis->columns = 0;\n\t\tdelete [] this->values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\tfriend Matrix operator + (const Matrix & matrix1, const Matrix & matrix2) {\n\t\tMatrix matrix3 = matrix1;\n\t\tfor (int i = 0; i < matrix1.rows * matrix1.columns; ++ i) {\n\t\t\tmatrix3.values[i] = matrix1.values[i] + matrix2.values[i];\n\t\t}\n\t\treturn matrix3;\n\t}\n\tfriend Matrix operator - (const Matrix & matrix1, const Matrix & matrix2) {\n\t\tMatrix matrix3 = matrix1;\n\t\tfor (int i = 0; i < matrix1.rows * matrix1.columns; ++ i) {\n\t\t\tmatrix3.values[i] = matrix1.values[i] - matrix2.values[i];\n\t\t}\n\t\treturn matrix3;\n\t}\n\tfriend Matrix operator + (const Matrix & matrix1, const double values) {\n\t\tMatrix matrix2 = matrix1;\n\t\tfor (int i = 0; i < matrix1.rows * matrix1.columns; ++ i) {\n\t\t\tmatrix2.values[i] = matrix1.values[i] + values;\n\t\t}\n\t\treturn matrix2;\n\t}\n\tfriend Matrix operator - (const Matrix & matrix1, const double values) {\n\t\tMatrix matrix2 = matrix1;\n\t\tfor (int i = 0; i < matrix1.rows * matrix1.columns; ++ i) {\n\t\t\tmatrix2.values[i] = matrix1.values[i] - values;\n\t\t}\n\t\treturn matrix2;\n\t}\n};",
            1590031430.3831694,
            0,
            "=================================================================\n==12670==ERROR: AddressSanitizer: attempting double-free on 0x611000009f00 in thread T0:\n    #0 0x7fd882cb3caa in operator delete[](void*) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99caa)\n    #1 0x560852615ccd in Matrix::~Matrix() /home/湯仙兒/source.cpp:24\n    #2 0x560852615ccd in main /home/湯仙兒/main.cpp:35\n    #3 0x7fd8822d882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #4 0x560852615418 in _start (/home/湯仙兒/main.out+0x1418)\n\n0x611000009f00 is located 0 bytes inside of 240-byte region [0x611000009f00,0x611000009ff0)\nfreed by thread T0 here:\n    #0 0x7fd882cb3caa in operator delete[](void*) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x99caa)\n    #1 0x560852615cac in Matrix::~Matrix() /home/湯仙兒/source.cpp:24\n    #2 0x560852615cac in main /home/湯仙兒/main.cpp:39\n    #3 0x7fd8822d882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\npreviously allocated by thread T0 here:\n    #0 0x7fd882cb36b2 in operator new[](unsigned long) (/usr/lib/x86_64-linux-gnu/libasan.so.2+0x996b2)\n    #1 0x5608526156c2 in Matrix::Matrix(int, int, double*) /home/湯仙兒/source.cpp:16\n    #2 0x5608526156c2 in read() /home/湯仙兒/main.cpp:11\n    #3 0x5608526158fb in main /home/湯仙兒/main.cpp:16\n    #4 0x7fd8822d882f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n\nSUMMARY: AddressSanitizer: double-free ??:0 operator delete[](void*)\n==12670==ABORTING\n"
        ],
        [
            "2.4 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\t//this->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = 0;\n\t\t}\n\t}\n\tMatrix(int r, int c, double v[]) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = v[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tif(values != 0)\n\t\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\tvoid set(int r, int c, double v) {\n\t\tthis->values[r * c - 1] = v;\n\t}\n\tMatrix & operator = (const Matrix & m1) {\n\t\tthis->rows = m1.rows;\n\t\tthis->columns = m1.columns;\n\t\tthis->values = new double[m1.rows * m1.columns];\n\t\tfor (int i = 0; i < m1.rows * m1.columns; ++ i) {\n\t\t\tthis->values[i] = m1.values[i];\n\t\t}\n\t\treturn *this;\n\t}\n};",
            1590062116.3590648,
            100,
            "# 答案正确"
        ],
        [
            "2.7 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = 0;\n\t\t}\n\t}\n\tMatrix(int r, int c, double v[]) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = v[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tif(this->values != 0)\n\t\t\tdelete [] this->values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\t Matrix reshape(int r, int c) const{\n\t\t Matrix m1(r , c);\n\t\t for (int i = 0; i < r * c; ++ i) {\n\t\t\t m1.values[i] = \n\t\t }\n};",
            1590055168.1036704,
            0,
            "main.cpp:25:1: error: expected ‘}’ at end of input\n }\n ^\nIn file included from main.cpp:1:0:\nsource.cpp: In member function ‘Matrix Matrix::reshape(int, int) const’:\nsource.cpp:45:4: error: expected primary-expression before ‘}’ token\n    }\n    ^\nmain.cpp: At global scope:\nmain.cpp:25:1: error: expected unqualified-id at end of input\n }\n ^\n"
        ],
        [
            "2.8 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\t//this->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = 0;\n\t\t}\n\t}\n\tMatrix(int r, int c, double v[]) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = v[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tif(values != 0)\n\t\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\t Matrix transpose() {\n\t\t Matrix m(columns, rows);\n\t\tfor (int i = 0; i < columns * rows; ++ i) {\n};",
            1590063462.008642,
            0,
            "main.cpp:21:1: error: expected ‘}’ at end of input\n }\n ^\nmain.cpp: In member function ‘Matrix Matrix::transpose()’:\nmain.cpp:3:15: error: a function-definition is not allowed here before ‘{’ token\n Matrix read() {\n               ^\nmain.cpp:21:1: error: expected ‘}’ at end of input\n }\n ^\nmain.cpp: At global scope:\nmain.cpp:21:1: error: expected unqualified-id at end of input\n"
        ],
        [
            "2.10 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\t//this->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = 0;\n\t\t}\n\t}\n\tMatrix(int r, int c, double v[]) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = v[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tif(values != 0)\n\t\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\tMatrix operator * (const Matrix & matrix2) const{\n\t\tMatrix m(rows, columns);\n\t\tfor (int i = 0; i < rows; i++) {\n\t\t\tfor (int j = 0; j < matrix2.columns; j++) {\n\t\t\t\tfor (int k = 0; k < columns; k++) {\n\t\t\t\t\tm.values[i * matrix2.columns + j] += values[i * columns + k] * matrix2.values[k * matrix2.columns + j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn m;\n\t}\n\tMatrix operator * (double value) const{\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tvalues[i] = values[i] * value;\n\t\t}\n\t}\n};",
            1590065861.4518292,
            0,
            "ASAN:SIGSEGV\n=================================================================\n==23990==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x559335f6dab5 bp 0x7ffed3278660 sp 0x7ffed32784d0 T0)\n    #0 0x559335f6dab4 in Matrix::Matrix(int, int) /home/湯仙兒/source.cpp:15\n    #1 0x559335f6dab4 in Matrix::operator*(Matrix const&) const /home/湯仙兒/source.cpp:42\n    #2 0x559335f6dab4 in main /home/湯仙兒/main.cpp:27\n    #3 0x7fbf95b6282f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #4 0x559335f6d468 in _start (/home/湯仙兒/main.out+0x1468)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /home/湯仙兒/source.cpp:15 Matrix::Matrix(int, int)\n==23990==ABORTING\n"
        ],
        [
            "2.11 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\t//this->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = 0;\n\t\t}\n\t}\n\tMatrix(int r, int c, double v[]) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = v[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tif(values != 0)\n\t\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n};",
            1590065000.3205373,
            0,
            "main.cpp: In function ‘int main()’:\nmain.cpp:20:10: error: ‘class Matrix’ has no member named ‘max’\n  matrix1.max().print();\n          ^\nmain.cpp:22:10: error: ‘class Matrix’ has no member named ‘max’\n  matrix1.max().max().print();\n          ^\nmain.cpp:25:10: error: ‘class Matrix’ has no member named ‘min’\n  matrix1.min().print();\n          ^\nmain.cpp:27:10: error: ‘class Matrix’ has no member named ‘min’\n  matrix1.min().min().print();\n          ^\nmain.cpp:30:10: error: ‘class Matrix’ has no member named ‘sum’\n  matrix1.sum().print();\n          ^\nmain.cpp:32:10: error: ‘class Matrix’ has no member named ‘sum’\n  matrix1.sum().sum().print();\n          ^\n"
        ],
        [
            "2.12 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tdouble * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\t//this->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = 0;\n\t\t}\n\t}\n\tMatrix(int r, int c, double v[]) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new double[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = v[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tif(values != 0)\n\t\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n};",
            1590065018.4868295,
            0,
            "main.cpp: In function ‘int main()’:\nmain.cpp:23:9: error: ‘class Matrix’ has no member named ‘pow’\n  matrix.pow(exponent).print();\n         ^\nmain.cpp:25:9: error: ‘class Matrix’ has no member named ‘exp’\n  matrix.exp().print();\n         ^\nmain.cpp:27:9: error: ‘class Matrix’ has no member named ‘log’\n  matrix.log().print();\n         ^\nmain.cpp:29:9: error: ‘class Matrix’ has no member named ‘abs’\n  matrix.abs().print();\n         ^\n"
        ],
        [
            "6.2 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\ntemplate <typename T>\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tT * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new T[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = 0;\n\t\t}\n\t}\n\t~Matrix() {\n\t\tif(values != 0)\n\t\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n};",
            1590633182.442788,
            100,
            "# 答案正确"
        ],
        [
            "6.1 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\ntemplate <typename T>\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tT * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new T[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = T();\n\t\t}\n\t}\n\tMatrix(int r, int c, const T v[]) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\t//this->values = new T[r * c];\n\t\t//T * values = (T *) v;\n\t\t/*for (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = v[i];\n\t\t}*/\n\t\tmemset(values, v, r * c * sizeof(T));\n\t}\n\t~Matrix() {\n\t\tif(values != 0)\n\t\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\tT & get(int r, int c) {\n\t\treturn values[r * c - 1];\n\t}\n\tMatrix & operator = (const Matrix<T> & m1) {\n\t\tthis->rows = m1.rows;\n\t\tthis->columns = m1.columns;\n\t\tfor (int i = 0; i < m1.rows * m1.columns; ++ i) {\n\t\t\tthis->values[i] = m1.values[i];\n\t\t}\n\t\treturn *this;\n\t}\n};",
            1590670705.2287407,
            0,
            "In file included from main.cpp:5:0:\nsource.cpp: In instantiation of ‘Matrix<T>::Matrix(int, int, const T*) [with T = double]’:\nmain.cpp:18:38:   required from here\nsource.cpp:27:9: error: ‘memset’ was not declared in this scope\n   memset(values, v, r * c * sizeof(T));\n         ^\nsource.cpp: In instantiation of ‘Matrix<T>::Matrix(int, int, const T*) [with T = std::__cxx11::basic_string<char>]’:\nmain.cpp:45:38:   required from here\nsource.cpp:27:9: error: ‘memset’ was not declared in this scope\n"
        ],
        [
            "6.3 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\ntemplate <typename T>\nclass Matrix{\nprivate:\n\tint rows;\n\tint columns;\n\tT * values;\npublic:\n\tMatrix(int r, int c) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\tthis->values = new T[r * c];\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = T();\n\t\t}\n\t}\n\tMatrix(int r, int c, const T v[]) {\n\t\tthis->rows = r;\n\t\tthis->columns = c;\n\t\t//this->values = new T[r * c];\n\t\t//T * values = (T *) v;\n\t\tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tthis->values[i] = v[i];\n\t\t}\n\t}\n\t~Matrix() {\n\t\tif(values != 0)\n\t\t\tdelete [] values;\n\t}\n\tvoid print() {\n\t\tint j = 0;\n\t\tfor (int i = 0; i < rows * columns; ++ i) {\n\t\t\tcout << \"    \" << values[i];\n\t\t\t++j;\n\t\t\tif(j == columns) {\n\t\t\t\tj = 0;\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t}\n\tT & get(int r, int c) {\n\t\treturn values[r * c - 1];\n\t}\n\tMatrix & operator = (const Matrix<T> & m1) {\n\t\tthis->rows = m1.rows;\n\t\tthis->columns = m1.columns;\n\t\tfor (int i = 0; i < m1.rows * m1.columns; ++ i) {\n\t\t\tthis->values[i] = m1.values[i];\n\t\t}\n\t\treturn *this;\n\t}\n};",
            1590670154.9418914,
            0,
            "main.cpp: In function ‘int main()’:\nmain.cpp:13:2: error: ‘vector’ was not declared in this scope\n  vector<double> values2;\n  ^\nmain.cpp:13:9: error: expected primary-expression before ‘double’\n  vector<double> values2;\n         ^\nmain.cpp:15:3: error: ‘values2’ was not declared in this scope\n   values2.push_back(values1[i]);\n   ^\nmain.cpp:19:31: error: ‘values2’ was not declared in this scope\n  Matrix<double> matrix2(3, 3, values2);\n                               ^\nmain.cpp:32:10: error: ‘class Matrix<double>’ has no member named ‘getColumn’\n  matrix2.getColumn(2).print();\n          ^\nmain.cpp:34:10: error: ‘class Matrix<double>’ has no member named ‘getRow’\n  matrix2.getRow(2).print();\n          ^\nmain.cpp:37:10: error: ‘class Matrix<double>’ has no member named ‘concatenateRows’\n  matrix1.concatenateRows(matrix2).print();\n          ^\nmain.cpp:39:10: error: ‘class Matrix<double>’ has no member named ‘concatenateColumns’\n  matrix1.concatenateColumns(matrix2).print();\n          ^\nmain.cpp:42:10: error: ‘class Matrix<double>’ has no member named ‘concatenateColumns’\n  matrix1.concatenateColumns(matrix2).\n          ^\nmain.cpp:46:10: error: ‘class Matrix<double>’ has no member named ‘transpose’\n  matrix2.transpose().print();\n          ^\nmain.cpp:49:11: error: no match for ‘operator+’ (operand types are ‘Matrix<double>’ and ‘Matrix<double>’)\n  (matrix2 + matrix2).print();\n           ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘const std::move_iterator<_Iterator>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   mismatched types ‘const _CharT*’ and ‘Matrix<double>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   mismatched types ‘const _CharT*’ and ‘Matrix<double>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:49:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + matrix2).print();\n             ^\nmain.cpp:51:11: error: no match for ‘operator+’ (operand types are ‘Matrix<double>’ and ‘int’)\n  (matrix2 + 10).print();\n           ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   mismatched types ‘const std::reverse_iterator<_Iterator>’ and ‘int’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   mismatched types ‘const std::move_iterator<_Iterator>’ and ‘int’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   mismatched types ‘const _CharT*’ and ‘Matrix<double>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   mismatched types ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   ‘Matrix<double>’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   mismatched types ‘const _CharT*’ and ‘Matrix<double>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   mismatched types ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + 10).print();\n             ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:51:13: note:   ‘Matrix<double>’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n  (matrix2 + 10).print();\n             ^\nmain.cpp:53:11: error: ‘class Matrix<double>’ has no member named ‘transpose’\n  (matrix2.transpose() - matrix2).print();\n           ^\nmain.cpp:55:11: error: no match for ‘operator-’ (operand types are ‘Matrix<double>’ and ‘int’)\n  (matrix2 - 10).print();\n           ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:328:5: note: candidate: template<class _Iterator> typename std::reverse_iterator<_Iterator>::difference_type std::operator-(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_Iterator>&)\n     operator-(const reverse_iterator<_Iterator>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:328:5: note:   template argument deduction/substitution failed:\nmain.cpp:55:13: note:   ‘Matrix<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  (matrix2 - 10).print();\n             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:380:5: note: candidate: template<class _IteratorL, class _IteratorR> decltype ((__y.base() - __x.base())) std::operator-(const std::reverse_iterator<_Iterator>&, const std::reverse_iterator<_IteratorR>&)\n     operator-(const reverse_iterator<_IteratorL>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:380:5: note:   template argument deduction/substitution failed:\nmain.cpp:55:13: note:   ‘Matrix<double>’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n  (matrix2 - 10).print();\n             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1138:5: note: candidate: template<class _IteratorL, class _IteratorR> decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_Iterator>&, const std::move_iterator<_IteratorR>&)\n     operator-(const move_iterator<_IteratorL>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1138:5: note:   template argument deduction/substitution failed:\nmain.cpp:55:13: note:   ‘Matrix<double>’ is not derived from ‘const std::move_iterator<_Iterator>’\n  (matrix2 - 10).print();\n             ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1145:5: note: candidate: template<class _Iterator> decltype ((__x.base() - __y.base())) std::operator-(const std::move_iterator<_Iterator>&, const std::move_iterator<_Iterator>&)\n     operator-(const move_iterator<_Iterator>& __x,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1145:5: note:   template argument deduction/substitution failed:\nmain.cpp:55:13: note:   ‘Matrix<double>’ is not derived from ‘const std::move_iterator<_Iterator>’\n  (matrix2 - 10).print();\n             ^\nmain.cpp:58:11: error: ‘class Matrix<double>’ has no member named ‘transpose’\n  (matrix2.transpose() * matrix2).print();\n           ^\nmain.cpp:60:11: error: no match for ‘operator*’ (operand types are ‘Matrix<double>’ and ‘int’)\n  (matrix2 * 2).print();\n           ^\nmain.cpp:63:18: error: ‘class Matrix<double>’ has no member named ‘max’\n  cout << matrix2.max().max().get(1, 1) << endl;\n                  ^\nmain.cpp:65:18: error: ‘class Matrix<double>’ has no member named ‘min’\n  cout << matrix2.min().min().get(1, 1) << endl;\n                  ^\nmain.cpp:67:18: error: ‘class Matrix<double>’ has no member named ‘sum’\n  cout << matrix2.sum().sum().get(1, 1) << endl;  \n                  ^\n"
        ],
        [
            "7.2 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nvector<string> split(const string & line, const string & delimiter=\" \") {\n\tvector<string> words;\n\tint st = 0;\n\twhile(st < line.size()) {\n\t\tint end = line.find(delimiter, st);\n\t\tif(end == st) st += delimiter.size();\n\t\telse {\n\t\t\tif(end == -1) {\n\t\t\t\twords.push_back(line.substr(st));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twords.push_back(line.substr(st, end-st));\n\t\t\tst = end + delimiter.size();\n\t\t}\n\t}\n\treturn words;\n}",
            1591238846.582096,
            100,
            "# 答案正确"
        ],
        [
            "7.1 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <math.h>\nusing namespace std;\n\nclass Triangle : public GeometricObject\n{\nprivate:\n\tdouble size1 = 1;\n\tdouble size2 = 1;\n\tdouble size3 = 1;\npublic:\n\t//this->size1 = this->size2 = this->size3 = 1.0;\n\tTriangle(double & s1, double & s2, double & s3) {\n\t\tthis->size1 = s1;\n\t\tthis->size2 = s2;\n\t\tthis->size3 = s3;\n\t}\n\tdouble getSide1() {\n\t\treturn this->size1;\n\t}\n\tdouble getSide2() {\n\t\treturn this->size2;\n\t}\n\tdouble getSide3() {\n\t\treturn this->size3;\n\t}\n\tdouble getArea() {\n\t\tdouble s = (size1 + size2 + size3) / 2;\n\t\tdouble area = sqrt(s * (s - size1) * (s - size2) * (s - size3));\n\t\treturn area;\n\t}\n\tdouble getPerimeter() {\n\t\treturn size1 + size2 + size3;\n\t}\n};",
            1591270796.0514903,
            100,
            "# 答案正确"
        ],
        [
            "7.3 (C++)",
            "湯仙兒",
            "template <typename A, typename R>\nvector<R> map2(vector<A> x1, vector<A> x2, R(*map2_func)(const A &, const A &)) {\n\tvector<R> res;\n\tfor (int i = 0; i < x1.size(); ++ i) \n\t\tres.push_back(map2_func(x1[i], x2[i]));\n\treturn res;\n}\n\ntemplate <typename A, typename R>\nvector<R> map2(vector<A> x1, int x2, R(*map2_func)(const A &, const A &)) {\n\tvector<R> res;\n\tfor (int i = 0; i < x1.size(); ++ i) \n\t\tres.push_back(map2_func(x1[i], x2));\n\treturn res;\n}",
            1591271996.7541819,
            100,
            "# 答案正确"
        ],
        [
            "8.5 (C++)",
            "湯仙兒",
            "class Point3D: public Point2D\n{\nprivate:\n\tdouble x;\n\tdouble y;\n\tdouble z;\npublic:\n\tPoint3D() {\n\t\tx = 0;\n\t\ty = 0;\n\t\tz = 0;\n\t}\n\tPoint3D(double & x, double & y, double & z) {\n\t\tthis->x = x;\n\t\tthis->y = y;\n\t\tthis->z = z;\n\t}\n\tdouble getX() {\n\t\treturn x;\n\t}\n\tdouble getY() {\n\t\treturn y;\n\t}\n\tvoid setX(double x) {\n\t\tthis->x = x;\n\t}\n\tvoid setY(double y) {\n\t\tthis->y = y;\n\t}\n\tvoid setZ(double z) {\n\t\tthis->z = z;\n\t}\n\tdouble getZ() {\n\treturn z;\n\t}\n\tvirtual double distance(Point2D & point2) {\n\t\tPoint3D *p = dynamic_cast<Point3D *>(&point2);\n\t\tdouble dx = x - p->x;\n\t\tdouble dy = y - p->y;\n\t\tdouble dz = z - p->z;\n\t\treturn sqrt(dx * dx + dy * dy + dz * dz);\n\t}\n};",
            1591844628.4722826,
            100,
            "# 答案正确"
        ],
        [
            "8.1 (C++)",
            "湯仙兒",
            "class Full: public Matrix\n{\nprivate:\n\tdouble r;\n\tdouble c;\n\tdouble * v;\npublic:\n\tFull(int rows, int column) {\n\t\tthis->r = rows;\n\t\tthis->c = column;\n\t\tthis->v = new double[rows * column];\n\t\tfor (int i = 0; i < rows * column; ++ i) {\n\t\t\tthis->v[i] = 0;\n\t\t}\n\t}\n\tFull(int rows, int column, double values[]) {\n\t\tthis->r = rows;\n\t\tthis->c = column;\n\t\tthis->v = new double[rows * column];\n\t\tfor (int i = 0; i < rows * column; ++ i) {\n\t\t\tthis->v[i] = values[i];\n\t\t}\n\t}\n\t~Full() {\n\t\tif(v != 0) delete [] v;\n\t}\n\t Full(const Matrix & matrix2) {\n\t \tthis->r = matrix2.size(1);\n\t\tthis->c = matrix2.size(2);\n\t\tthis->v = new double[matrix2.size(1) * matrix2.size(2)];\n\t\tint k = 0;\n\t\tfor (int i = 0; i < matrix2.size(1); ++ i) {\n\t\t\tfor (int j = 0; j < matrix2.size(2); ++ j) {\n\t\t\t\tthis->v[k] = matrix2.get(i, j);\n\t\t\t\t++k;\n\t\t\t}\n\t\t}\n\t }\n\t int size(int dimension) const{\n\t \tif(dimension == 1) return this->r;\n\t\tif(dimension == 2) return this->c;\n\t }\n\t void set(int row, int column, double value) {\n\t \tthis->v[row * column - 1] = value;\n\t }\n\t double get(int row, int column) const{\n\t \treturn this->v[row * (int)c + column];\n\t }\n\t void print() const{\n\t \tint j = 0;\n\t \tfor (int i = 0; i < r * c; ++ i) {\n\t\t\tcout << \"    \" << v[i];\n\t\t\t++ j;\n\t\t\tif(j == c) {\n\t\t\t\tcout << endl;\n\t\t\t\tj = 0;\n\t\t\t}\n\t\t}\n\t }\n\t Matrix & operator = (const Matrix & matrix2) {\n\t \tthis->r = matrix2.size(1);\n\t\tthis->c = matrix2.size(2);\n\t\tint k = 0;\n\t\tfor (int i = 0; i < matrix2.size(1); ++ i) {\n\t\t\tfor (int j = 0; j < matrix2.size(2); ++ j) {\n\t\t\t\tthis->v[k] = matrix2.get(i, j);\n\t\t\t\t++k;\n\t\t\t}\n\t\t}\n\t\treturn *this;\n\t }\n};",
            1591867759.3341618,
            100,
            "# 答案正确"
        ],
        [
            "8.3 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nbool Comp1(const Entry &a,const Entry &b) {\n\treturn a.row<b.row;\n}\nbool Comp2(const Entry &a,const Entry &b) {\n\treturn (a.row==b.row&&a.column<b.column);\n}\nclass Sparse : public Matrix\n{\nprivate:\n\tint _rows, _columns;\n\tvector<Entry> entry;\npublic:\n\tSparse(int rows, int column)\n\t{\n\t\t_rows = rows;\n\t\t_columns = column;\n\t\tentry = vector<Entry>();\n\t}\n\tint size(int dimension) const\n\t{\n\t\tif(dimension == 1) return _rows;\n\t\tif(dimension == 2) return _columns;\n\t}\n\tvoid set(int row, int column, double value)\n\t{\n\t\tEntry e;\n\t\te.row = row;\n\t\te.column = column;\n\t\te.value = value;\n\t\tentry.push_back(e);\n\t}\n\tdouble get(int row, int column) const\n\t{\n\t\tfor(int i=0; i < entry.size();i++)\n\t\t{\n\t\t\tif(entry[i].row == row\n\t\t\t\t && entry[i].column == column ){\n\t\t\t\treturn entry[i].value;\t\n\t\t\t}\n\t\t}\n\t}\n\tvoid print()\n\t{\n\t\tfor(int i=0; i < entry.size();i++)\n\t\t{\n\t\t\tcout<<\"(\"<<entry[i].row<<\",\"<<entry[i].column<<\",\"<<entry[i].value<<\")\\n\";\n\t\t}\n\t}\n\tSparse operator + (Sparse & sparse2) {\n\t\tSparse s(_rows, _columns);\n\n\t\tfor(int i=0; i < this->entry.size(); i++)\n\t\t{\n\t\t\tfor(int j = 0 ;j< sparse2.entry.size(); j++)\n\t\t\t{\n\t\t\t\tif(this->entry[i].row == sparse2.entry[j].row \n\t\t\t\t\t&& this->entry[i].column == sparse2.entry[j].column){\n\t\t\t\t\tEntry e;\n\t\t\t\t\te.row = sparse2.entry[j].row;\n\t\t\t\t\te.column =  sparse2.entry[j].column;\n\t\t\t\t\te.value = this->entry[i].value + sparse2.entry[j].value;\n\t\t\t\t\t\n\t\t\t\t\tif(e.value)\n\t\t\t\t\ts.entry.push_back(e);\n\t\t\t\t\t\n\t\t\t\t\tthis->entry[i].value = 0;\n\t\t\t\t\tsparse2.entry[j].value = 0;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tfor(int i=0; i < this->entry.size(); i++)\n\t\t{\n\t\t\tEntry e;\n\t\t\te.row = this->entry[i].row;\n\t\t\te.column = this->entry[i].column;\n\t\t\te.value = this->entry[i].value;\n\t\t\tif(e.value)\n\t\t\t\ts.entry.push_back(e);\n\t\t}\n\t\tfor(int i=0; i < sparse2.entry.size(); i++)\n\t\t{\n\t\t\tEntry e;\n\t\t\te.row = sparse2.entry[i].row;\n\t\t\te.column = sparse2.entry[i].column;\n\t\t\te.value = sparse2.entry[i].value;\n\t\t\tif(e.value)\n\t\t\t\ts.entry.push_back(e);\n\t\t}\n\t\tsort(s.entry.begin(),s.entry.end(),Comp1);\n\t\tsort(s.entry.begin(),s.entry.end(),Comp2);\n\t\t\n\t\treturn s;\n\t}\n};",
            1591866025.4878283,
            100,
            "# 答案正确"
        ],
        [
            "8.4 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nbool Comp1(const Entry &a,const Entry &b) {\n\treturn a.row<b.row;\n}\nbool Comp2(const Entry &a,const Entry &b) {\n\treturn (a.row==b.row&&a.column<b.column);\n}\nclass Sparse : public Matrix\n{\nprivate:\n\tint _rows, _columns;\n\tvector<Entry> entry;\npublic:\n\tSparse(int rows, int column) {\n\t\t_rows = rows;\n\t\t_columns = column;\n\t\tentry = vector<Entry>();\n\t}\n\tint size(int dimension) const {\n\t\tif(dimension == 1) return _rows;\n\t\tif(dimension == 2) return _columns;\n\t}\n\tvoid set(int row, int column, double value) {\n\t\tEntry e;\n\t\te.row = row;\n\t\te.column = column;\n\t\te.value = value;\n\t\tentry.push_back(e);\n\t}\n\tdouble get(int row, int column) const {\n\t\tfor(int i=0; i < entry.size();i++)\n\t\t{\n\t\t\tif(entry[i].row == row\n\t\t\t\t && entry[i].column == column ){\n\t\t\t\treturn entry[i].value;\t\n\t\t\t}\n\t\t}\n\t}\n\tvoid print() {\n\t\tfor(int i=0; i < entry.size();i++) {\n\t\t\tcout<<\"(\"<<entry[i].row<<\",\"<<entry[i].column<<\",\"<<entry[i].value<<\")\\n\";\n\t\t}\n\t}\n\tSparse operator * (Sparse & sparse2) {\n\t\tSparse s(_rows, sparse2._columns);\n\n\t\tfor(int i=0; i < this->entry.size(); i++) {\n\t\t\tfor(int j = 0 ;j< sparse2.entry.size(); j++) {\n\t\t\t\tif(this->entry[i].column == sparse2.entry[j].row ){\n\t\t\t\t   \n\t\t\t\t   Entry e;\n\t\t\t\t\te.row =this->entry[i].row;\n\t\t\t\t\te.column =  sparse2.entry[j].column;\n\t\t\t\t\te.value = this->entry[i].value * sparse2.entry[j].value;\n\t\t\t\t\tint isIns = 0;\n\t\t\t\t\tint index = -1;\n\t\t\t\t\tfor(int k = 0 ; k < s.entry.size();k++){\n\t\t\t\t\t\tif(s.entry[k].row == e.row && s.entry[k].column == e.column){\n\t\t\t\t\t\t\tisIns = 1;\n\t\t\t\t\t\t\tindex = k;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(e.value && isIns == 0)\n\t\t\t\t\ts.entry.push_back(e);\n\t\t\t\t\tif(e.value && isIns == 1){\n\t\t\t\t\t\ts.entry[index].value += e.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tsort(s.entry.begin(),s.entry.end(),Comp1);\n\t\tsort(s.entry.begin(),s.entry.end(),Comp2);\n\t\t\n\t\treturn s;\n\t}\n};",
            1591866612.382263,
            100,
            "# 答案正确"
        ],
        [
            "8.6 (C++)",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass MyTensor:public Tensor<double> \n{\nprivate:\n\tdouble * array;\npublic:\n\tMyTensor(vector<int> &) {\n\t\tthis->array = new double[vector<int> &];\n\t\tfor (int i = 0; i < vector<int>; ++ i) {\n\t\t\tthis->array = 0;\n\t\t}\n\t}\n\t~MyTensor() {\n\t\tdelete [] array;\n\t}\n\tdouble & get(const vector<double> & indexes) {\n\t\treturn array[indexes];\n\t}\n\tint sizes(int s) {\n\t\treturn 3;\n\t}\n}",
            1592451408.760027,
            0,
            "In file included from main.cpp:14:0:\nsource.cpp: In constructor ‘MyTensor::MyTensor(std::vector<int>&)’:\nsource.cpp:9:26: error: no matching function for call to ‘Tensor<double>::Tensor()’\n  MyTensor(vector<int> &) {\n                          ^\nmain.cpp:10:2: note: candidate: Tensor<E>::Tensor(std::vector<int>) [with E = double]\n  Tensor(vector<int> sizes) : sizes(sizes) {}\n  ^\nmain.cpp:10:2: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor<double>::Tensor(const Tensor<double>&)\n class Tensor\n       ^\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor<double>::Tensor(Tensor<double>&&)\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nIn file included from main.cpp:14:0:\nsource.cpp:10:40: error: expected primary-expression before ‘&’ token\n   this->array = new double[vector<int> &];\n                                        ^\nsource.cpp:10:41: error: expected primary-expression before ‘]’ token\n   this->array = new double[vector<int> &];\n                                         ^\nsource.cpp:11:34: error: expected primary-expression before ‘;’ token\n   for (int i = 0; i < vector<int>; ++ i) {\n                                  ^\nsource.cpp: In member function ‘double& MyTensor::get(const std::vector<double>&)’:\nsource.cpp:19:15: error: no match for ‘operator[]’ (operand types are ‘double*’ and ‘const std::vector<double>’)\n   return array[indexes];\n               ^\nmain.cpp: At global scope:\nmain.cpp:16:13: error: invalid declarator before ‘I’\n vector<int> I(int i1, int i2=-1, int i3=-1, int i4=-1)\n             ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:27:22: error: ‘I’ was not declared in this scope\n  MyTensor mt1(I(3,4,5));\n                      ^\nmain.cpp:27:11: error: cannot declare variable ‘mt1’ to be of abstract type ‘MyTensor’\n  MyTensor mt1(I(3,4,5));\n           ^\nIn file included from main.cpp:14:0:\nsource.cpp:4:7: note:   because the following virtual functions are pure within ‘MyTensor’:\n class MyTensor:public Tensor<double> \n       ^\nmain.cpp:11:14: note: \tE& Tensor<E>::get(const std::vector<int>&) [with E = double]\n  virtual E & get(const vector<int> & indexes) = 0;\n              ^\nmain.cpp:32:11: error: cannot declare variable ‘mt2’ to be of abstract type ‘MyTensor’\n  MyTensor mt2(I(2,3,4,5));\n           ^\n"
        ],
        [
            "9.1 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <cmath>\nusing namespace std;\n\nclass Circle \n{\nprivate: \n\tint radius;\npublic:\n\tCircle() {\n\n        radius = 1;\n    }\n\n    Circle(int v) {\n        radius = sqrt(v / (M_PI));\n    }\n\n    int getRadius() {\n        return radius;\n    }\n\n    double getArea() {\n        return M_PI * radius * radius;\n    }\n\n    double getPerimeter() {\n        return 2 * M_PI * radius;\n    }\n\tconst bool operator < (Circle & c1) {\n\t\treturn this->radius < c1.radius;\n\t}\n\tconst bool operator <= (Circle & c1) {\n\t\treturn this->radius <= c1.radius;\n\t}\n\tconst bool operator == (Circle & c1) {\n\t\treturn this->radius == c1.radius;\n\t}\n\tconst bool operator != (Circle & c1) {\n\t\treturn this->radius != c1.radius;\n\t}\n\tconst bool operator > (Circle & c1) {\n\t\treturn this->radius > c1.radius;\n\t}\n\tconst bool operator >= (Circle & c1) {\n\t\treturn this->radius >= c1.radius;\n\t}\n};",
            1593074028.9682531,
            100,
            "# 答案正确"
        ],
        [
            "9.2 (C++)",
            "湯仙兒",
            "class I: public Tensor\n{\n\tvector<int> index;\npublic:\n\tI(int size0, int size1 = -1, int size2 = -1, int size3 = -1) {\n\t\tindex = size0;\n\t\tif(size1 != -1) index = size1;\n\t\tif(size2 != -1) index = size2;\n\t\tif(size3 != -1) index = size3;\n\t}\n};",
            1593075999.750211,
            0,
            "In file included from main.cpp:38:0:\nsource.cpp: In constructor ‘I::I(int, int, int, int)’:\nsource.cpp:5:63: error: no matching function for call to ‘Tensor::Tensor()’\n  I(int size0, int size1 = -1, int size2 = -1, int size3 = -1) {\n                                                               ^\nmain.cpp:27:2: note: candidate: Tensor::Tensor(std::vector<int>)\n  Tensor(vector<int> sizes) {\n  ^\nmain.cpp:27:2: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor::Tensor(const Tensor&)\n class Tensor\n       ^\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor::Tensor(Tensor&&)\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nIn file included from main.cpp:38:0:\nsource.cpp:6:9: error: no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)\n   index = size0;\n         ^\nIn file included from /usr/include/c++/5/vector:69:0,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/vector.tcc:167:5: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/5/bits/vector.tcc:167:5: note:   no known conversion for argument 1 from ‘int’ to ‘const std::vector<int>&’\nIn file included from /usr/include/c++/5/vector:64:0,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_vector.h:448:7: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp, _Alloc>&&) [with _Tp = int; _Alloc = std::allocator<int>]\n       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n       ^\n/usr/include/c++/5/bits/stl_vector.h:448:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::vector<int>&&’\n/usr/include/c++/5/bits/stl_vector.h:470:7: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = int; _Alloc = std::allocator<int>]\n       operator=(initializer_list<value_type> __l)\n       ^\n/usr/include/c++/5/bits/stl_vector.h:470:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::initializer_list<int>’\nIn file included from main.cpp:38:0:\nsource.cpp:7:25: error: no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)\n   if(size1 != -1) index = size1;\n                         ^\nIn file included from /usr/include/c++/5/vector:69:0,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/vector.tcc:167:5: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/5/bits/vector.tcc:167:5: note:   no known conversion for argument 1 from ‘int’ to ‘const std::vector<int>&’\nIn file included from /usr/include/c++/5/vector:64:0,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_vector.h:448:7: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp, _Alloc>&&) [with _Tp = int; _Alloc = std::allocator<int>]\n       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n       ^\n/usr/include/c++/5/bits/stl_vector.h:448:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::vector<int>&&’\n/usr/include/c++/5/bits/stl_vector.h:470:7: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = int; _Alloc = std::allocator<int>]\n       operator=(initializer_list<value_type> __l)\n       ^\n/usr/include/c++/5/bits/stl_vector.h:470:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::initializer_list<int>’\nIn file included from main.cpp:38:0:\nsource.cpp:8:25: error: no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)\n   if(size2 != -1) index = size2;\n                         ^\nIn file included from /usr/include/c++/5/vector:69:0,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/vector.tcc:167:5: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/5/bits/vector.tcc:167:5: note:   no known conversion for argument 1 from ‘int’ to ‘const std::vector<int>&’\nIn file included from /usr/include/c++/5/vector:64:0,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_vector.h:448:7: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp, _Alloc>&&) [with _Tp = int; _Alloc = std::allocator<int>]\n       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n       ^\n/usr/include/c++/5/bits/stl_vector.h:448:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::vector<int>&&’\n/usr/include/c++/5/bits/stl_vector.h:470:7: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = int; _Alloc = std::allocator<int>]\n       operator=(initializer_list<value_type> __l)\n       ^\n/usr/include/c++/5/bits/stl_vector.h:470:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::initializer_list<int>’\nIn file included from main.cpp:38:0:\nsource.cpp:9:25: error: no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)\n   if(size3 != -1) index = size3;\n                         ^\nIn file included from /usr/include/c++/5/vector:69:0,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/vector.tcc:167:5: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(const std::vector<_Tp, _Alloc>&) [with _Tp = int; _Alloc = std::allocator<int>]\n     vector<_Tp, _Alloc>::\n     ^\n/usr/include/c++/5/bits/vector.tcc:167:5: note:   no known conversion for argument 1 from ‘int’ to ‘const std::vector<int>&’\nIn file included from /usr/include/c++/5/vector:64:0,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_vector.h:448:7: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::vector<_Tp, _Alloc>&&) [with _Tp = int; _Alloc = std::allocator<int>]\n       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())\n       ^\n/usr/include/c++/5/bits/stl_vector.h:448:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::vector<int>&&’\n/usr/include/c++/5/bits/stl_vector.h:470:7: note: candidate: std::vector<_Tp, _Alloc>& std::vector<_Tp, _Alloc>::operator=(std::initializer_list<_Tp>) [with _Tp = int; _Alloc = std::allocator<int>]\n       operator=(initializer_list<value_type> __l)\n       ^\n/usr/include/c++/5/bits/stl_vector.h:470:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::initializer_list<int>’\nmain.cpp: In function ‘int main()’:\nmain.cpp:44:20: error: no matching function for call to ‘Tensor::get(I&)’\n  cin >> t.get(index);\n                    ^\nmain.cpp:33:11: note: candidate: double& Tensor::get(const std::vector<int>&)\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:33:11: note:   no known conversion for argument 1 from ‘I’ to ‘const std::vector<int>&’\nmain.cpp:45:21: error: no matching function for call to ‘Tensor::get(I&)’\n  cout << t.get(index) << endl;\n                     ^\nmain.cpp:33:11: note: candidate: double& Tensor::get(const std::vector<int>&)\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:33:11: note:   no known conversion for argument 1 from ‘I’ to ‘const std::vector<int>&’\nmain.cpp:48:26: error: no matching function for call to ‘Tensor::get(I)’\n  cin >> t2.get(I(1,2,3,4));\n                          ^\nmain.cpp:33:11: note: candidate: double& Tensor::get(const std::vector<int>&)\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:33:11: note:   no known conversion for argument 1 from ‘I’ to ‘const std::vector<int>&’\nmain.cpp:49:27: error: no matching function for call to ‘Tensor::get(I)’\n  cout << t2.get(I(1,2,3,4)) << endl;\n                           ^\nmain.cpp:33:11: note: candidate: double& Tensor::get(const std::vector<int>&)\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:33:11: note:   no known conversion for argument 1 from ‘I’ to ‘const std::vector<int>&’\n"
        ],
        [
            "9.3 (C++)",
            "湯仙兒",
            "class Complex\n{\nprivate:\n\tint r;\n\tint i;\npublic:\n\tComplex() {\n\t\tthis->r = 0;\n\t\tthis->i = 0;\n\t}\n\tComplex(int x) {\n\t\tthis->r = x;\n\t\tthis->i = 0;\n\t}\n\tComplex(int real, int imag) {\n\t\tthis->r = real;\n\t\tthis->i = imag;\n\t}\n\tComplex(Complex & c) {\n\t\tthis->r = c.r;\n\t\tthis->i = c.i;\n\t}\n\t~Complex() {};\n\tint & real() {\n\t\treturn this->r;\n\t}\n\tint & imag() {\n\t\treturn this->i;\n\t}\n\tComplex & operator +(Complex & c) {\n\t\tthis->r = this->r + c.r;\n\t\tthis->i = this->i + c.i;\n\t\treturn *this;\n\t}\n\tComplex & operator -(Complex & c) {\n\t\tthis->r = this->r - c.r;\n\t\tthis->i = this->i - c.i;\n\t\treturn *this;\n\t}\n\tComplex & operator *(Complex & c) {\n\t\tComplex res;\n\t\tres.r = this->r * c.r - this->i * c.i;\n\t\tres.i = this->r * c.i + c.r * this->i;\n\t\tthis->r = res.r;\n\t\tthis->i = res.i;\n\t\treturn *this;\n\t}\n\tComplex & operator /(Complex & c) {\n\t\tComplex res;\n\t\tres.r = (this->r * c.r + this->i * c.i) / (c.r * c.r + c.i * c.i);\n\t\tres.i = (this->r * c.i - c.r * this->i) / (c.r * c.r + c.i * c.i);\n\t\tthis->r = res.r;\n\t\tthis->i = res.i;\n\t\treturn *this;\n\t}\n\t//friend & Complex operator+(const Complex & c1, const Complex & c2);\n\tfriend Complex operator+(int&,Complex &);\n\tComplex & operator -(int v) {\n\t\tthis->r = this->r - v;\n\t\treturn *this;\n\t}\n\tbool operator ==(Complex & c) {\n\t\treturn *this == c;\n\t}\n\tbool operator !=(Complex & c) {\n\t\treturn *this != c;\n\t}\n\tComplex & operator +=(Complex & c) {\n\t\tthis->r = this->r + c.r;\n\t\tthis->i = this->i + c.i;\n\t\treturn *this;\n\t}\n\tComplex & operator -=(Complex & c) {\n\t\tthis->r = this->r - c.r;\n\t\tthis->i = this->i - c.i;\n\t\treturn *this;\n\t}\n\tComplex & operator *=(Complex & c) {\n\t\tComplex res;\n\t\tres.r = this->r * c.r - this->i * c.i;\n\t\tres.i = this->r * c.i + c.r * this->i;\n\t\tthis->r = res.r;\n\t\tthis->i = res.i;\n\t\treturn *this;\n\t}\n\tComplex & operator /=(Complex & c) {\n\t\tComplex res;\n\t\tres.r = (this->r * c.r + this->i * c.i) / (c.r * c.r + c.i * c.i);\n\t\tres.i = (this->r * c.i - c.r * this->i) / (c.r * c.r + c.i * c.i);\n\t\tthis->r = res.r;\n\t\tthis->i = res.i;\n\t\treturn *this;\n\t}\n};\n/*Complex & operator+(const Complex & c1, const Complex & c2) {\n\treturn Complex(c1.r + c2.r, c1.i + c2.i);\n}*/\nComplex operator+(int &i,Complex &c)\n{return Complex(i+c.r,c.i);} ",
            1593089974.5892425,
            0,
            "In file included from main.cpp:5:0:\nsource.cpp: In function ‘Complex operator+(int&, Complex&)’:\nsource.cpp:99:26: error: invalid initialization of non-const reference of type ‘Complex&’ from an rvalue of type ‘Complex’\n {return Complex(i+c.r,c.i);} \n                          ^\nsource.cpp:19:2: note:   initializing argument 1 of ‘Complex::Complex(Complex&)’\n  Complex(Complex & c) {\n  ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:19:22: error: no match for ‘operator+’ (operand types are ‘int’ and ‘Complex’)\n     Complex c11 = 10 + c2;\n                      ^\nIn file included from main.cpp:5:0:\nsource.cpp:98:9: note: candidate: Complex operator+(int&, Complex&) <near match>\n Complex operator+(int &i,Complex &c)\n         ^\nsource.cpp:98:9: note:   conversion of argument 1 would be ill-formed:\nmain.cpp:19:24: error: invalid initialization of non-const reference of type ‘int&’ from an rvalue of type ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4890:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4890:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4884:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4884:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4878:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(_CharT __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4878:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   ‘Complex’ is not derived from ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4872:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4872:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘const _CharT*’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4860:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4860:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4854:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4854:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4848:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4848:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4836:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, _CharT)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.h:4836:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4820:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4820:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1167:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   ‘Complex’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:53:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const _CharT* __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.tcc:1151:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘const _CharT*’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:4783:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> std::__cxx11::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)\n     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,\n     ^\n/usr/include/c++/5/bits/basic_string.h:4783:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   mismatched types ‘const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>’ and ‘int’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note: candidate: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)\n     operator+(typename move_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:1152:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   ‘Complex’ is not derived from ‘const std::move_iterator<_Iterator>’\n     Complex c11 = 10 + c2;\n                        ^\nIn file included from /usr/include/c++/5/bits/stl_algobase.h:67:0,\n                 from /usr/include/c++/5/bits/char_traits.h:39,\n                 from /usr/include/c++/5/ios:40,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note: candidate: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)\n     operator+(typename reverse_iterator<_Iterator>::difference_type __n,\n     ^\n/usr/include/c++/5/bits/stl_iterator.h:334:5: note:   template argument deduction/substitution failed:\nmain.cpp:19:24: note:   ‘Complex’ is not derived from ‘const std::reverse_iterator<_Iterator>’\n     Complex c11 = 10 + c2;\n                        ^\n"
        ],
        [
            "10.2 (C++)",
            "湯仙兒",
            "catch(NonPositiveValueException & ex) {\n\tcout << \"caught: NonPositiveValueException\" << endl;\n}\ncatch(out_of_range & ex) {\n\tcout << \"caught: out_of_range\" << endl;\n}",
            1593658947.6542773,
            100,
            "# 答案正确"
        ],
        [
            "10.1 (C++)",
            "湯仙兒",
            "#include <stdexcept>\nusing namespace std;\n\nclass MatrixSizesDoNotMatchException {};\n\ndouble Matrix :: get(int row, int column) const{\n\tif(row-1 > this->rows) throw out_of_range(\"1\");\n\tif(column-1 > this->columns) throw out_of_range(\"1\");\n\treturn this->elements[/*(row-1) **/ this->columns + column-1];\n}\nvoid Matrix :: set(int row, int column, double value) {\n\tif(row-1 > this->rows) throw out_of_range(\"1\");\n\tif(column-1 > this->columns) throw out_of_range(\"1\");\n\tthis->elements[(row-1) * this->columns + column-1] = value;\n}\nMatrix Matrix :: operator + (const Matrix & matrix2) const{\n\tMatrix m(matrix2);\n\tif(this->size(1) != matrix2.size(1) || this->size(2) != matrix2.size(2)) throw MatrixSizesDoNotMatchException();\n\tfor (int i = 0; i < matrix2.size(1) * matrix2.size(2); ++ i) {\n\t\tm.elements[i] = this->elements[i] + matrix2.get(i / this->columns, i / this->rows);\n\t}\n\treturn m;\n}",
            1593694781.4634805,
            100,
            "# 答案正确"
        ],
        [
            "2020-07-09 LAB",
            "湯仙兒",
            "#include <iostream>\nusing namespace std;\n\nclass Integer {\nprivate:\n\tstatic int data;\npublic:\n\tInteger() {\n\t\tthis->data = 0;\n\t}\n\tInteger(int num) {\n\t\tthis->data = num;\n\t}\n\tconst int & get() const{\n\t\treturn this->data;\n\t}\n\tint & operator =(int num) {\n\t\treturn this->data = num;\n\t}\n\tstatic void increase_all(int num) {\n\t\tthis->Integer::data = this->Integer::data + num;\n\t}\n\tstatic void increase_all(Integer num) {\n\t\tthis->Integer::data = this->Integer::data + num.get();\n\t}\n};\n\nostream & operator <<(ostream & out, const Integer & n) {\n\tout << n.get();\n\treturn out;\n}\n\nistream & operator >>(istream & in, Integer & n) {\n\tint tmp;\n\tin >> tmp;\n\tn = tmp;\n\treturn in;\n}",
            1594264974.7782195,
            50,
            "In file included from main.cpp:1:0:\nsource.cpp: In static member function ‘static void Integer::increase_all(int)’:\nsource.cpp:21:3: error: ‘this’ is unavailable for static member functions\n   this->Integer::data = this->Integer::data + num;\n   ^\nsource.cpp:21:25: error: ‘this’ is unavailable for static member functions\n   this->Integer::data = this->Integer::data + num;\n                         ^\nsource.cpp: In static member function ‘static void Integer::increase_all(Integer)’:\nsource.cpp:24:3: error: ‘this’ is unavailable for static member functions\n   this->Integer::data = this->Integer::data + num.get();\n   ^\nsource.cpp:24:25: error: ‘this’ is unavailable for static member functions\n   this->Integer::data = this->Integer::data + num.get();\n                         ^\n"
        ],
        [
            "15.1 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nclass Table{\nprivate:\n\tvector<string> value;\npublic:\n\tTable() {\n\t\tthis->value.push_back(0);\n\t}\n\t~Table() {\n\t\tvalue.clear();\n\t}\n\tvoid addCol(string s) {\n\t\tthis->value.push_back(s);\n\t}\n\tconst Table & operator [](int i) const{\n\t\treturn this[i];\n\t}\n\tTable & operator [](int i) {\n\t\treturn this[i];\n\t}\n\tTable & operator =(const vector<string> s) {\n\t\t//for (int i = 0; i < s.size() / 4; ++ i) {\n\t\t\tvalue.push_back(s);\n\t\t//}\n\t\treturn *this;\n\t}\n\t/*Table & operator =(const string & s) {\n\t\tvalue.push_back(s);\n\t\treturn *this;\n\t}*/\n\tTable & json() const{\n\t\tcout << \"[\";\n\t\tfor (int i = 0; i < this->value.size(); ++ i) {\n\t\t\tcout << value[i];\n\t\t\tif(i != value.size() - 1) {\n\t\t\t\tcout << \", \";\n\t\t\t}\n\t\t}\n\t\tcout << \"]\";\n\t}\n};",
            1594299568.898131,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In member function ‘Table& Table::operator=(std::vector<std::__cxx11::basic_string<char> >)’:\nsource.cpp:27:21: error: no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(const std::vector<std::__cxx11::basic_string<char> >&)’\n    value.push_back(s);\n                     ^\nIn file included from /usr/include/c++/5/vector:64:0,\n                 from source.cpp:3,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/stl_vector.h:913:7: note: candidate: void std::vector<_Tp, _Alloc>::push_back(const value_type&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]\n       push_back(const value_type& __x)\n       ^\n/usr/include/c++/5/bits/stl_vector.h:913:7: note:   no known conversion for argument 1 from ‘const std::vector<std::__cxx11::basic_string<char> >’ to ‘const value_type& {aka const std::__cxx11::basic_string<char>&}’\n/usr/include/c++/5/bits/stl_vector.h:931:7: note: candidate: void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::__cxx11::basic_string<char>; _Alloc = std::allocator<std::__cxx11::basic_string<char> >; std::vector<_Tp, _Alloc>::value_type = std::__cxx11::basic_string<char>]\n       push_back(value_type&& __x)\n       ^\n/usr/include/c++/5/bits/stl_vector.h:931:7: note:   no known conversion for argument 1 from ‘const std::vector<std::__cxx11::basic_string<char> >’ to ‘std::vector<std::__cxx11::basic_string<char> >::value_type&& {aka std::__cxx11::basic_string<char>&&}’\n"
        ],
        [
            "A.2 (C++)",
            "湯仙兒",
            "template <typename E>\nvoid LinkedList<E> :: removeAll(const E & e) {\n\tI(i, _size + 1) {\n\t\tint index = indexOf(e);\n\t\t\t//if (index == -1)\n\t\t\t\t//throw NotSuchElementException();\n\t\t\tremove(index);\n\t}\n}",
            1594867351.1701968,
            100,
            "# 答案正确"
        ],
        [
            "A.1 (C++)",
            "湯仙兒",
            "private:\n\tNode<E> * get_node(int index) const {\n\t\tif (index < 0 || index >= _size) \n\t\t\tthrow NotSuchElementException();\n\t\tif (index < _size / 2) {\n\t\t\tNode<E> * node = head;\n\t\t\tI(i, index) node = node->next_node(node - 1);\n\t\t\treturn node;\n\t\t}\n\t\telse {\n\t\t\tNode<E> * node = tail;\n\t\t\tI(i, (_size-1-index)) node = node->prev_node(node + 1);\n\t\t\treturn node;\n\t\t}\n\t}\n\npublic:\n\tE & get(int index) const {\n\t\tNode<E> * node = get_node(index);\n\t\treturn node->element;\n\t}\n\tvoid set(int index, const E & e) {\n\t\tNode<E> * node = get_node(index);\n\t\tnode->element = e;\n\t}\n\n\tE & getFirst() const {\n\t\treturn get(0);\n\t}\n\n\tE & getLast() const {\n\t\treturn get(_size - 1);\n\t}\n\n\tvoid remove (int index) {\n\t\tNode<E> * node = get_node(index);\n\t\tNode<E> * prev_node = node->prev_node(node + 1);\n\t\tNode<E> * next_node = node->next_node(node - 1);\n\t\tif (prev_node != 0) prev_node->update_next_node(node->next_node(node - 1), next_node);\n\t\tif (next_node != 0) next_node->update_prev_node(node->prev_node(node + 1), prev_node);\n\t\tif (prev_node == 0) head = next_node;\n\t\tif (next_node == 0) tail = prev_node;\n\t\tdelete node;\n\t\t-- _size;\n\t}\n\n\tvoid removeFirst () {\n\t\tremove(0);\n\t}\n\n\tvoid removeLast () {\n\t\tremove(_size-1);\n\t}\n\n\tvoid add(int index, const E & e) {\n\t\tif (index < 0 || index > _size) \n\t\t\tthrow NotSuchElementException();\n\t\tNode<E> * node = new Node<E>();\n\t\tnode->element = e;\n\t\tNode<E> * next_node = (index == _size ? 0 : get_node(index));\n\t\tNode<E> * prev_node = (next_node == 0 ? tail : next_node->prev_node(node + 1));\n\t\tnode->update_next_node(node->next_node(node - 1), next_node);\n\t\tnode->update_prev_node(node->prev_node(node + 1), prev_node);\n\t\tif (prev_node != 0) prev_node->update_next_node(node->next_node(node - 1), node);\n\t\tif (next_node != 0) next_node->update_prev_node(node->prev_node(node + 1), node);\n\t\tif (prev_node == 0) head = node;\n\t\tif (next_node == 0) tail = node;\n\t\t++ _size;\n\t}\n\n\tvoid addFirst (const E & e) {\n\t\tadd(0, e);\n\t}\n\n\tvoid addLast (const E & e) {\n\t\tadd(_size, e);\n\t}\n\n\t// copy and clear\n\n\tvoid clear() {\n\t\twhile (_size > 0) removeFirst();\n\t}\n\n\tvoid addAll(const LinkedList & list, int index=-1) {\n\t\tif (index == -1) index = _size;\n\t\tI(i, list._size) {\n\t\t\tNode<E> * node = list.get_node(i);\n\t\t\tadd(index + i, node->element);\n\t\t}\n\t}\n\n\tLinkedList(const LinkedList & list) : _size(0), head(0), tail(0) {\n\t\taddAll(list);\n\t}\n\n\tLinkedList & operator = (const LinkedList & list) {\n\t\tclear();\n\t\taddAll(list);\n\t\treturn *this;\n\t}\n\n\t~LinkedList() {\n\t\tclear();\n\t}\n\n\tint indexOf(const E & e) const {\n\t\tNode<E> * node = head;\n\t\tI(i, _size) {\n\t\t\tif (node->element == e) return i;\n\t\t\tnode = node->next_node(node - 1);\n\t\t}\n\t\treturn -1;\n\t}\n\n\tint lastIndexOf(const E & e) const {\n\t\tNode<E> * node = tail;\n\t\tI(i, _size) {\n\t\t\tif (node->element == e) return i;\n\t\t\tnode = node->prev_node(node + 1);\n\t\t}\n\t\treturn -1;\n\t}\n\n\tbool contains(const E & e) const {\n\t\treturn indexOf(e) >= 0;\n\t}\n\n\tvoid removeFirstOccurrence(const E & e) {\n\t\tint index = indexOf(e);\n\t\tif (index == -1)\n\t\t\tthrow NotSuchElementException();\n\t\tremove(index);\n\t}\n\n\tvoid removeLastOccurrence(const E & e) {\n\t\tint index = lastIndexOf(e);\n\t\tif (index == -1)\n\t\t\tthrow NotSuchElementException();\n\t\tremove(index);\n\t}",
            1594904056.6479995,
            0,
            "ASAN:SIGSEGV\n=================================================================\n==27582==ERROR: AddressSanitizer: SEGV on unknown address 0x000000001fe0 (pc 0x55e1b6f8762b bp 0x7ffdcb6350d0 sp 0x7ffdcb634f10 T0)\n    #0 0x55e1b6f8762a in Node<double>::update_prev_and_next_node(Node<double>*, Node<double>*) /home/湯仙兒/main.cpp:18\n    #1 0x55e1b6f8762a in Node<double>::update_next_node(Node<double>*, Node<double>*) /home/湯仙兒/main.cpp:26\n    #2 0x55e1b6f8762a in LinkedList<double>::add(int, double const&) /home/湯仙兒/source.cpp:64\n    #3 0x55e1b6f8762a in LinkedList<double>::addFirst(double const&) /home/湯仙兒/source.cpp:72\n    #4 0x55e1b6f8762a in main /home/湯仙兒/main.cpp:56\n    #5 0x7f49709aa82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #6 0x55e1b6f87248 in _start (/home/湯仙兒/main.out+0x1248)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /home/湯仙兒/main.cpp:18 Node<double>::update_prev_and_next_node(Node<double>*, Node<double>*)\n==27582==ABORTING\n"
        ],
        [
            "A.3 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <fstream>\n#include <vector>\n#include <string>\n#include <stdexcept>\nusing namespace std;\n\n#define I(i,n) for (size_t i = 0; i < n; ++ i)\n\nclass NoSuchKeyException {};\n\nsize_t circular_shift(size_t bits, int shift_bits) {\n\tconst int num_bits = 8 * sizeof(size_t);\n\tshift_bits = shift_bits % num_bits;\n\treturn bits << shift_bits | bits >> (num_bits - shift_bits);\n}\n\nsize_t hash_function(const int & key) {\n\tsize_t code = 0;\n\tI(i, sizeof(key))\n\t\tcode ^= circular_shift(key, i * 5);\n\treturn code;\n}\n\ntemplate <typename V>\nclass HT\n{\n\tclass Tuple\n\t{\n\tpublic:\n\t\tint key;\n\t\tV val;\n\t\tbool in_use;\n\n\t\tTuple() : in_use(false) {}\n\t};\n\n\tvector<Tuple> tuples;\n\tsize_t _size;\n\n\tsize_t canonical_index(const int & key) const {\n\t\tsize_t hash_code = hash_function(key); // needs hash_function(K)\n\t\treturn hash_code % tuples.size();\n\t}\n\n\t// the returned tuple is either empty or with the same key\n\tsize_t indexOfKey(const int & key) const {\n\t\tsize_t index = canonical_index(key);\n\t\twhile (true) { // will enter a dead loop if there is not empty tuple\n\t\t\tif (! tuples[index].in_use) return index;\n\t\t\tif (tuples[index].key == key) return index;\n\t\t\tindex = (index + 1) % tuples.size();\n\t\t}\n\t}\n\npublic:\n\tHT() : _size(0) {\n\t\ttuples.resize(2);\n\t}\n\n\tbool containsKey(const int & key) const {\n\t\tsize_t index = indexOfKey(key);\n\t\treturn tuples[index].in_use;\n\t}\n\n\tconst V & operator [] (const int & key) const {\n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\treturn tuples[index].val;\n\t}\n\n\tV & operator [] (const int & key) {\n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\treturn tuples[index].val;\n\t}\n\n\tvoid put(const int & key, const V & val) {\n\t\tsize_t index = indexOfKey(key);\n\t\ttuples[index].key = key;\n\t\ttuples[index].val = val;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\n\tvoid _double_tuples() {\n\t\tvector<Tuple> non_empty_tuples;\n\t\tI(i, tuples.size())\n\t\t\tif (tuples[i].in_use)\n\t\t\t\tnon_empty_tuples.push_back(tuples[i]);\n\t\tclear();\n\t\ttuples.resize(tuples.size() * 2);\n\t\tI(i, non_empty_tuples.size())\n\t\t\tput(non_empty_tuples[i].key, non_empty_tuples[i].val);\n\t}\n\n\tstatic bool _between(size_t hole, size_t canonical, size_t tuple_index) {\n\t\tif (hole < tuple_index)\n\t\t\treturn canonical > hole && canonical <= tuple_index;\n\t\telse\n\t\t\treturn canonical > hole || canonical <= tuple_index;\n\t}\n\n\tvoid remove(const int & key) { \n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\ttuples[index].in_use = false;\n\t\t-- _size;\n\t\t// if there is a hole between a tuple and its canonical position\n\t\t// move the tuple to the hole\n\t\tsize_t hole = index;\n\t\tsize_t tuple_index = hole;\n\t\twhile (true) {\n\t\t\ttuple_index = (tuple_index + 1) % tuples.size();\n\t\t\tif (! tuples[tuple_index].in_use) return;\n\t\t\tsize_t canonical = canonical_index(tuples[tuple_index].key);\n\t\t\tif (_between(hole, canonical, tuple_index)) continue;\n\t\t\ttuples[hole] = tuples[tuple_index];\n\t\t\thole = tuple_index;\n\t\t\ttuples[hole].in_use = false;\n\t\t}\n\t}\n\n\tsize_t size() const { return _size; }\n\n\tvoid clear() {\n\t\tI(i, tuples.size())\n\t\t\ttuples[i].in_use = false;\n\t\t_size = 0;\n\t}\n\n\ttemplate <typename V2>\n\tfriend ostream & operator << (ostream & out, const HT<V2> & dict);\n\n\ttemplate <typename V2>\n\tfriend istream & operator >> (istream & in, HT<V2> & dict);\n\n\tvoid _inspect() const {\n\t\tI(i, tuples.size())\n\t\t\tif (tuples[i].in_use)\n\t\t\t\tcout << \"#\" << i << \" C\" << canonical_index(tuples[i].key) \n\t\t\t\t\t<< \" \" << tuples[i].key << \" \" << tuples[i].val << endl;\n\t}\n\t\n\tvector<int> getKeys() {\n\t\tvector<int> keys;\n\t\tI(i, tuples.size())\n\t\t\tkeys[i] = i;\n\t\treturn keys;\n\t}\n};\n\ntemplate <typename V>\nostream & operator << (ostream & out, const HT<V> & dict) {\n\tout << dict.size() << endl;\n\tI(i, dict.tuples.size())\n\t\tif (dict.tuples[i].in_use)\n\t\t\tout << dict.tuples[i].key << \"\\t\" << dict.tuples[i].val << endl;\n\treturn out;\n}\n\ntemplate <typename V>\nistream & operator >> (istream & in, HT<V> & dict) {\n\tdict.clear();\n\tsize_t size;\n\tin >> size;\n\tI(i, size) {\n\t\tint key;\n\t\tV val;\n\t\tin >> key >> val;\n\t\tdict.put(key, val);\n\t}\n\treturn in;\n}\n\ninline HT<string> load_dict() {\n\tHT<string> dict;\n\tifstream in(\"my_dict.txt\");\n\tif (in.fail())\n\t\tthrow runtime_error(\"Failed to load dictionary\");\n\tin >> dict;\n\tin.close();\n\treturn dict;\n}\n\ninline void save_dict(const HT<string> & dict) {\n\tofstream out(\"my_dict.txt\");\n\tif (out.fail())\n\t\tthrow runtime_error(\"Failed to save dictionary\");\n\tout << dict;\n\tout.close();\n}",
            1595473931.1262705,
            93,
            "ASAN:SIGSEGV\n=================================================================\n==4730==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x555a37148703 bp 0x7ffd2544bc80 sp 0x7ffd2544b880 T0)\n    #0 0x555a37148702 in HT<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getKeys() /home/湯仙兒/source.cpp:155\n    #1 0x555a37148702 in main /home/湯仙兒/main.cpp:26\n    #2 0x7f80fb3b482f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #3 0x555a37147028 in _start (/home/湯仙兒/main.out+0x2028)\n\nAddressSanitizer can not provide additional info.\nSUMMARY: AddressSanitizer: SEGV /home/湯仙兒/source.cpp:155 HT<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::getKeys()\n==4730==ABORTING\n"
        ],
        [
            "A.4 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <fstream>\n#include <vector>\n#include <string>\n#include <stdexcept>\nusing namespace std;\n\n#define I(i,n) for (size_t i = 0; i < n; ++ i)\n\nclass NoSuchKeyException {};\n\nsize_t circular_shift(size_t bits, int shift_bits) {\n\tconst int num_bits = 8 * sizeof(size_t);\n\tshift_bits = shift_bits % num_bits;\n\treturn bits << shift_bits | bits >> (num_bits - shift_bits);\n}\n\nsize_t hash_function(const string & key) {\n\tsize_t code = 0;\n\tI(i, key.size())\n\t\tcode ^= circular_shift(key[i], i * 5);\n\treturn code;\n}\n\nsize_t hash_function(const int & key) {\n\tsize_t code = 0;\n\tI(i, sizeof(key))\n\t\tcode ^= circular_shift(key, i * 5);\n\treturn code;\n}\n\nclass HT\n{\n\tclass Tuple\n\t{\n\tpublic:\n\t\tint key1;\n\t\tint val1;\n\t\tstring key2;\n\t\tstring val2;\n\t\tbool in_use;\n\n\t\tTuple() : in_use(false) {}\n\t};\n\n\tvector<Tuple> tuples;\n\tsize_t _size;\n\n\tsize_t canonical_index(const int & key) const {\n\t\tsize_t hash_code = hash_function(key); // needs hash_function(K)\n\t\treturn hash_code % tuples.size();\n\t}\n\t\n\tsize_t canonical_index(const string & key) const {\n\t\tsize_t hash_code = hash_function(key); // needs hash_function(K)\n\t\treturn hash_code % tuples.size();\n\t}\n\n\t// the returned tuple is either empty or with the same key\n\tsize_t indexOfKey(const int & key) const {\n\t\tsize_t index = canonical_index(key);\n\t\twhile (true) { // will enter a dead loop if there is not empty tuple\n\t\t\tif (! tuples[index].in_use) return index;\n\t\t\tif (tuples[index].key1 == key) return index;\n\t\t\tindex = (index + 1) % tuples.size();\n\t\t}\n\t}\n\n\tsize_t indexOfKey(const string & key) const {\n\t\tsize_t index = canonical_index(key);\n\t\twhile (true) { // will enter a dead loop if there is not empty tuple\n\t\t\tif (! tuples[index].in_use) return index;\n\t\t\tif (tuples[index].key2 == key) return index;\n\t\t\tindex = (index + 1) % tuples.size();\n\t\t}\n\t}\n\t\npublic:\n\tHT() : _size(0) {\n\t\ttuples.resize(2);\n\t}\n\n\tbool containsKey(const int & key) const {\n\t\tsize_t index = indexOfKey(key);\n\t\treturn tuples[index].in_use;\n\t}\n\t\n\tbool containsKey(const string & key) const {\n\t\tsize_t index = indexOfKey(key);\n\t\treturn tuples[index].in_use;\n\t}\n\n\tconst int & operator [] (const int & key) const {\n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\treturn tuples[index].val1;\n\t}\n\t\n\tconst string & operator [] (const string & key) const {\n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\treturn tuples[index].val2;\n\t}\n\n\tint & operator [] (const int & key) {\n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\treturn tuples[index].val1;\n\t}\n\t\n\tstring & operator [] (const string & key) {\n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\treturn tuples[index].val2;\n\t}\n\n\tvoid put(const int & key, const int & val) {\n\t\tsize_t index = indexOfKey(key);\n\t\ttuples[index].key1 = key;\n\t\ttuples[index].val1 = val;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\t\n\tvoid put(const int & key, const string & val) {\n\t\tsize_t index = indexOfKey(key);\n\t\ttuples[index].key1 = key;\n\t\ttuples[index].val2 = val;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\t\n\tvoid put(const string & key, const string & val) {\n\t\tsize_t index = indexOfKey(key);\n\t\ttuples[index].key2 = key;\n\t\ttuples[index].val2 = val;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\t\n\tvoid put(const string & key, const int & val) {\n\t\tsize_t index = indexOfKey(key);\n\t\ttuples[index].key2 = key;\n\t\ttuples[index].val1 = val;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\n\tvoid _double_tuples() {\n\t\tvector<Tuple> non_empty_tuples;\n\t\tI(i, tuples.size())\n\t\t\tif (tuples[i].in_use)\n\t\t\t\tnon_empty_tuples.push_back(tuples[i]);\n\t\tclear();\n\t\ttuples.resize(tuples.size() * 2);\n\t\tI(i, non_empty_tuples.size())\n\t\t\tput(non_empty_tuples[i].key1, non_empty_tuples[i].val1);\n\t}\n\n\tstatic bool _between(size_t hole, size_t canonical, size_t tuple_index) {\n\t\tif (hole < tuple_index)\n\t\t\treturn canonical > hole && canonical <= tuple_index;\n\t\telse\n\t\t\treturn canonical > hole || canonical <= tuple_index;\n\t}\n\n\tvoid remove(const int & key) { \n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\ttuples[index].in_use = false;\n\t\t-- _size;\n\t\t// if there is a hole between a tuple and its canonical position\n\t\t// move the tuple to the hole\n\t\tsize_t hole = index;\n\t\tsize_t tuple_index = hole;\n\t\twhile (true) {\n\t\t\ttuple_index = (tuple_index + 1) % tuples.size();\n\t\t\tif (! tuples[tuple_index].in_use) return;\n\t\t\tsize_t canonical = canonical_index(tuples[tuple_index].key1);\n\t\t\tif (_between(hole, canonical, tuple_index)) continue;\n\t\t\ttuples[hole] = tuples[tuple_index];\n\t\t\thole = tuple_index;\n\t\t\ttuples[hole].in_use = false;\n\t\t}\n\t}\n\n\tsize_t size() const { return _size; }\n\n\tvoid clear() {\n\t\tI(i, tuples.size())\n\t\t\ttuples[i].in_use = false;\n\t\t_size = 0;\n\t}\n\n\tfriend ostream & operator << (ostream & out, const HT & dict);\n\n\tfriend istream & operator >> (istream & in, HT & dict);\n\n\tvoid _inspect() const {\n\t\tI(i, tuples.size())\n\t\t\tif (tuples[i].in_use)\n\t\t\t\tcout << \"#\" << i << \" C\" << canonical_index(tuples[i].key1) \n\t\t\t\t\t<< \" \" << tuples[i].key1 << \" \" << tuples[i].val1 << endl;\n\t}\n\t\n\t\n};\n\nostream & operator << (ostream & out, const HT & dict) {\n\tout << dict.size() << endl;\n\tI(i, dict.tuples.size())\n\t\tif (dict.tuples[i].in_use)\n\t\t\tout << dict.tuples[i].key2 << \"\\t\" << dict.tuples[i].val1 << endl;\n\treturn out;\n}\n\nistream & operator >> (istream & in, HT & dict) {\n\tdict.clear();\n\tsize_t size;\n\tin >> size;\n\tI(i, size) {\n\t\tint key;\n\t\tint val;\n\t\tin >> key >> val;\n\t\tdict.put(key, val);\n\t}\n\treturn in;\n}\n\ninline HT load_dict() {\n\tHT dict;\n\tifstream in(\"my_dict.txt\");\n\tif (in.fail())\n\t\tthrow runtime_error(\"Failed to load dictionary\");\n\tin >> dict;\n\tin.close();\n\treturn dict;\n}\n\ninline void save_dict(const HT & dict) {\n\tofstream out(\"my_dict.txt\");\n\tif (out.fail())\n\t\tthrow runtime_error(\"Failed to save dictionary\");\n\tout << dict;\n\tout.close();\n}",
            1595843465.9823065,
            0,
            "main.cpp: In function ‘int main()’:\nmain.cpp:33:26: error: no matching function for call to ‘std::__cxx11::basic_string<char>::basic_string(int&)’\n  cout << (string)map[key3] << endl;\n                          ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:534:9: note: candidate: template<class _InputIterator, class> std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(_InputIterator, _InputIterator, const _Alloc&)\n         basic_string(_InputIterator __beg, _InputIterator __end,\n         ^\n/usr/include/c++/5/bits/basic_string.h:534:9: note:   template argument deduction/substitution failed:\nmain.cpp:33:26: note:   candidate expects 3 arguments, 1 provided\n  cout << (string)map[key3] << endl;\n                          ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:511:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       basic_string(basic_string&& __str, const _Alloc& __a)\n       ^\n/usr/include/c++/5/bits/basic_string.h:511:7: note:   candidate expects 2 arguments, 1 provided\n/usr/include/c++/5/bits/basic_string.h:507:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       basic_string(const basic_string& __str, const _Alloc& __a)\n       ^\n/usr/include/c++/5/bits/basic_string.h:507:7: note:   candidate expects 2 arguments, 1 provided\n/usr/include/c++/5/bits/basic_string.h:503:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::initializer_list<_Tp>, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())\n       ^\n/usr/include/c++/5/bits/basic_string.h:503:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::initializer_list<char>’\n/usr/include/c++/5/bits/basic_string.h:476:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       basic_string(basic_string&& __str) noexcept\n       ^\n/usr/include/c++/5/bits/basic_string.h:476:7: note:   no known conversion for argument 1 from ‘int’ to ‘std::__cxx11::basic_string<char>&&’\n/usr/include/c++/5/bits/basic_string.h:464:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, _CharT, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]\n       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())\n       ^\n/usr/include/c++/5/bits/basic_string.h:464:7: note:   candidate expects 3 arguments, 1 provided\n/usr/include/c++/5/bits/basic_string.h:454:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>] <near match>\n       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())\n       ^\n/usr/include/c++/5/bits/basic_string.h:454:7: note:   conversion of argument 1 would be ill-formed:\nmain.cpp:33:26: error: invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]\n  cout << (string)map[key3] << endl;\n                          ^\nIn file included from /usr/include/c++/5/string:52:0,\n                 from /usr/include/c++/5/bits/locale_classes.h:40,\n                 from /usr/include/c++/5/bits/ios_base.h:41,\n                 from /usr/include/c++/5/ios:42,\n                 from /usr/include/c++/5/ostream:38,\n                 from /usr/include/c++/5/iostream:39,\n                 from source.cpp:1,\n                 from main.cpp:1:\n/usr/include/c++/5/bits/basic_string.h:444:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _CharT*, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]\n       basic_string(const _CharT* __s, size_type __n,\n       ^\n/usr/include/c++/5/bits/basic_string.h:444:7: note:   candidate expects 3 arguments, 1 provided\n/usr/include/c++/5/bits/basic_string.h:426:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]\n       basic_string(const basic_string& __str, size_type __pos,\n       ^\n/usr/include/c++/5/bits/basic_string.h:426:7: note:   candidate expects 4 arguments, 1 provided\n/usr/include/c++/5/bits/basic_string.h:410:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type = long unsigned int]\n       basic_string(const basic_string& __str, size_type __pos,\n       ^\n/usr/include/c++/5/bits/basic_string.h:410:7: note:   candidate expects 3 arguments, 1 provided\n/usr/include/c++/5/bits/basic_string.h:398:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       basic_string(const basic_string& __str)\n       ^\n/usr/include/c++/5/bits/basic_string.h:398:7: note:   no known conversion for argument 1 from ‘int’ to ‘const std::__cxx11::basic_string<char>&’\n/usr/include/c++/5/bits/basic_string.h:390:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string(const _Alloc&) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       basic_string(const _Alloc& __a)\n       ^\n/usr/include/c++/5/bits/basic_string.h:390:7: note:   no known conversion for argument 1 from ‘int’ to ‘const std::allocator<char>&’\n/usr/include/c++/5/bits/basic_string.h:379:7: note: candidate: std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::basic_string() [with _CharT = char; _Traits = std::char_traits<char>; _Alloc = std::allocator<char>]\n       basic_string()\n       ^\n/usr/include/c++/5/bits/basic_string.h:379:7: note:   candidate expects 0 arguments, 1 provided\nmain.cpp:34:23: error: invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’\n  cout << (int)map[key4] << endl;\n                       ^\n"
        ],
        [
            "A.5 (C++)",
            "湯仙兒",
            "#include <iostream>\n#include <fstream>\n#include <vector>\n#include <string>\n#include <stdexcept>\nusing namespace std;\n\n#define I(i,n) for (size_t i = 0; i < n; ++ i)\n\nclass NoSuchKeyException {};\n\nsize_t circular_shift(size_t bits, int shift_bits) {\n\tconst int num_bits = 8 * sizeof(size_t);\n\tshift_bits = shift_bits % num_bits;\n\treturn bits << shift_bits | bits >> (num_bits - shift_bits);\n}\n\nsize_t hash_function(const string & key) {\n\tsize_t code = 0;\n\tI(i, key.size())\n\t\tcode ^= circular_shift(key[i], i * 5);\n\treturn code;\n}\n\nclass HT\n{\n\tclass Tuple\n\t{\n\tpublic:\n\t\tstring key;\n\t\tstring val;\n\t\tbool in_use;\n\n\t\tTuple() : in_use(false) {}\n\t};\n\n\tvector<Tuple> tuples;\n\tsize_t _size;\n\n\tsize_t canonical_index(const string & key) const {\n\t\tsize_t hash_code = hash_function(key); // needs hash_function(K)\n\t\treturn hash_code % tuples.size();\n\t}\n\n\t// the returned tuple is either empty or with the same key\n\tsize_t indexOfKey(const string & key) const {\n\t\tsize_t index = canonical_index(key);\n\t\twhile (true) { // will enter a dead loop if there is not empty tuple\n\t\t\tif (! tuples[index].in_use) return index;\n\t\t\tif (tuples[index].key == key) return index;\n\t\t\tindex = (index + 1) % tuples.size();\n\t\t}\n\t}\n\npublic:\n\tHT() : _size(0) {\n\t\ttuples.resize(2);\n\t}\n\n\tbool containsKey(const string & key) const {\n\t\tsize_t index = indexOfKey(key);\n\t\treturn tuples[index].in_use;\n\t}\n\t\n\tvoid put(const string & key, const int & val) {\n\t\tstd::string v = std::to_string(val);\n\t\tsize_t index = indexOfKey(key);\n\t\ttuples[index].key = key;\n\t\ttuples[index].val = v;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\t\n\tvoid put(const int & key, const int & val) {\n\t\tstd::string v = std::to_string(val);\n\t\tstd::string k = std::to_string(key);\n\t\tsize_t index = indexOfKey(k);\n\t\ttuples[index].key = k;\n\t\ttuples[index].val = v;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\t\n\tvoid put(const int & key, const string & val) {\n\t\tstd::string k = std::to_string(key);\n\t\tsize_t index = indexOfKey(k);\n\t\ttuples[index].key = k;\n\t\ttuples[index].val = val;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\t\n\tvoid put(const string & key, const string & val) {\n\t\tsize_t index = indexOfKey(key);\n\t\ttuples[index].key = key;\n\t\ttuples[index].val = val;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}\n\t\n\tclass TupleRef\n\t{\n\tpublic:\n\t\tHT * dict;\n\t\tTuple * tuple;\n\t\tconst string & key;\n\t\t\n\t\tTupleRef(HT * dict, Tuple * tuple, const string & key) : dict(dict), tuple(tuple), key(key) {}\n\t\t\n\t\toperator int() const {\n\t\t\tif(tuple == 0) throw NoSuchKeyException();\n\t\t\tint res = std::stoi(tuple->val);\n\t\t\treturn res;\n\t\t}\n\t\t\n\t\toperator string() const {\n\t\t\tif(tuple == 0) throw NoSuchKeyException();\n\t\t\t\treturn tuple->val;\n\t\t}\n\t\t\n\t\tTupleRef & operator = (const string & val) {\n\t\t\tif(tuple == 0) dict->put(key, val);\n\t\t\telse tuple->val = val;\n\t\t\treturn *this;\n\t\t}\n\t\t\n\t\tTupleRef & operator = (const int & val) {\n\t\t\tstd::string v = std::to_string(val);\n\t\t\tif(tuple == 0) dict->put(key, v);\n\t\t\telse tuple->val = v;\n\t\t\treturn *this;\n\t\t}\n\t\t\n\t\tvoid operator ~ () {\n\t\t\tif(tuple == 0) throw NoSuchKeyException();\n\t\t\tdict->remove(key);\n\t\t}\n\t};\n\n\t/*const TupleRef operator [] (const string & key) const {\n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\treturn TupleRef(this, &tuples[index], key);\n\t}\n\t\n\tconst TupleRef operator [] (const int & key) const {\n\t\tstd::string k = std::to_string(key);\n\t\tsize_t index = indexOfKey(k);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\treturn TupleRef(this, &tuples[index], k);\n\t}*/\n\t\n\tTupleRef operator [] (const string & key) {\n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\treturn TupleRef(this, 0, key);\n\t\treturn TupleRef(this, &tuples[index], key);\n\t}\n\n\t\n\tTupleRef operator [] (const int & key) {\n\t\tstd::string k = std::to_string(key);\n\t\tsize_t index = indexOfKey(k);\n\t\tif (! tuples[index].in_use) \n\t\t\treturn TupleRef(this, 0, k);\n\t\treturn TupleRef(this, &tuples[index], k);\n\t}\n\n\t/*void put(const string & key, const string & val) {\n\t\tsize_t index = indexOfKey(key);\n\t\ttuples[index].key = key;\n\t\ttuples[index].val = val;\n\t\tif (tuples[index].in_use) return;\n\t\ttuples[index].in_use = true;\n\t\t++ _size;\n\t\t// make sure empty > size / 2\n\t\tif (2 * _size > tuples.size())\n\t\t\t_double_tuples();\n\t}*/\n\n\tvoid _double_tuples() {\n\t\tvector<Tuple> non_empty_tuples;\n\t\tI(i, tuples.size())\n\t\t\tif (tuples[i].in_use)\n\t\t\t\tnon_empty_tuples.push_back(tuples[i]);\n\t\tclear();\n\t\ttuples.resize(tuples.size() * 3);\n\t\tI(i, non_empty_tuples.size()) {\n\t\t\tTupleRef(this, &non_empty_tuples[i], non_empty_tuples[i].key);\n\t\t\t//tuples[i].key = non_empty_tuples[i].key;\n\t\t\t//tuples[i].val = non_empty_tuples[i].val;\n\t\t}\n\t}\n\n\tstatic bool _between(size_t hole, size_t canonical, size_t tuple_index) {\n\t\tif (hole < tuple_index)\n\t\t\treturn canonical > hole && canonical <= tuple_index;\n\t\telse\n\t\t\treturn canonical > hole || canonical <= tuple_index;\n\t}\n\n\tvoid remove(const string & key) { \n\t\tsize_t index = indexOfKey(key);\n\t\tif (! tuples[index].in_use) \n\t\t\tthrow NoSuchKeyException();\n\t\ttuples[index].in_use = false;\n\t\t-- _size;\n\t\t// if there is a hole between a tuple and its canonical position\n\t\t// move the tuple to the hole\n\t\tsize_t hole = index;\n\t\tsize_t tuple_index = hole;\n\t\twhile (true) {\n\t\t\ttuple_index = (tuple_index + 1) % tuples.size();\n\t\t\tif (! tuples[tuple_index].in_use) return;\n\t\t\tsize_t canonical = canonical_index(tuples[tuple_index].key);\n\t\t\tif (_between(hole, canonical, tuple_index)) continue;\n\t\t\ttuples[hole] = tuples[tuple_index];\n\t\t\thole = tuple_index;\n\t\t\ttuples[hole].in_use = false;\n\t\t}\n\t}\n\n\tsize_t size() const { return _size; }\n\n\tvoid clear() {\n\t\tI(i, tuples.size())\n\t\t\ttuples[i].in_use = false;\n\t\t_size = 0;\n\t}\n\n\tfriend ostream & operator << (ostream & out, const HT & dict);\n\n\tfriend istream & operator >> (istream & in, HT & dict);\n\n\tvoid _inspect() const {\n\t\tI(i, tuples.size())\n\t\t\tif (tuples[i].in_use)\n\t\t\t\tcout << \"#\" << i << \" C\" << canonical_index(tuples[i].key) \n\t\t\t\t\t<< \" \" << tuples[i].key << \" \" << tuples[i].val << endl;\n\t}\n};\n\nostream & operator << (ostream & out, const HT & dict) {\n\tout << dict.size() << endl;\n\tI(i, dict.tuples.size())\n\t\tif (dict.tuples[i].in_use) {\n\t\t\tout << dict.tuples[i].key << \"\\t\" << dict.tuples[i].val << endl;\n\t\t}\n\treturn out;\n}\n\nistream & operator >> (istream & in, HT & dict) {\n\tdict.clear();\n\tsize_t size;\n\tin >> size;\n\tI(i, size) {\n\t\tstring key;\n\t\tstring val;\n\t\tin >> key >> val;\n\t\tdict.put(key, val);\n\t}\n\treturn in;\n}\n\ninline HT load_dict() {\n\tHT dict;\n\tifstream in(\"my_dict.txt\");\n\tif (in.fail())\n\t\tthrow runtime_error(\"Failed to load dictionary\");\n\tin >> dict;\n\tin.close();\n\treturn dict;\n}\n\ninline void save_dict(const HT & dict) {\n\tofstream out(\"my_dict.txt\");\n\tif (out.fail())\n\t\tthrow runtime_error(\"Failed to save dictionary\");\n\tout << dict;\n\tout.close();\n}",
            1596199959.693995,
            0,
            "=================================================================\n==18913==ERROR: AddressSanitizer: stack-buffer-underflow on address 0x7ffefb0bf668 at pc 0x564860a66fef bp 0x7ffefb0bf5c0 sp 0x7ffefb0bf5b0\nREAD of size 8 at 0x7ffefb0bf668 thread T0\n    #0 0x564860a66fee in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const /usr/include/c++/5/bits/basic_string.h:716\n    #1 0x564860a66fee in hash_function(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/湯仙兒/source.cpp:20\n    #2 0x564860a6a934 in HT::canonical_index(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /home/湯仙兒/source.cpp:41\n    #3 0x564860a6a934 in HT::indexOfKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const /home/湯仙兒/source.cpp:47\n    #4 0x564860a6a934 in HT::put(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/湯仙兒/source.cpp:106\n    #5 0x564860a6a934 in HT::TupleRef::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/湯仙兒/source.cpp:138\n    #6 0x564860a682ae in main /home/湯仙兒/main.cpp:23\n    #7 0x7f093a66f82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)\n    #8 0x564860a66ea8 in _start (/home/湯仙兒/main.out+0x1ea8)\n\nAddress 0x7ffefb0bf668 is located in stack of thread T0 at offset 8 in frame\n    #0 0x564860a6a80f in HT::TupleRef::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) /home/湯仙兒/source.cpp:137\n\n  This frame has 1 object(s):\n    [32, 56) 'non_empty_tuples'\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism or swapcontext\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-underflow /usr/include/c++/5/bits/basic_string.h:716 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::size() const\nShadow bytes around the buggy address:\n  0x10005f60fe70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005f60fe80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005f60fe90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005f60fea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10005f60feb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x10005f60fec0: 00 00 00 00 00 00 00 00 00 00 00 00 f1[f1]f1 f1\n  0x10005f60fed0: 00 00 00 f4 f3 f3 f3 f3 00 00 00 00 00 00 00 00\n  0x10005f60fee0: 00 00 00 00 f1 f1 f1 f1 04 f4 f4 f4 f2 f2 f2 f2\n  0x10005f60fef0: 04 f4 f4 f4 f2 f2 f2 f2 04 f4 f4 f4 f2 f2 f2 f2\n  0x10005f60ff00: 04 f4 f4 f4 f2 f2 f2 f2 00 00 00 00 f2 f2 f2 f2\n  0x10005f60ff10: 00 00 00 00 f2 f2 f2 f2 00 00 00 00 f2 f2 f2 f2\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Heap right redzone:      fb\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack partial redzone:   f4\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n==18913==ABORTING\n"
        ]
    ],
    "table_name": "答案"
}