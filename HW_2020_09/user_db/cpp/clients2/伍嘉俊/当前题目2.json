{
    "__update_time__": 1591241718.830084,
    "field_names": [
        "题目名",
        "问题",
        "主程序",
        "答案",
        "评语",
        "开始时间",
        "截止时间",
        "分数",
        "提交时间"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "text",
        "text",
        "time",
        "time",
        "number",
        "time"
    ],
    "rows": [
        [
            "7.2 (C++)",
            "完成split函数<br>\n\n<b>EXAMPLE INPUT<B>\n<pre>\n123   abcde   567     \n   ds   tete dfsd   567   \n  asd  te sdfs   567\n</pre>\n\n<b>EXAMPLE OUTPUT</b>\n<pre>\n123\nabcde\n567\nds\ntete\ndfsd\n567\nasd\nte\nsdfs\n567\n</pre>",
            "#include \"source.cpp\"\n#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nvoid test() {\n\tstring line;\n\tgetline(cin, line);\n\tvector<string> words = split(line);\n\tfor (int i = 0; i < words.size(); ++ i) {\n\t\tcout << words[i] << endl;\n\t}\n}\n\nint main() {\n\ttest();\n\ttest();\n\ttest();\n}",
            "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nvector <string> split(const string & line, const string & delimiter = \" \") {\n\tvector <string> words;\n\tint st = 0;\n\twhile (st < line.size()) {\n\t\tint end = line.find(delimiter, st);\n\t\tif (end == st) st += delimiter.size();\n\t\telse {\n\t\t\tif (end == -1) {\n\t\t\t\twords.push_back(line.substr(st));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\twords.push_back(line.substr(st, end-st));\n\t\t\tst = end + delimiter.size();\n\t\t}\n\t}\n\treturn words;\n}",
            "In file included from main.cpp:1:0:\nsource.cpp:1:1: error: ‘vector’ does not name a type\n vector <string> split(const string & line, const string & delimiter = \" \") {\n ^\nmain.cpp: In function ‘void test()’:\nmain.cpp:10:35: error: ‘split’ was not declared in this scope\n  vector<string> words = split(line);\n                                   ^\n",
            1591236000,
            1591242000,
            0,
            1591241642.6982172
        ]
    ]
}