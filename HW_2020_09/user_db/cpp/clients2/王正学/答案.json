{
    "__update_time__": 1593078672.0707312,
    "field_names": [
        "题目名",
        "用户名",
        "答案",
        "提交时间",
        "分数",
        "评语"
    ],
    "field_types": [
        "text",
        "text",
        "text",
        "time",
        "number",
        "text"
    ],
    "foreign_keys": {},
    "primary_keys": [],
    "rows": [
        [
            "测试2",
            "王正学",
            "#include <iostream>\nusing namespace std;\nstruct Word{\n\tchar a[50];\n};\nint main(){\n\tstruct Word word[100];\n\tstruct Word mid;\n    int i=0,j=0;\n    char c;\n\twhile((c = getchar()) != '\\n'){\n\t\tif(c == ' '){\n\t\t\tword[i].a[j] = 0;\n\t\t\t++i;\n\t\t\tj = 0;\n\t\t} \n\t\tword[i].a[j] = c;\n\t\t++j;\n\n\t}\n\tword[i].a[j] = 0;\n\n\tfor(int k=0;k<i-1;++k){\n\t\tfor(int l = k+1;l<i;++l){\n\t\t\tif(word[k].a[0] > word[l].a[0]){\n\t\t\t\tmid = word[k];\n\t\t\t\tword[k] = word[l];\n\t\t\t\tword[l] = mid;\n\t\t\t}\n\n\t\t\tif(word[k].a[0] == word[l].a[0]){\n\t\t\t\tif(word[k].a[1] > word[l].a[1]){\n\t\t\t\t\tmid = word[k];\n\t\t\t\t    word[k] = word[l];\n\t\t\t\t    word[l] = mid;\n\t\t\t\t}\n\n\t\t\t\tif(word[k].a[1] == word[l].a[1]){\n\t\t\t\t\tif(word[k].a[2] > word[l].a[2]){\n\t\t\t\t\t\tmid = word[k];\n\t\t\t\t        word[k] = word[l];\n\t\t\t\t        word[l] = mid;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(word[k].a[2] == word[l].a[2]){\n\t\t\t\t\t\tif(word[k].a[3] > word[l].a[3]){\n\t\t\t\t\t\t\tmid = word[k];\n\t\t\t\t            word[k] = word[l];\n\t\t\t\t            word[l] = mid;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(word[k].a[3] == word[l].a[3]){\n\t\t\t\t\t\t\tif(word[k].a[4] > word[l].a[4]){\n\t\t\t\t\t\t\t\tmid = word[k];\n\t\t\t\t                word[k] = word[l];\n\t\t\t\t                word[l] = mid;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int p=0;p<i+1;++p){\n\t\tprintf(\"%s \",word[p].a);\n\t}\n\tprintf(\"\\n\");\n\n\n\n\n\n}",
            1587609673.3621228,
            50,
            "Segmentation fault (core dumped)\n"
        ],
        [
            "1.2 (C++)",
            "王正学",
            "#include <iostream>\n#include <cstring>\nusing namespace std;\nclass School{\n\tpublic:\n\tchar name[50];\n\tint age;\n\tSchool(){\n\t\tstrcpy(this->name,\"NO_NAME\");\n\t\tthis->age = 0;\n\t}\n\tvoid setName(char w[]){\n\t\tstrcpy(this->name,w);\n\t}\n\tvoid setAge(int year){\n\t\tthis->age = year;\n\t}\n\tvoid operator ++ (){\n\t\tthis->age = this->age + 1;\n\t}\n};",
            1588214540.6472912,
            100,
            "# 答案正确"
        ],
        [
            "2020/05/08",
            "王正学",
            "int * data1;\ndouble & Tensor_get(int dimensions,int sizes[],double data[], int x0, int x1, int x2, int x3){\n\tif(dimensions == 2){\n\t\tdata1[0] = x0;\n\t\tdata1[1] = x1;\n\t}\n\t\n\tif(dimensions == 3){\n\t\tdata1[0] = x0;\n\t\tdata1[1] = x2;\n\t\tdata1[3] = x3;\n\t}\n\t\n\tif(dimensions == 4){\n\t\tdata1[0] = x0;\n\t\tdata1[1] = x1;\n\t\tdata1[2] = x2;\n\t\tdata1[3] = x3;\n\t}\n\treturn &data1;\n}",
            1588909183.3314924,
            0,
            "In file included from main.cpp:1:0:\nsource.cpp: In function ‘double& Tensor_get(int, int*, double*, int, int, int, int)’:\nsource.cpp:20:10: error: invalid initialization of non-const reference of type ‘double&’ from an rvalue of type ‘int**’\n  return &data1;\n          ^\n"
        ],
        [
            "2020/05/14",
            "王正学",
            "#include <iostream>\nusing namespace std;\n\nvoid Tensor_print(int dimensions,const int sizes[],const double data[]){\n\tif(dimensions == 1){\n\t\tcout<<\"Tensor of 5\"<<endl;\n\t\tfor(int i=0;i<5;++i){\n\t\t\tcout<<data[i]<<endl;\n\t\t}\n\t}\n\t\n\tif(dimensions == 2){\n\t\tcout<<\"Tensor of 3x4\"<<endl;\n\t\tfor(int i=0;i<3;++i){\n\t\t\tfor(int j=0;j<4;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\t\n\tif(dimensions == 3){\n\t\tcout<<\"Tensor of 3x4x5\"<<endl;\n\t\tcout<<\"data[0]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t\tcout<<\"data[1]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t\tcout<<\"data[2]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\t\n\tif(dimensions == 4){\n\t\tcout<<\"Tensor of 2x3x4x5\"<<endl;\n\t\tcout<<\"data[0][0]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t   }\n\t\tcout<<\"data[0][1]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t   }\n\t\tcout<<\"data[0][2]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t   }\n\t\tcout<<\"data[1][0]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t   }\n\t\tcout<<\"data[1][1]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t   }\n\t\tcout<<\"data[1][2]\"<<endl;\n\t\tfor(int i=0;i<4;++i){\n\t\t\tfor(int j=0;j<5;++j){\n\t\t\t\tcout<<\"    \"<<data[0];\n\t\t\t}\n\t\t\tcout<<endl;\n\t   }\n\t}\n}",
            1589425037.105064,
            100,
            "# 答案正确"
        ],
        [
            "8.6 (C++)",
            "王正学",
            "#include <iostream>\nclass MyTensor : public Tensor<double>\n{\n\tvector<int> sizes;\n\tMyTensor(vector<int> sizes){\n\t\tint a = 0;\n\t}\n\tvirtual double & get(vector<int> & indexes) {\n\t\treturn indexes;\n\t}\n}",
            1592451246.2285328,
            0,
            "In file included from main.cpp:14:0:\nsource.cpp: In constructor ‘MyTensor::MyTensor(std::vector<int>)’:\nsource.cpp:5:29: error: no matching function for call to ‘Tensor<double>::Tensor()’\n  MyTensor(vector<int> sizes){\n                             ^\nmain.cpp:10:2: note: candidate: Tensor<E>::Tensor(std::vector<int>) [with E = double]\n  Tensor(vector<int> sizes) : sizes(sizes) {}\n  ^\nmain.cpp:10:2: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor<double>::Tensor(const Tensor<double>&)\n class Tensor\n       ^\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor<double>::Tensor(Tensor<double>&&)\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nIn file included from main.cpp:14:0:\nsource.cpp: In member function ‘virtual double& MyTensor::get(std::vector<int>&)’:\nsource.cpp:9:10: error: invalid initialization of reference of type ‘double&’ from expression of type ‘std::vector<int>’\n   return indexes;\n          ^\nmain.cpp: At global scope:\nmain.cpp:16:13: error: invalid declarator before ‘I’\n vector<int> I(int i1, int i2=-1, int i3=-1, int i4=-1)\n             ^\nmain.cpp: In function ‘int main()’:\nmain.cpp:27:22: error: ‘I’ was not declared in this scope\n  MyTensor mt1(I(3,4,5));\n                      ^\nmain.cpp:27:11: error: cannot declare variable ‘mt1’ to be of abstract type ‘MyTensor’\n  MyTensor mt1(I(3,4,5));\n           ^\nIn file included from main.cpp:14:0:\nsource.cpp:2:7: note:   because the following virtual functions are pure within ‘MyTensor’:\n class MyTensor : public Tensor<double>\n       ^\nmain.cpp:11:14: note: \tE& Tensor<E>::get(const std::vector<int>&) [with E = double]\n  virtual E & get(const vector<int> & indexes) = 0;\n              ^\nmain.cpp:32:11: error: cannot declare variable ‘mt2’ to be of abstract type ‘MyTensor’\n  MyTensor mt2(I(2,3,4,5));\n           ^\n"
        ],
        [
            "9.1 (C++)",
            "王正学",
            "class Circle\n{\n\tpublic:\n\tint num;\n\t\n\tCircle(double num):num(num){};\n\n\tint operator < (Circle a2){\n\t\treturn this->num < a2.num;\n\t}\n\t\n\tint operator <= (Circle a2){\n\t\treturn (this->num < a2.num || this->num == a2.num);\n\t}\n\t\n\tint operator == (Circle a2){\n\t\treturn this->num == a2.num;\n\t}\n\t\n\tint operator != (Circle a2){\n\t\treturn this->num != a2.num;\n\t}\n\t\n\tint operator > (Circle a2){\n\t\treturn this->num > a2.num;\n\t}\n\t\n\tint operator >= (Circle a2){\n\t\treturn (this->num > a2.num || this->num == a2.num);\n\t}\n};\n\t",
            1592627695.4384165,
            100,
            "# 答案正确"
        ],
        [
            "9.2 (C++)",
            "王正学",
            "class I : public Tensor\n{\n\tpublic:\n\tvector<int>sizes;\n\t\n\tI(int a1,int a2 = -1,int a3 = -1,int a4 = -1){\n\t  this->sizes.push_back(a1);\n\t  if(a2 != -1) this->sizes.push_back(a2);\n\t  if(a3 != -1) this->sizes.push_back(a3);\n\t  if(a4 != -1) this->sizes.push_back(a4);\n\t}\n\t\n\toperator vector<int>(){\n\t  return this->sizes;\n\t}\n\t\n\toperator const vector<int>(){\n\t  return this->sizes;\n\t}\n\t\n\t\n};",
            1592657846.273895,
            0,
            "In file included from main.cpp:38:0:\nsource.cpp: In constructor ‘I::I(int, int, int, int)’:\nsource.cpp:6:47: error: no matching function for call to ‘Tensor::Tensor()’\n  I(int a1,int a2 = -1,int a3 = -1,int a4 = -1){\n                                               ^\nmain.cpp:27:2: note: candidate: Tensor::Tensor(std::vector<int>)\n  Tensor(vector<int> sizes) {\n  ^\nmain.cpp:27:2: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor::Tensor(const Tensor&)\n class Tensor\n       ^\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp:5:7: note: candidate: Tensor::Tensor(Tensor&&)\nmain.cpp:5:7: note:   candidate expects 1 argument, 0 provided\nmain.cpp: In function ‘int main()’:\nmain.cpp:44:20: error: conversion from ‘I’ to ‘const std::vector<int>’ is ambiguous\n  cin >> t.get(index);\n                    ^\nIn file included from main.cpp:38:0:\nsource.cpp:17:2: note: candidate: I::operator const std::vector<int>()\n  operator const vector<int>(){\n  ^\nsource.cpp:13:2: note: candidate: I::operator std::vector<int>()\n  operator vector<int>(){\n  ^\nmain.cpp:33:11: note:   initializing argument 1 of ‘double& Tensor::get(const std::vector<int>&)’\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:45:21: error: conversion from ‘I’ to ‘const std::vector<int>’ is ambiguous\n  cout << t.get(index) << endl;\n                     ^\nIn file included from main.cpp:38:0:\nsource.cpp:17:2: note: candidate: I::operator const std::vector<int>()\n  operator const vector<int>(){\n  ^\nsource.cpp:13:2: note: candidate: I::operator std::vector<int>()\n  operator vector<int>(){\n  ^\nmain.cpp:33:11: note:   initializing argument 1 of ‘double& Tensor::get(const std::vector<int>&)’\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:48:26: error: conversion from ‘I’ to ‘const std::vector<int>’ is ambiguous\n  cin >> t2.get(I(1,2,3,4));\n                          ^\nIn file included from main.cpp:38:0:\nsource.cpp:17:2: note: candidate: I::operator const std::vector<int>()\n  operator const vector<int>(){\n  ^\nsource.cpp:13:2: note: candidate: I::operator std::vector<int>()\n  operator vector<int>(){\n  ^\nmain.cpp:33:11: note:   initializing argument 1 of ‘double& Tensor::get(const std::vector<int>&)’\n  double & get(const vector<int> & indexes) {\n           ^\nmain.cpp:49:27: error: conversion from ‘I’ to ‘const std::vector<int>’ is ambiguous\n  cout << t2.get(I(1,2,3,4)) << endl;\n                           ^\nIn file included from main.cpp:38:0:\nsource.cpp:17:2: note: candidate: I::operator const std::vector<int>()\n  operator const vector<int>(){\n  ^\nsource.cpp:13:2: note: candidate: I::operator std::vector<int>()\n  operator vector<int>(){\n  ^\nmain.cpp:33:11: note:   initializing argument 1 of ‘double& Tensor::get(const std::vector<int>&)’\n  double & get(const vector<int> & indexes) {\n           ^\n"
        ],
        [
            "9.4 (C++)",
            "王正学",
            "class Complex\n{\n\tdouble real,imag;\npublic:\n\tComplex( double r=0, double i=0):real(r),imag(i){ };\n\tfriend ostream & operator<<( ostream & out,Complex & c);\n\tfriend istream & operator>>( istream & in,Complex & c);\n\t\n    \n\tComplex operator + (Complex & c2){\n\t\tComplex c3;\n\t\tc3.real = this->real + c2.real;\n\t\tc3.imag = this->imag + c2.imag;\n\t\treturn c3;\n\t}\n\tComplex operator - (Complex & c2){\n\t\tComplex c3;\n\t\tc3.real = this->real - c2.real;\n\t\tc3.imag = this->imag - c2.imag;\n\t\treturn c3;\n\t}\n};\n\nistream & operator >> (istream & in,Complex & c){\n\t   in >> c.real >> c.imag;\n\t   return in;\n   }\n\nostream & operator << (ostream & out,Complex & c){\n\t\tout << c.real <<\" + \"<< c.imag <<\" i\";\n\t\treturn out;\n\t}\n",
            1593075792.465543,
            100,
            "# 答案正确"
        ],
        [
            "9.5 (C++)",
            "王正学",
            "class Complex\n{\n\tdouble real,imag;\n\npublic:\n\tComplex( double r=0, double i=0):real(r),imag(i){ };\n\tComplex & operator ++ (){\n\t\t++(this->real);\n\t\treturn *this;\n\t}\n\tComplex & operator ++ (int){\n\t\t//Complex mid(*this);\n\t\t//++(this->real);\n\t\treturn *this;\n\t}\n\tfriend ostream & operator<<( ostream & out,Complex & c);\n\tfriend istream & operator>>( istream & in,Complex & c);\n\n\t/*double operator = (double & real){\n\t   real = (this->real + 1);\n\t   return real;\n    }*/\n    operator double(){\n    \treturn this->real+1;\n    } \n};\n\nistream & operator >> (istream & in,Complex & c){\n\t   in >> c.real >> c.imag;\n\t   return in;\n   }\n\nostream & operator << (ostream & out,Complex & c){\n\t\tout << c.real <<\" + \"<< c.imag <<\" i\";\n\t\treturn out;\n\t}\n\n",
            1593078671.3127272,
            100,
            "# 答案正确"
        ]
    ],
    "table_name": "答案"
}